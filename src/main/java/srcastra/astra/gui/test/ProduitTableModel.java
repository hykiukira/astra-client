/* * PorduitTableModel.java * * Created on 13 octobre 2002, 12:50 */package srcastra.astra.gui.test;import javax.swing.*;import javax.swing.table.AbstractTableModel;import java.util.Vector;import srcastra.astra.gui.modules.mainScreenModule.DossierMainScreenModule;import srcastra.astra.sys.classetransfert.dossier.avion.*;import srcastra.astra.sys.classetransfert.dossier.*;import srcastra.astra.sys.classetransfert.dossier.bateau.*;import srcastra.astra.sys.classetransfert.dossier.train.*;import srcastra.astra.sys.classetransfert.dossier.voitureLocation.*;import srcastra.astra.sys.classetransfert.Loginusers_T;import java.util.*;/** * * @author  Administrateur */public class ProduitTableModel extends AbstractTableModel implements InterfaceModel{    protected Loginusers_T currentUser;    protected int m_productID;    GereStatut gerestatut;        /** Creates a new instance of PorduitTableModel */    public ProduitTableModel(DossierMainScreenModule parent,Loginusers_T currentuser, int productID) {      this.parent=parent;      this.currentUser = currentuser;      this.m_productID = productID;      this.m_columns = new ColumnData[] {        new ColumnData(loadName("01"),12,JLabel.CENTER),        new ColumnData(loadName("02"),60,JLabel.LEFT),        new ColumnData(loadName("03"),60,JLabel.LEFT),          new ColumnData(loadName("04"),12,JLabel.CENTER),        new ColumnData(loadName("05"),12,JLabel.LEFT),        new ColumnData(loadName("06"),100,JLabel.LEFT),        new ColumnData(loadName("07"),40,JLabel.RIGHT),         new ColumnData(loadName("08"),15,JLabel.CENTER),        new ColumnData(loadName("09"),15,JLabel.CENTER),        new ColumnData(loadName("10"),40,JLabel.RIGHT),        new ColumnData(loadName("11"),12,JLabel.CENTER),        new ColumnData(loadName("12"),50,JLabel.RIGHT),        new ColumnData(loadName("13"),30,JLabel.RIGHT),        new ColumnData(loadName("14"),30,JLabel.CENTER),        new ColumnData(loadName("15"),70,JLabel.RIGHT)      };      gerestatut=new GereStatut(currentUser.getLangage());      loadData();    }        public ColumnData m_columns[];                          private String loadName(String key) {        String retVal = "";        try {            retVal = java.util.ResourceBundle.getBundle("srcastra/astra/locale/tableHeader/dossier/DossierProduitIndexTableTableHeader", currentUser.getLangage()).getString(key);        }        catch (java.util.MissingResourceException e) {        }        finally {            return retVal;        }    }     private void fillVector(produit_T prod,String name){                        String tmp;                        srcastra.astra.sys.classetransfert.dossier.ProduitAffichage prodaff = null;                        if(prod.getAt_cleunik()>0) prod.setIsattached(true);                        if(prod.produitaffichage!=null) {                            prodaff = prod.produitaffichage;                            prodaff.setTr(ProduitAffichage.getProductTypeName(name, currentUser.getLangage()));                            prodaff.setStatus(gerestatut.getStatut(prod.getStatut()));                            if(prod.getGroupdec().getGnfrtvaComptabiliserVente()==0)                                            prodaff.setM_tva(new srcastra.astra.sys.classetransfert.dossier.ColorData(new Double(0d)));                            m_vector.addElement(prod.produitaffichage);                              if(prod.getSup_reduc()!=null) {                                ArrayList tmparray=new ArrayList();                                Hashtable tmptable=prod.getSup_reduc();                                for(Enumeration enu=tmptable.keys();enu.hasMoreElements();){                                    Sup_reduc_T tmpsupreduc=(Sup_reduc_T)prod.getSup_reduc().get(enu.nextElement());                                    if(!tmpsupreduc.isDeleted()) {                                        if(tmpsupreduc.getReduc()==1) tmp="-";                                        else tmp="+";                                         String tmp2=tmpsupreduc.getGroupdec().getGntvainclusvente()==1?"INC":"N.INC";                                        srcastra.astra.sys.classetransfert.dossier.ProduitAffichage tmpProd=null;                                        tmpProd=new srcastra.astra.sys.classetransfert.dossier.ProduitAffichage(tmpsupreduc, tmp,prod.getFrnom(),                                                                     prod.getGroupe_produit_nom(),                                                                     ProduitAffichage.getProductTypeName(name, currentUser.getLangage()),                                                                     "",tmpsupreduc.getFreeLibelle(),                                                                     tmpsupreduc.getPrix(),tmpsupreduc.qua,tmpsupreduc.pax,tmpsupreduc.prct,"ok",tmpsupreduc.getValeur_tot(),                                                                      prod.getAt_cleunik(),prod.getTypeDeProduitCleunik(),                                                                     tmpsupreduc.getGroupdec().getValeurGenFloat1(),                                                                     tmp2,tmpsupreduc.getValeur_tot_tva_inc());                                                                           tmpProd.setStatus(gerestatut.getStatut(tmpsupreduc.getSup_statutCleuUnik()));                                        tmpProd.setReducsup(true);                                        tmparray.add(tmpProd);                                       // m_vector.addElement(tmpProd);                                         if(tmpsupreduc.getGroupdec().getGnfrtvaComptabiliserVente()==0)                                            tmpProd.setM_tva(new srcastra.astra.sys.classetransfert.dossier.ColorData(new Double(0d)));                                                                            }                                }                                Collections.sort(tmparray,new srcastra.astra.gui.sys.comparator.SupereducComparator(0,true));                                if(tmparray!=null){                                    for(int m=0;m<tmparray.size();m++){                                        m_vector.addElement(tmparray.get(m));                                     }                                                              }                            }                        }    }    protected Vector m_vector;    public ArrayList loadData(){        m_vector=new Vector();        String tmp=null;        if(parent.getTicket()!=null && m_productID == InterfaceProduit.AV){             fillVector(parent.getTicket(),ProduitAffichage.NAME_AVIATION);        }        else if(parent.getAssurance()!=null && m_productID == InterfaceProduit.AS){             fillVector(parent.getAssurance(),ProduitAffichage.NAME_ASSURANCE);        }        else if(parent.getBrochure()!=null && m_productID == InterfaceProduit.BRO){              fillVector(parent.getBrochure(),ProduitAffichage.NAME_BROCHURE);        }        else if(parent.getHotel()!=null && m_productID == InterfaceProduit.HO){               fillVector(parent.getHotel(),ProduitAffichage.NAME_HOTEL);        }        else if(parent.getBateau()!=null && m_productID == InterfaceProduit.BA){               fillVector(parent.getBateau(),ProduitAffichage.NAME_BATEAU);        }                     else if(parent.getTrain()!=null && m_productID == InterfaceProduit.TR){               fillVector(parent.getTrain(),ProduitAffichage.NAME_TRAIN);        }              else if(parent.getVoitureLocation()!=null && m_productID == InterfaceProduit.VO){              fillVector(parent.getVoitureLocation(),ProduitAffichage.NAME_VOITURE);        }           else if(parent.getCar()!=null && m_productID == InterfaceProduit.CAR){              fillVector(parent.getCar(),ProduitAffichage.NAME_CAR);        }         else if(parent.getTaxi()!=null && m_productID == InterfaceProduit.TAX){               fillVector(parent.getTaxi(),ProduitAffichage.NAME_TAXI);        }         else if(parent.getDiverst()!=null && m_productID == InterfaceProduit.DIV){              fillVector(parent.getDiverst(),ProduitAffichage.NAME_DIV);        }     return new ArrayList();    }                    public String getColumnName(int column)    {      return m_columns[column].c_title;      }    public int getColumnCount() {        return m_columns.length;    }        public int getRowCount() {        return m_vector==null ? 0:m_vector.size();    }        public Object getValueAt(int param, int param1) {        if(param<0 || param1>getColumnCount())            return "";        ProduitAffichage row=(ProduitAffichage)m_vector.elementAt(param);                switch(param1)        {            case 0:return row.tp;            case 1:return row.fr;            case 2:return row.grp_prod;            case 3:return row.tr;            case 4:return row.ac;            case 5:return row.lib;            case 6:return row.prixu2;             case 7:return row.qua;            case 8:return row.nbrpa;            case 9:return row.prct;            case 10:return row.status;            case 11:return row.prixtot;            case 12:return row.m_tva;            case 13:return row.m_tvaInc;            case 14:return row.m_total_tva_Inc;        }        return "";    }    public ProduitAffichage getClassAffichage(int ligne){         ProduitAffichage row=(ProduitAffichage)m_vector.elementAt(ligne);         return row;            }     public int searchAWord(Object word, int column){         return 0;     }     public boolean isCellEditable(int nrow,int ncol){         /*if(ncol==7||ncol==8||ncol==9)             return true;         else*/             return false;   }   public void setValueAt(Object value,int nrow,int ncol){       if(nrow < 0 || nrow>=getRowCount())           return;       ProduitAffichage row=(ProduitAffichage)m_vector.get(nrow);       String svalue=value.toString();       switch(ncol)       {           case 7:               try{                   row.qua=new Integer(svalue);                   break;                                  }               catch(NumberFormatException ne)               {                   break;               }                         case 8:                try{                   row.nbrpa=new Integer(svalue);                   break;                                  }               catch(NumberFormatException ne)               {                   break;               }                         case 9:                try{                   row.prct=new Float(svalue);                   break;                                  }               catch(NumberFormatException ne)               {                   break;               }           case 11:               try{                   row.prixtot.m_data=new Float(svalue);                   break;                                  }               catch(NumberFormatException ne)               {                   break;               }          case 14:               try{                   row.m_total_tva_Inc.m_data=new Float(svalue);                   break;                                  }               catch(NumberFormatException ne)               {                   break;               }                             }          }      public void loadData(ArrayList tmparray, String proposedResult) {   }      public void sortByColonne(int col, JTable m_table) {   }      public boolean isM_sortAsc() {       return true;   }      public void setM_sortAsc(boolean m_sortAsc) {   }      public java.util.ArrayList getArray() {       return null;   }      public java.util.ArrayList getM_vector() {    return null;   }      public void setM_vector(java.util.ArrayList m_vector) {       }      /** Getter for property m_login.    * @return Value of property m_login.    */   public srcastra.astra.sys.classetransfert.Loginusers_T getM_login() {    return null;   }      public srcastra.astra.sys.rmi.astrainterface getM_serveur() {    return null;   }      /** Getter for property m_textField.    * @return Value of property m_textField.    */   public java.awt.Component getM_textField() {    return null;   }      /** Setter for property m_login.    * @param m_login New value of property m_login.    */   public void setM_login(srcastra.astra.sys.classetransfert.Loginusers_T m_login) {   }      /** Setter for property m_serveur.    * @param m_serveur New value of property m_serveur.    */   public void setM_serveur(srcastra.astra.sys.rmi.astrainterface m_serveur) {   }      /** Setter for property m_textField.    * @param m_textField New value of property m_textField.    */   public void setM_textField(java.awt.Component m_textField) {   }      public srcastra.astra.gui.test.ColumnData[] getM_columns() {   return null;   }      public void setM_columns(srcastra.astra.gui.test.ColumnData[] m_columns) {       }   public ListeObjectAffichage getClassAffichage2(int ligne){       return null;   }   DossierMainScreenModule parent;    }