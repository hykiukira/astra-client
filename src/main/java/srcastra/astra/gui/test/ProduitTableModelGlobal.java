/* * PorduitTableModel.java * * Created on 13 octobre 2002, 12:50 */package srcastra.astra.gui.test;import javax.swing.*;import javax.swing.table.AbstractTableModel;import java.util.Vector;import srcastra.astra.gui.modules.mainScreenModule.DossierMainScreenModule;import srcastra.astra.sys.classetransfert.dossier.avion.*;import srcastra.astra.sys.classetransfert.dossier.*;import srcastra.astra.sys.classetransfert.dossier.assurance.*;import srcastra.astra.sys.classetransfert.dossier.brochure.*;import srcastra.astra.sys.classetransfert.dossier.hotel.*;import srcastra.astra.sys.classetransfert.dossier.bateau.*;import srcastra.astra.sys.classetransfert.dossier.train.*;import srcastra.astra.sys.classetransfert.dossier.voitureLocation.*;import srcastra.astra.sys.classetransfert.Loginusers_T;import java.util.*;import javax.swing.JOptionPane;import srcastra.astra.sys.classetransfert.dossier.taxi.*;import srcastra.astra.sys.*;/**  * * @author  Administrateur */public class ProduitTableModelGlobal extends AbstractTableModel implements InterfaceModel{        protected Loginusers_T currentUser;    GereStatut gerestatut;        /** Creates a new instance of PorduitTableModel */    public ProduitTableModelGlobal(DossierMainScreenModule parent, Loginusers_T currentuser) {      this.currentUser = currentuser;      this.parent=parent;      m_columns = new ColumnData[]  {          new ColumnData(loadName("01"),12,JLabel.CENTER),          new ColumnData(loadName("02"),60,JLabel.LEFT),          new ColumnData(loadName("03"),60,JLabel.LEFT),          new ColumnData(loadName("04"),18,JLabel.CENTER),          new ColumnData(loadName("05"),12,JLabel.LEFT),          new ColumnData(loadName("06"),94,JLabel.LEFT),          new ColumnData(loadName("07"),40,JLabel.RIGHT),          new ColumnData(loadName("08"),15,JLabel.CENTER),          new ColumnData(loadName("09"),15,JLabel.CENTER),          new ColumnData(loadName("10"),40,JLabel.RIGHT),          new ColumnData(loadName("11"),12,JLabel.CENTER),          new ColumnData(loadName("12"),50,JLabel.RIGHT),          new ColumnData(loadName("13"),30,JLabel.RIGHT),          new ColumnData(loadName("14"),30,JLabel.CENTER),          new ColumnData(loadName("15"),68,JLabel.RIGHT),          new ColumnData(loadName("16"),10,JLabel.CENTER),      };      gerestatut=new GereStatut(currentUser.getLangage());      loadData();    }    public ColumnData m_columns[];    private String loadName(String key) {        String retVal = "";        try {            retVal = java.util.ResourceBundle.getBundle("srcastra/astra/locale/tableHeader/dossier/DossierProduitIndexTableTableHeader", currentUser.getLangage()).getString(key);        }        catch (java.util.MissingResourceException e) {        }        finally {            return retVal;        }    }    protected Vector m_vector;    protected Vector m_vector2;    private void fillVector(Hashtable hash,String name){         srcastra.astra.sys.classetransfert.dossier.ProduitAffichage prodaff = null;          if( hash !=null){             System.out.println("\n\n[*********]Taille de la table "+hash.size());                       for(Enumeration enu=hash.keys();enu.hasMoreElements();){                produit_T prod =(produit_T)hash.get(enu.nextElement());                //if(prod.produitaffichage==null){                    prod.prepareAffichage();                //}                if(!prod.isDeleted()){                    prodaff = prod.produitaffichage;                    prodaff.setStatus(gerestatut.getStatut(prod.getStatut()));                    prodaff.setTr(ProduitAffichage.getProductTypeName(name, currentUser.getLangage()));                    if(prod.getGroupdec().getGnfrtvaComptabiliserVente()==0)                                            prodaff.setM_tva(new srcastra.astra.sys.classetransfert.dossier.ColorData(new Double(0d)));                    m_vector.addElement(prod.produitaffichage);                  }            }        }          }    public ArrayList loadData(){        m_vector=new Vector();        String tmp=null;        System.out.println("\n\n[*******]Ok je rentre dans le loadata ProduitTableModelGlobal");        Hashtable table = null;        Hashtable tmptable = null;        Sup_reduc_T tmpsupreduc = null;        srcastra.astra.sys.classetransfert.dossier.ProduitAffichage tmpProd = null;        srcastra.astra.sys.classetransfert.dossier.ProduitAffichage prodaff = null;        Hashtable fraisDossier=null;        if(parent.getDossier().getFraisDossier()!=null){           fraisDossier=parent.getDossier().getFraisDossier();           for(Enumeration enum5=fraisDossier.keys();enum5.hasMoreElements();){              Frais_T frais=(Frais_T)fraisDossier.get(enum5.nextElement());               if(frais.getProduitaff()==null)                  frais.prepareAffichage() ;              if(!frais.isDeleted())                m_vector.add(frais.getProduitaff());           }        }       fillVector(parent.getDossier().getAvionTicket(),ProduitAffichage.NAME_AVIATION);       fillVector(parent.getDossier().getAssurance(),ProduitAffichage.NAME_ASSURANCE);       fillVector(parent.getDossier().getBrochure(),ProduitAffichage.NAME_BROCHURE);          fillVector(parent.getDossier().getHotel(),ProduitAffichage.NAME_HOTEL);       fillVector(parent.getDossier().getBateau(),ProduitAffichage.NAME_BATEAU);       fillVector(parent.getDossier().getTrain(),ProduitAffichage.NAME_TRAIN);        fillVector(parent.getDossier().getVoitureLocation(),ProduitAffichage.NAME_VOITURE);         fillVector(parent.getDossier().getTaxi(),ProduitAffichage.NAME_TAXI);       fillVector(parent.getDossier().getCar(),ProduitAffichage.NAME_CAR);       fillVector(parent.getDossier().getDivers(),ProduitAffichage.NAME_DIV);        Collections.sort(m_vector,new srcastra.astra.gui.sys.comparator.ProduitComparator(0,true));        m_vector2=new Vector();        for(int p=0;p<m_vector.size();p++){        m_vector2.add(( srcastra.astra.sys.classetransfert.dossier.ProduitAffichage)m_vector.get(p));        produit_T produit= (produit_T)(( srcastra.astra.sys.classetransfert.dossier.ProduitAffichage)m_vector.get(p)).getParent();        if(produit.getSup_reduc()!=null) {                        ArrayList tmparray=new ArrayList();                        tmptable = produit.getSup_reduc();                        for(Enumeration enum2=tmptable.keys();enum2.hasMoreElements();){                            tmpsupreduc=(Sup_reduc_T)produit.getSup_reduc().get(enum2.nextElement());                            if(!tmpsupreduc.isDeleted()){                                if(tmpsupreduc.getReduc()==1) tmp="-";                                else tmp="+";                                 String tmp2=tmpsupreduc.getGroupdec().getGntvainclusvente()==1?"INC":"N.INC";                                tmpProd=new  srcastra.astra.sys.classetransfert.dossier.ProduitAffichage(tmpsupreduc, tmp,produit.getFrnom(), produit.getGroupe_produit_nom(),produit.getTypeDeProduitNom(),"",tmpsupreduc.getFreeLibelle(),                                                             tmpsupreduc.getAt_val_vente(),tmpsupreduc.qua,tmpsupreduc.pax,tmpsupreduc.prct,"ok",tmpsupreduc.getValeur_tot(),                                                             produit.getAt_cleunik(), produit.getTypeDeProduitCleunik(),tmpsupreduc.getGroupdec().getValeurGenFloat1(),                                                             tmp2,tmpsupreduc.getValeur_tot_tva_inc());                                   tmpProd.setReducsup(true);                                tmpProd.setStatus(gerestatut.getStatut(tmpsupreduc.getSup_statutCleuUnik()));                                if(tmpsupreduc.getGroupdec().getGnfrtvaComptabiliserVente()==0)                                            tmpProd.setM_tva(new srcastra.astra.sys.classetransfert.dossier.ColorData(new Double(0d)));                                tmparray.add(tmpProd);                                                            }                        }                        Collections.sort(tmparray,new srcastra.astra.gui.sys.comparator.SupereducComparator(0,true));                        if(tmparray!=null){                          for(int m=0;m<tmparray.size();m++){                              m_vector2.addElement(tmparray.get(m));                           }                                                    }                    }         else             Logger.getDefaultLogger().log(Logger.LOG_WARNING,"\nYO\nYO\nYOvaleur des sup null dans produittableglobal");        }        return new ArrayList();        /////// HOTEL //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////                       /* if(parent.getDossier().getHotel() !=null){             table=parent.getDossier().getHotel();            System.out.println("\n\n[*********]Taille de la table "+table.size());                        for(Enumeration enu=table.keys();enu.hasMoreElements();){                Hotel_T hot =(Hotel_T)table.get(enu.nextElement());                if(hot.produitaffichage==null){                    hot.prepareAffichage();                }                if(!hot.isDeleted()){                    prodaff = hot.produitaffichage;                    prodaff.setTr(ProduitAffichage.getProductTypeName(ProduitAffichage.NAME_HOTEL, currentUser.getLangage()));                    m_vector.addElement(hot.produitaffichage);                                      if(hot.getSup_reduc()!=null) {                        tmptable = hot.getSup_reduc();                        for(Enumeration enum2=tmptable.keys();enum2.hasMoreElements();){                            tmpsupreduc=(Sup_reduc_T)hot.getSup_reduc().get(enum2.nextElement());                            if(!tmpsupreduc.isDeleted()){                                if(tmpsupreduc.getReduc()==1) tmp="-";                                else tmp="+";                                 String tmp2=tmpsupreduc.getSoumis_tva()==1?"O":"N";                                tmpProd=new ProduitAffichage(tmpsupreduc, tmp,hot.getFrnom(), hot.getGroupe_produit_nom(),"HOT","",tmpsupreduc.getFreeLibelle(),                                                             tmpsupreduc.getPrix(),1,1,100,"ok",tmpsupreduc.getValeur_tot(),                                                             hot.getAt_cleunik(), hot.getTypeDeProduitCleunik(),tmpsupreduc.getParent().getGroupdec().getValeurGenFloat1(),                                                             tmp2,tmpsupreduc.getValeur_tot_tva_inc());                                   tmpProd.setReducsup(true);                                m_vector.addElement(tmpProd);                             }                        }                    }                 }            }        }*/        /////// SUIVANT //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////                                            }           public int searchAWord(Object word, int column){       return 0;   }    public String getColumnName(int column)    {      return m_columns[column].c_title;      }    public int getColumnCount() {        return m_columns.length;    }        public int getRowCount() {        return m_vector2==null ? 0:m_vector2.size();    }        public Object getValueAt(int param, int param1) {        if(param<0 || param1>getColumnCount())            return "";        srcastra.astra.sys.classetransfert.dossier.ProduitAffichage row=(srcastra.astra.sys.classetransfert.dossier.ProduitAffichage)m_vector2.elementAt(param);                switch(param1)        {          /*  case 0:return row.tp;            case 1:return row.fr;            case 2:return row.grp_prod;            case 3:return row.tr;            case 4:return row.ac;            case 5:return row.lib;            case 6:return row.prixu2;             case 7:return row.qua;            case 8:return row.nbrpa;            case 9:return row.prct;            case 10:return row.status;            case 11:return row.prixtot;*/                        case 0:return row.tp;            case 1:return row.fr;            case 2:return row.grp_prod;            case 3:return row.tr;            case 4:return row.ac;            case 5:return row.lib;            case 6:return row.prixu2;             case 7:return row.qua;            case 8:return row.nbrpa;            case 9:return row.prct;            case 10:return row.status;            case 11:return row.prixtot;            case 12:return row.m_tva;            case 13:return row.m_tvaInc;            case 14:return row.m_total_tva_Inc;            case 15:return row.m_delete;        }         return "";    }    public ProduitAffichage getClassAffichage(int ligne){         ProduitAffichage row=(ProduitAffichage)m_vector2.elementAt(ligne);         return row;            }      public ListeObjectAffichage getClassAffichage2(int ligne){         return null;     }    public boolean isCellEditable(int nrow,int ncol){         if(ncol==15)             return true;         else             return false;   }    public void setValueAt(Object value, int nRow, int nCol) {    if (nRow < 0 || nRow>=getRowCount())      return;    srcastra.astra.sys.classetransfert.dossier.ProduitAffichage row = (srcastra.astra.sys.classetransfert.dossier.ProduitAffichage)m_vector2.elementAt(nRow);    String svalue = value.toString();    switch (nCol) {        case 15:            //   if(row.getParent().getTypeDeProduitCleunik()!=produit_T.FRAIS)               row.m_delete =(Boolean)value;                break;    }    }       DossierMainScreenModule parent;               public Object getObject(int index) {        return m_vector2.get(index);    }        public void loadData(ArrayList tmparray, String proposedResult) {    }        public void sortByColonne(int col, JTable m_table) {    }        public boolean isM_sortAsc() {        return false;    }        public void setM_sortAsc(boolean m_sortAsc) {    }        public java.util.ArrayList getArray() {        return null;    }        public java.util.ArrayList getM_vector() {        return null;    }        public void setM_vector(java.util.ArrayList m_vector) {    }        /** Getter for property m_login.     * @return Value of property m_login.     */    public srcastra.astra.sys.classetransfert.Loginusers_T getM_login() {        return null;    }        public srcastra.astra.sys.rmi.astrainterface getM_serveur() {        return null;    }        /** Getter for property m_textField.     * @return Value of property m_textField.     */    public java.awt.Component getM_textField() {        return null;    }        /** Setter for property m_login.     * @param m_login New value of property m_login.     */    public void setM_login(srcastra.astra.sys.classetransfert.Loginusers_T m_login) {    }        /** Setter for property m_serveur.     * @param m_serveur New value of property m_serveur.     */    public void setM_serveur(srcastra.astra.sys.rmi.astrainterface m_serveur) {    }        /** Setter for property m_textField.     * @param m_textField New value of property m_textField.     */    public void setM_textField(java.awt.Component m_textField) {    }        public srcastra.astra.gui.test.ColumnData[] getM_columns() {        return null;    }        public void setM_columns(srcastra.astra.gui.test.ColumnData[] m_columns) {    }    }