/* * TableManage.java * * Created on 24 octobre 2002, 9:14 */package srcastra.astra.gui.sys.utils;import srcastra.astra.sys.classetransfert.dossier.avion.*;import srcastra.astra.sys.classetransfert.dossier.*;import srcastra.astra.gui.modules.mainScreenModule.DossierMainScreenModule;import srcastra.astra.gui.test.InterfaceModel;import srcastra.astra.sys.*;/** * * @author  Thomas */public class TableManage {        /** Creates a new instance of TableManage */    public TableManage() {    }    public static String deleteFromTable(java.awt.Component compoment,DossierMainScreenModule parent,javax.swing.JTable grp_Table_ProduitIndex){                String returnvalue=null;                int cleparent=grp_Table_ProduitIndex.getSelectedRow();                System.out.println("\n\n\n[+++++++++++++cle renvoyée"+cleparent);                InterfaceModel model=(InterfaceModel)grp_Table_ProduitIndex.getModel();                ProduitAffichage affiche=model.getClassAffichage(cleparent);                Long l=new Long(affiche.getParentkey());                  int rep;                java.util.Hashtable hash=parent.getDossier().returnCorrectArrayList(model.getClassAffichage(cleparent).getParentType());                InterfaceProduit tmp = null;                if(hash!=null)                             tmp=(InterfaceProduit)hash.get(l);                if (tmp == null){                    int type = model.getClassAffichage(cleparent).getParentType();                    switch (type) {                        case InterfaceProduit.AV :                            tmp=parent.getTicket();                            break;                        case InterfaceProduit.AS :                            tmp=parent.getAssurance();                            break;                        case InterfaceProduit.BRO :                            tmp=parent.getBrochure();                            break;                        case InterfaceProduit.BA :                            tmp=parent.getBateau();                            break;                        case InterfaceProduit.HO :                            tmp=parent.getHotel();                            break;                        case InterfaceProduit.VO :                            tmp=parent.getVoitureLocation();                            break;                        case InterfaceProduit.TR:                            tmp=parent.getTrain();                            break;                         case InterfaceProduit.TAX:                            tmp=parent.getTaxi();                            break;                    }                }                if(tmp.isIsnewreccord()){                    if(affiche.isReducsup()){                        String managertitle="";                        String managertext="";                        if(affiche.tp.equals("-")){                            managertitle="eff_reduc";                            managertext="eff_reduc_text";                        }                        else if(affiche.tp.equals("+")){                            managertitle="eff_sup";                            managertext="eff_sup_text";                          }                           tmp.getSup_reduc().remove(new Long(affiche.getParent().getAt_cleunik()));                            returnvalue="s";                    }                    else{                        if(parent.getDossier().returnCorrectArrayList(model.getClassAffichage(cleparent).getParentType())!=null){                             parent.getDossier().returnCorrectArrayList(model.getClassAffichage(cleparent).getParentType()).remove(l);                         }                         returnvalue="B";                    }                }                else{              /*      Logger.getDefaultLogger().log(Logger.LOG_INFOS,"[MMMMMMMMMMMMM]Brochure "+parent.getBrochure().getBro_cleUnik()+"  "+parent.getBrochure().getBro_po());                    Logger.getDefaultLogger().log(Logger.LOG_INFOS,"[MMMMMMMMMMMMM]tmp "+tmp.getAt_cleunik()+"  "+tmp.getValeur_tot_tva_inc());                    for(java.util.Enumeration enu=parent.getBrochure().getSup_reduc().keys();enu.hasMoreElements();){                     Object w=enu.nextElement();                     Sup_reduc_T tmp3=(Sup_reduc_T)parent.getBrochure().getSup_reduc().get(w);                     Logger.getDefaultLogger().log(Logger.LOG_INFOS,"[MMMMMMMMMMMMM]Supreduc  "+tmp.getAt_cleunik()+"  "+tmp3.getFreeLibelle()+" hashtablekey"+w);         }*/                    if(affiche.isReducsup()){                        String managertitle="";                        String managertext="";                        if(affiche.tp.equals("-")){                            managertitle="eff_reduc";                            managertext="eff_reduc_text";                        }                        else if(affiche.tp.equals("+")){                            managertitle="eff_sup";                            managertext="eff_sup_text";                          }                        System.out.println("reduc ou suplement");                        long p=affiche.getParent().getAt_cleunik();                        Logger.getDefaultLogger().log(Logger.LOG_INFOS,"[MMMMMMMMMMMMM]Cle du sup reduc"+p);                         Logger.getDefaultLogger().log(Logger.LOG_INFOS,"[MMMMMMMMMMMMM]tmp "+tmp.getAt_cleunik()+"  "+tmp.getValeur_tot_tva_inc());                        for(java.util.Enumeration enu=tmp.getSup_reduc().keys();enu.hasMoreElements();){                            Object w=enu.nextElement();                            Sup_reduc_T tmp3=(Sup_reduc_T)parent.getBrochure().getSup_reduc().get(w);                            Logger.getDefaultLogger().log(Logger.LOG_INFOS,"[MMMMMMMMMMMMM]Supreduc  "+tmp3.getAt_cleunik()+"  "+tmp3.getFreeLibelle()+" hashtablekey"+w);         }                        Sup_reduc_T supreduc=(Sup_reduc_T)tmp.getSup_reduc().get(new Long(p));                        if(supreduc.isNewreccord()){                                tmp.getSup_reduc().remove(new Long(affiche.getParent().getAt_cleunik()));                            }                            else{                                supreduc.setDeleted(true);                                if(!parent.getDossier().isNewreccord())                                    parent.getDossier().setModifreccord(true);                            }                            returnvalue="s";                                          }else{                    System.out.println("produit in db");                    tmp.setDeleted(true);                     if(!parent.getDossier().isNewreccord())                        parent.getDossier().setModifreccord(true);                    returnvalue="B";                   }                }                model.loadData();                grp_Table_ProduitIndex.tableChanged(new javax.swing.event.TableModelEvent(model));                grp_Table_ProduitIndex.repaint();                  if(grp_Table_ProduitIndex.getRowCount()>0)                    grp_Table_ProduitIndex.changeSelection(0,0,false,false);                                    return returnvalue;    }    public static  void scrollIntoTable(int keyCode,javax.swing.JTable grp_Table_affiche ){         int nbrLigne;        int ck;        nbrLigne=grp_Table_affiche.getRowCount();        ck =  grp_Table_affiche.getSelectedRow();        if (keyCode == java.awt.event.KeyEvent.VK_UP) {            if(ck==0) {                 grp_Table_affiche.scrollRectToVisible(new java.awt.Rectangle( 0,grp_Table_affiche.getRowHeight()*ck,20,grp_Table_affiche.getRowHeight()));            }            else{               grp_Table_affiche.scrollRectToVisible(new java.awt.Rectangle( 0,grp_Table_affiche.getRowHeight()*(ck-1),20,grp_Table_affiche.getRowHeight()));            }            if (ck > 0) {                  grp_Table_affiche.setRowSelectionInterval(ck-1, ck-1);            }        }        else if(keyCode == java.awt.event.KeyEvent.VK_DOWN) {            ck =   grp_Table_affiche.getSelectedRow();            if(ck==nbrLigne) {                grp_Table_affiche.scrollRectToVisible(new java.awt.Rectangle( 0,grp_Table_affiche.getRowHeight()*ck,20,grp_Table_affiche.getRowHeight()));            }            else{                grp_Table_affiche.scrollRectToVisible(new java.awt.Rectangle( 0,grp_Table_affiche.getRowHeight()*(ck+1),20,grp_Table_affiche.getRowHeight()));                            }            int tot = nbrLigne - 1;            if (ck < tot) {                grp_Table_affiche.setRowSelectionInterval(ck + 1,ck + 1);            }        }                    }    }