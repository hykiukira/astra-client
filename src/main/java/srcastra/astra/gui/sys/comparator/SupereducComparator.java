/* * ClientComparator.java * * Created on 8 novembre 2002, 8:37 */package srcastra.astra.gui.sys.comparator;import java.util.Comparator;import srcastra.astra.sys.classetransfert.dossier.*;/** * * @author  Thomas */public class SupereducComparator implements Comparator{        /** Creates a new instance of ClientComparator */    boolean direcstup=false;    public SupereducComparator(int sortCol, boolean sortAsc) {        m_sortCol=sortCol;        m_sortAsc=sortAsc;    }public SupereducComparator(int sortCol, boolean sortAsc,boolean directsup) {        m_sortCol=sortCol;        m_sortAsc=sortAsc;        this.direcstup=directsup;    }        public int compare(Object obj, Object obj1) {         Sup_reduc_T c1=null;         Sup_reduc_T c2=null;        if(!direcstup){        if(!(obj instanceof ProduitAffichage)||!(obj1 instanceof ProduitAffichage))            return 0;         c1=( Sup_reduc_T)((ProduitAffichage)obj).getParent();         c2= (Sup_reduc_T)((ProduitAffichage)obj1).getParent();        }        else{            c1=( Sup_reduc_T)obj;            c2= (Sup_reduc_T)obj1;        }        int result=0;         Long l1;        Long l2;        String str1=null;        String str2=null;        switch(m_sortCol){            case 0:                l1=new Long(c1.getLonvalue());                l2=new Long(c2.getLonvalue());                result=l1.compareTo(l2);                break;          /*   case 1:                str1=(String)c1.m_ref.m_data;                str2=(String)c2.m_ref.m_data;                result=(str1.toUpperCase()).compareTo(str2.toUpperCase());                break;     */             }        if(!m_sortAsc)            result=-result;        return result;    }    public boolean equals(Object obj){        if(obj instanceof ClientComparator){          ClientComparator obj2= (ClientComparator)obj;          return (obj2.m_sortCol==m_sortCol) && (obj2.m_sortAsc=m_sortAsc);                    }        return false;            }protected int m_sortCol;protected boolean m_sortAsc;}