/* * DossierPassagerTableModel.java * * Created on 30 août 2002, 14:21 */package srcastra.astra.gui.sys.tableModel.dossierTableModel;import javax.swing.table.*;import java.util.ArrayList;import srcastra.astra.gui.sys.ErreurScreenLibrary;import srcastra.astra.sys.rmi.astrainterface;import srcastra.astra.sys.classetransfert.Loginusers_T;import srcastra.astra.gui.modules.mainScreenModule.DossierMainScreenModule;import srcastra.astra.sys.classetransfert.dossier.*;import srcastra.astra.gui.test.*;import javax.swing.*;/** * * @author  Sébastien */public class DossierTaxiPassagerTableModel extends AbstractTableModel {        /** Creates a new instance of DossierPassagerTableModel */    public DossierTaxiPassagerTableModel(astrainterface serveur, Loginusers_T currentUser, DossierMainScreenModule parent) {        m_serveur = serveur;        m_currentUser = currentUser;        m_parent = parent;        loadData();    }        public void loadData() {        m_vector = new ArrayList(0);        ArrayList tmpList = m_parent.getDossier().getPassager();        if (tmpList != null && tmpList.size() > 0) {            Passager_T pass = null;            for (int i=0; i < tmpList.size(); i++) {                pass = (Passager_T) tmpList.get(i);                                               /*if(m_parent.getDossier().isNewreccord())                {               pass.setPassTax_aller(1);               pass.setPassTax_retour(1);               pass.setAttachedToTaxi(1);                }*/               // pass.setPass_taxi(pass_taxi)                                                m_vector.add(pass);            }        }    }        public String getColumnName(int column) {       return m_columns[column].c_title;    }        public int getColumnCount() {        return m_columns.length;    }            public int getRowCount() {        return m_vector.size();    }        public Object getValueAt(int row, int col) {        Passager_T pass = (Passager_T)m_vector.get(row);        switch (col) {            case 0 : // attached                if (pass.getAttachedToTaxi() == 1 && pass.getPass_taxi() != tax_cleUnik) return new Integer(1);                else return new Integer(0);            case 1 : // aller                return (pass.getPassTax_aller() == 1) ? new Integer(1) : new Integer(0);            case 2 : // retour                return (pass.getPassTax_retour() == 1) ? new Integer(1) : new Integer(0);            case 3 : // Nom                return pass.getPr_nom();            case 4 : // prénom                return pass.getPr_prénom();            case 5 : // gsm                return pass.getPassTax_gsm();            case 6 : // langue                return pass.getLanguePassager();            default :                return "#BUG#";        }            }        public Object getPassager(int row) {        return (Passager_T) m_vector.get(row);    }        /** Getter for property tax_cleUnik.     * @return Value of property tax_cleUnik.     */    public long getTax_cleUnik() {        return tax_cleUnik;    }                /** Setter for property tax_cleUnik.     * @param tax_cleUnik New value of property tax_cleUnik.     */    public void setTax_cleUnik(long tax_cleUnik) {        this.tax_cleUnik = tax_cleUnik;    }        public ColumnData[] m_columns = {        new ColumnData("AT", 15, JLabel.CENTER),         new ColumnData("Aller", 15, JLabel.CENTER),        new ColumnData("Retour", 15, JLabel.CENTER),        new ColumnData("Nom", 150, JLabel.LEFT),        new ColumnData("Prénom", 150, JLabel.LEFT),        new ColumnData("GSM", 40, JLabel.LEFT),        new ColumnData("Lang", 15, JLabel.CENTER) };        private ArrayList m_vector;    private astrainterface m_serveur;    private Loginusers_T m_currentUser;    private DossierMainScreenModule m_parent;    private long tax_cleUnik;  }