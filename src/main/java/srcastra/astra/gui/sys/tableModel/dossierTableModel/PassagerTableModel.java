/* * PassagerTableModel.java * * Created on 21 octobre 2002, 14:11 */package srcastra.astra.gui.sys.tableModel.dossierTableModel;import srcastra.astra.gui.sys.tableModel.AbstractVectorTableModel;import srcastra.astra.gui.sys.tableModel.ColumnData;import javax.swing.JLabel;import java.util.Vector;import java.util.ArrayList;import srcastra.astra.gui.sys.ErreurScreenLibrary;import srcastra.astra.sys.rmi.astrainterface;import srcastra.astra.sys.classetransfert.Loginusers_T;import srcastra.astra.gui.modules.mainScreenModule.DossierMainScreenModule;import java.rmi.RemoteException;import srcastra.astra.sys.classetransfert.dossier.Dossier_T;import srcastra.astra.sys.rmi.DossierRmiInterface;import srcastra.astra.sys.classetransfert.dossier.Passager_T;import srcastra.astra.sys.classetransfert.utils.*;/** * * @author  Sébastien */public class PassagerTableModel extends AbstractVectorTableModel implements DossierTableModelInterface {        private ArrayList data;    private ArrayList tmpArray;    private DossierMainScreenModule parent;        private DossierRmiInterface serveurDossier;    private boolean m_result = true;    /** Creates a new instance of PassagerTableModel */    public PassagerTableModel(astrainterface serveur, Loginusers_T currentUser,DossierMainScreenModule parent) {        super(serveur, currentUser);        this.parent=parent;    }        protected ColumnData[] loadColumnNames() {        java.util.ResourceBundle rb = null;         try {            rb = java.util.ResourceBundle.getBundle("srcastra/astra/locale/tableHeader/dossier/DossierPassagerTableHeader", currentUser.getLangage());         }         catch (java.util.MissingResourceException e) {            ErreurScreenLibrary.displayErreur(null, ErreurScreenLibrary.MISSING_RESSOURCE_EXCEPTION, srcastra.astra.Astra.DEBUG, e);                     }         if (rb != null) {             return new ColumnData[] { new ColumnData("1", rb, 152, JLabel.LEFT),                                                                             new ColumnData("3", rb, 112, JLabel.LEFT),                                        new ColumnData("4", rb, 170, JLabel.LEFT),                                        new ColumnData("5", rb, 54, JLabel.CENTER),                                        new ColumnData("6", rb, 102, JLabel.CENTER)                                    };                    }        else {            return new ColumnData[] {  new ColumnData("Nom", rb, 0, JLabel.LEFT),                                                                             new ColumnData("Téléphone", rb, 0, JLabel.LEFT),                                        new ColumnData("Email", rb, 0, JLabel.LEFT),                                        new ColumnData("Langue", rb, 0, JLabel.LEFT),                                        new ColumnData("Date de naissance", rb, 0, JLabel.LEFT),             };        }    }        public boolean retrieveData() {        Vector oldVect = (Vector) m_vector.clone();        Dossier_T dossier=parent.getDossier();        Passager_T tmpPassager;        Passager_T tmpPassager2;        Object[] passagerPrinc=null;        m_vector=new Vector();        if(dossier!=null)        {           ArrayList passager=dossier.getPassager();           if(passager!=null) {          /*    setToDefault();             int k=passager.size()-1;              int l=passager.size();             for(int m=0;m<l;m++)             {                 for(int j=0;j<k;j++)                 {                    tmpPassager=(Passager_T)passager.get(j);                    tmpPassager2=(Passager_T)passager.get(j+1);                    if(tmpPassager.getPr_nom().compareTo(tmpPassager2.getPr_nom())>0)                        {                            Passager_T tmpPassager3=tmpPassager;                            passager.set(j,tmpPassager2);                            passager.set(j+1,tmpPassager);                                            }                                 }                 l--;             }              for(int i=0;i<passager.size();i++){                   tmpPassager=(Passager_T)passager.get(i);                                        if(tmpPassager.mainPassager==1){                       passager.remove(tmpPassager);                       passager.add(0,tmpPassager);                   }                                }*/             for(int i=0;i<passager.size();i++)                {                    tmpPassager=(Passager_T)passager.get(i);                       if(!tmpPassager.isDeleted()){                        Date dateNaiss = new Date(tmpPassager.getPr_datenaissance().toString());//.substring(0,19));                        m_vector.addElement(new Object[] {""+tmpPassager.getPr_cleunik(),tmpPassager.getPr_nom(),tmpPassager.getPr_tel(),tmpPassager.getPr_email(),tmpPassager.getLanguePassager(), (dateNaiss.isOpen() || dateNaiss.isUnknow()) ? dateNaiss.getSpecString() : dateNaiss.toString2()} );                    }                }           }        }             if (!m_result) { m_vector = oldVect; }       return m_result;    }        public java.util.ArrayList getData() {        return parent.getDossier().getPassager();    }            public void setData(java.util.ArrayList data) {    }    }