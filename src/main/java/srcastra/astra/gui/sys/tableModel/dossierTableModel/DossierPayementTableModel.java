/* * DossierIndexTableModel.java * * Created on 30 août 2002, 9:49 */package srcastra.astra.gui.sys.tableModel.dossierTableModel;import srcastra.astra.gui.sys.tableModel.AbstractVectorTableModel;import srcastra.astra.gui.sys.tableModel.ColumnData;import javax.swing.JLabel;import java.util.Vector;import srcastra.astra.sys.classetransfert.configuration.User;import java.util.ArrayList;import srcastra.astra.gui.sys.ErreurScreenLibrary;import srcastra.astra.sys.rmi.astrainterface;import srcastra.astra.sys.classetransfert.Loginusers_T;import srcastra.astra.gui.modules.mainScreenModule.DossierMainScreenModule;import java.rmi.RemoteException;import srcastra.astra.sys.classetransfert.dossier.Dossier_T;import srcastra.astra.sys.rmi.DossierRmiInterface;import srcastra.astra.sys.classetransfert.dossier.avion.*;import java.util.*;import srcastra.astra.sys.classetransfert.dossier.Payement_T;import srcastra.astra.gui.modules.aidedesicion.*;/** * * @author  Sébastien  */public class DossierPayementTableModel extends AbstractVectorTableModel implements DossierTableModelInterface,InterfaceContanteColor  {        /** Creates a new instance of DossierIndexTableModel */    //Loginusers_T currentUser;;    AbstractBuffer descTree;    ArrayList typepaiement;    public DossierPayementTableModel(astrainterface serveur, Loginusers_T currentUser, DossierMainScreenModule parent,AbstractBuffer buffer) {        super(serveur, currentUser);        descTree=buffer;        this.parent=parent;        //this.currentUser=currentUser;        table=new Hashtable();        table.put(new Integer(1),"Carte de Crédit");        table.put(new Integer(2),"Cash");        table.put(new Integer(3),"Virement");    }    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// Méthodes Surchargées///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////                public ColumnData[] loadColumnNames() {        java.util.ResourceBundle rb = null;         try {            rb = java.util.ResourceBundle.getBundle("srcastra/astra/locale/ModuleDossier/DossierPayementPane", currentUser.getLangage());         }         catch (java.util.MissingResourceException e) {            ErreurScreenLibrary.displayErreur(null, ErreurScreenLibrary.MISSING_RESSOURCE_EXCEPTION, srcastra.astra.Astra.DEBUG, e);                     }         if (rb != null) {             return new ColumnData[] { new ColumnData("pay_c1", rb, 20, JLabel.LEFT),                                        new ColumnData("pay_c2", rb,20, JLabel.CENTER),                                        new ColumnData("pay_c3", rb, 30, JLabel.LEFT),                                        new ColumnData("pay_c4", rb, 30, JLabel.RIGHT),                                        new ColumnData("grp_TField_libelle", rb, 30, JLabel.LEFT),                                //        new ColumnData("pay_c6", rb, 40, JLabel.RIGHT),                                 //      new ColumnData("pay_c7", rb, 40, JLabel.RIGHT),                                       new ColumnData("pay_c8", rb, 40, JLabel.LEFT),             };                    }        else {            return new ColumnData[] {  new ColumnData("test" ,20, JLabel.LEFT),                                        new ColumnData("Date", 20, JLabel.LEFT),                                        new ColumnData("N° piece",30, JLabel.LEFT),                                       new ColumnData("Montant",30, JLabel.LEFT),                                       new ColumnData("Code TVA",30, JLabel.LEFT),                                       new ColumnData("Montant TVA",40, JLabel.LEFT),                                       new ColumnData("Montant Base",40, JLabel.LEFT),                                       new ColumnData("Libellé",40, JLabel.LEFT),            };        }    }        /*    public  ArrayList loadData() {      ArrayList data = new ArrayList();            }        return data;    }*/        public java.util.ArrayList getData() {        return segmentList;    }        public void setData(java.util.ArrayList data) {    }        public boolean retrieveData() {         Vector oldVect = (Vector) m_vector.clone();         if(parent.getDossier().getPayement()!=null){        TreeMap tree=parent.getDossier().getPayement();        Set set=tree.keySet();        Iterator iterator=set.iterator();        setToDefault();        while(iterator.hasNext())        {           Payement_T pay=(Payement_T)tree.get(iterator.next());            if(!pay.isDeleted())           m_vector.add(pay);                      }         }           if (!m_result) { m_vector = oldVect; }       return m_result;    }     private Object getElement(int type,int id){      /*  DecBuffer buff=new DecBuffer();        buff=(DecBuffer)descTree.getData3(type,id,buff);        if(buff!=null){        ArrayList data=buff.getData();        if(data!=null){            for(int i=0;i<data.size();i++){                Object[] tmp=(Object[])data.get(i);                if(currentUser.getUrlmcleunik()==((Integer)tmp[2]).intValue())                return tmp[3];            }        }              }*/               if(typepaiement!=null)        for(int i=0;i<typepaiement.size();i++){            Object[] tab=(Object[])typepaiement.get(i);            if(Integer.parseInt(tab[0].toString())==id){              return tab[currentUser.getUrlmcleunik()];               }                    }                return "";    }    public Object getValueAt(int param, int param1) {        Object retval=null;        if(param<0 || param1>getColumnCount())            return "";        Payement_T row=(Payement_T )m_vector.elementAt(param);         srcastra.astra.sys.classetransfert.utils.Date date=new  srcastra.astra.sys.classetransfert.utils.Date();            if(row.getDatePayement()==null)            {               Calendar c=Calendar.getInstance();               date.setYear(c.get(Calendar.YEAR));               date.setMonth(c.get(Calendar.MONTH));               date.setDay(c.get(Calendar.DAY_OF_MONTH));                           }            else{                date=row.getDatePayement();            }        int type=0;        if(row.getPrix()>0)            type=CLIP;        else            type=CLIM;       // if(row.getM_typepayement()<1 || row.getM_typepayement()>3)         //       row.setM_typepayement(1);            switch(param1)        {               case 0:{               //return "kas";                //row.                //serveur.get               User user=null;               String nom="";                              try{               user=(User) serveur.renvUserRmiObject(currentUser.getUrcleunik()).get(currentUser.getUrcleunik(),row.getCreator(),0);               nom=user.getUrnom();               }catch(Exception e)               {}finally{               return nom;               }                           }            case 1:return new RowColorListe((date.isOpen() || date.isUnknow()) ? date.getSpecString() : date.toString2(),type);            case 2:{                String numpiece=" ";                if(row.getHenumpiece()!=null)                    numpiece=row.getHenumpiece();                return new RowColorListe(numpiece,type);            }            case 3:return new RowColorListe(new Float(row.getPrix()),type);            case 4:return new RowColorListe(row.getLibelle(),type);                        case 5:{                 retval=getElement(2,row.getM_typepayement());                 if(retval!=null)                         return retval;                else return "";            }        }        return "";    }     public Object getPayementT(int row){        return m_vector.get(row);                   }    /** Getter for property typepaiement.     * @return Value of property typepaiement.     *     */    public java.util.ArrayList getTypepaiement() {        return typepaiement;    }        /** Setter for property typepaiement.     * @param typepaiement New value of property typepaiement.     *     */    public void setTypepaiement(java.util.ArrayList typepaiement) {        this.typepaiement = typepaiement;    }            private DossierMainScreenModule parent;    private ArrayList segmentList;    private ArrayList data;    private ArrayList tmpArray;    private DossierRmiInterface serveurDossier;    private boolean m_result = true;    private Hashtable table; }