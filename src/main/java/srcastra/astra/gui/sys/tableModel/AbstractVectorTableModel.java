/* * AbstractVectorTableModel.java * * Created on 15 octobre 2002, 12:27 */package srcastra.astra.gui.sys.tableModel;import javax.swing.table.AbstractTableModel;import java.util.Vector;import srcastra.astra.sys.rmi.astrainterface;import srcastra.astra.sys.classetransfert.Loginusers_T;    /** * * @author  Sébastien */public abstract class AbstractVectorTableModel extends AbstractTableModel {        protected Vector m_vector;    public ColumnData[] m_columnNames;    protected astrainterface serveur;    protected Loginusers_T currentUser;    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// Constructeur    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////        /** Creates a new instance of AbstractVectorTableModel */    public AbstractVectorTableModel(astrainterface serveur, Loginusers_T currentUser) {        this.serveur = serveur;        this.currentUser = currentUser;                m_vector = new Vector();        m_columnNames = loadColumnNames();        setToDefault();    }////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// Méthodes implémentées////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    /** Reset Data to Default */    public void setToDefault() {        m_vector.removeAllElements();    }        /** Renvoi le nombre de lignes */    public int getRowCount() {        return m_vector==null ? 0 : m_vector.size();     }    /** Renvoi le nombre de colonnes */    public int getColumnCount() {         return m_columnNames.length;    }        /** renvoi la valeur à un point donné */    public Object getValueAt(int row, int col) {        Object[] obj = (Object[])m_vector.get(row);        return obj[col + 1]; // a changer évidemment !!!    }           public String getColumnName(int col) {        return m_columnNames[col].getM_title();    }    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// Méthodes abstraites ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    protected abstract ColumnData[] loadColumnNames();    public abstract boolean retrieveData();            }