/* * DossierIndexTableModel.java * * Created on 30 août 2002, 9:49 */package srcastra.astra.gui.sys.tableModel.dossierTableModel;import srcastra.astra.gui.sys.tableModel.AbstractVectorTableModel;import srcastra.astra.gui.sys.tableModel.ColumnData;import javax.swing.JLabel;import java.util.Vector;import java.util.ArrayList;import srcastra.astra.gui.sys.ErreurScreenLibrary;import srcastra.astra.sys.rmi.astrainterface;import srcastra.astra.sys.classetransfert.Loginusers_T;import srcastra.astra.gui.modules.mainScreenModule.DossierMainScreenModule;import java.rmi.RemoteException;import srcastra.astra.sys.classetransfert.dossier.Dossier_T;import srcastra.astra.sys.rmi.DossierRmiInterface;import srcastra.astra.sys.classetransfert.dossier.avion.*;import srcastra.astra.sys.classetransfert.utils.Date;/** * * @author  Sébastien */public class DossierIndexTableModel extends AbstractVectorTableModel implements DossierTableModelInterface {        /** Creates a new instance of DossierIndexTableModel */    srcastra.astra.gui.sys.listModel.dossierListModel.StatusListModel statutliste;    public DossierIndexTableModel(astrainterface serveur, Loginusers_T currentUser,DossierMainScreenModule parent) {            super(serveur, currentUser);        statutliste=new  srcastra.astra.gui.sys.listModel.dossierListModel.StatusListModel(serveur,currentUser);        this.parent=parent;    }     /*public DossierIndexTableModel() {         super(null,null);    }*/    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// Méthodes Surchargées///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////             protected ColumnData[] loadColumnNames() {         java.util.ResourceBundle rb = null;         try {            rb = java.util.ResourceBundle.getBundle("srcastra/astra/locale/tableHeader/dossier/DossierIndexTableTableHeader", currentUser.getLangage());         }         catch (java.util.MissingResourceException e) {            ErreurScreenLibrary.displayErreur(null, ErreurScreenLibrary.MISSING_RESSOURCE_EXCEPTION, srcastra.astra.Astra.DEBUG, e);                     }         if (rb != null) {             return new ColumnData[] { new ColumnData("1", rb, 40, JLabel.LEFT),                                        new ColumnData("2", rb, 40, JLabel.CENTER),                                        new ColumnData("3", rb, 35, JLabel.LEFT),                                        new ColumnData("4", rb, 45, JLabel.LEFT),                                        new ColumnData("5", rb, 25, JLabel.LEFT),                                        new ColumnData("6", rb, 10, JLabel.CENTER),                                        new ColumnData("7", rb, 100, JLabel.LEFT),                                        new ColumnData("8", rb, 30, JLabel.LEFT),                                        new ColumnData("9", rb, 30, JLabel.RIGHT),                                       new ColumnData("10", rb, 30, JLabel.RIGHT)             };                    }        else {            return new ColumnData[] { new ColumnData("N° Dossier", rb, 0, JLabel.LEFT),                                        new ColumnData("Date de départ", rb, 0, JLabel.CENTER),                                        new ColumnData("PO/Billet", rb, 0, JLabel.LEFT),                                        new ColumnData("Destination", rb, 0, JLabel.LEFT),                                        new ColumnData("Hôtel", rb, 40, JLabel.LEFT),                                        new ColumnData("Status", rb, 30, JLabel.CENTER),                                        new ColumnData("Client", rb, 100, JLabel.LEFT),                                        new ColumnData("Fournisseur", rb, 0, JLabel.LEFT),                                        new ColumnData("Prix", rb, 0, JLabel.RIGHT),                                       new ColumnData("Payé", rb, 0, JLabel.RIGHT)            };        }                        }        /*protected ArrayList loadData() {        if (data == null) data = new ArrayList(0);            System.out.println("======================> LOAD DATA <====================================");        System.out.println("taille de data " + data.size());        return data;    }*/        /*public void chargeData() {        try{            serveurDossier=(DossierRmiInterface)parent.getServeurDossier();            tmpArray=serveurDossier.chargeDossier(currentUser,0);            Dossier_T tmpDossier;            if(tmpArray!=null)            {                for(int i=0;i<tmpArray.size();i++)                {                    tmpDossier=(Dossier_T)tmpArray.get(i);                    data.add(new Object[] {new Integer(tmpDossier.getDrcleunik()),tmpDossier.getDrnumdos(),tmpDossier.getDr_date_depart(), "HHG46", "Juan les Pins", "Hilton", "OK", tmpDossier.getClientContractuel().getCsnom(), "Hirondelle", "4000 €" } );                                    }                           }                   }        catch(RemoteException re)        {         ErreurScreenLibrary.displayErreur(null, ErreurScreenLibrary.REMOTE_EXCEPTION, srcastra.astra.Astra.DEBUG, re);                       }                dataContainer = loadData();    }*/        /** Getter for property data.     * @return Value of property data.     */    /*public java.util.ArrayList getData() {        return this.tmpArray;    }*/        /** Setter for property data.     * @param data New value of property data.     */    /*public void setData(java.util.ArrayList data) {        this.tmpArray = tmpArray;    }*/    public int getColumnCount(){      return 10;           }    public int getRowCount(){        if(this.tmpArray!=null)     return this.tmpArray.size();          else return 0;    }   public Object getValueAt(int param, int param1) {        if(param<0 || param1>getColumnCount())            return "";        Object[] row=(Object[])tmpArray.get(param);          Date datedepart=new Date(row[2].toString().substring(0,19));        switch(param1)        {            case 0:return row[1];            case 1:return (datedepart.isOpen() || datedepart.isUnknow()) ? datedepart.getSpecString() : datedepart.toString2();            case 2:return row[3];            case 3:return row[4];            case 4:{                 if(row[5]==null)                     return "";                 if(Long.parseLong(row[5].toString())==0)                    return "";                    return row[5];                 }            case 5:  return statutliste.getValue(((Integer)row[6]).intValue());            case 6:return row[7];             case 7:return row[8];            case 8:return row[9];            case 9:return row[11];                   }        return "";    }   public Object[] getClassAffichage(int row){       if(this.tmpArray!=null)           if(row>=0 && row<this.tmpArray.size())               return (Object[])tmpArray.get(row);       return null;          }     public synchronized boolean retrieveData() {      /* Thread runner = new Thread() {            public void run() { */          /*      try{                    setToDefault();                            serveurDossier=(DossierRmiInterface)parent.getServeurDossier();                    tmpArray=serveurDossier.chargeDossierArray(currentUser,0);                    Dossier_T tmpDossier;                    String numticket="";                    String destination="";                    String fournisseur="";                    if(tmpArray!=null)                           m_result = true;                       // m_vector.addElement(new Object[] {new Integer(tmpDossier.getDrcleunik()),tmpDossier.getDrnumdos(),tmpDossier.getDr_date_depart(), numticket, destination, "", "OK", tmpDossier.getClientContractuel().getCsnom(), fournisseur, parent.formatNumber(new Float(tmpDossier.getDrtotalprix()).floatValue())+ " €" } );                                                                                                /*                            tmpDossier=(Dossier_T)tmpArray.get(i);                            if(tmpDossier.getAvionTicket()!=null)                            {                              java.util.Enumeration enu=tmpDossier.getAvionTicket().keys();                              Avion_ticket_T ticket=(Avion_ticket_T) tmpDossier.getAvionTicket().get(enu.nextElement());                              numticket=ticket.getAt_num_billet();                              fournisseur=ticket.getFrnom();                              if(ticket.getConjonctionList()!=null)                              {                                  int size=ticket.getConjonctionList().size();                                  Conjonction_T conj=( Conjonction_T)ticket.getConjonctionList().get(size-1);                                  if(conj.getSegmentList()!=null)                                  {                                     int size2=conj.getSegmentList().size();                                     Avion_segment_T segment=(Avion_segment_T)conj.getSegmentList().get(size2-1);                                     destination=segment.getAs_routing_a_intitule();                                  }                                                              }                            }                            m_vector.addElement(new Object[] {new Integer(tmpDossier.getDrcleunik()),tmpDossier.getDrnumdos(),tmpDossier.getDr_date_depart(), numticket, destination, "", "OK", tmpDossier.getClientContractuel().getCsnom(), fournisseur, parent.formatNumber(new Float(tmpDossier.getDrtotalprix()).floatValue())+ " €" } );                        }                                                 }                 catch(RemoteException re) {                    ErreurScreenLibrary.displayErreur(null, ErreurScreenLibrary.REMOTE_EXCEPTION, srcastra.astra.Astra.DEBUG, re);                                   m_result = false;                                    }            /*}        };       runner.start();              //  if (!m_result) { m_vector = oldVect; }       return m_result;*/         return true;                  }      public synchronized boolean retrieveData(ArrayList  tmpArray) {                  //  Vector oldVect = (Vector) m_vector.clone();                    this.tmpArray=tmpArray;                    m_vector=new Vector();                    Dossier_T tmpDossier;                    String numticket="";                    String destination="";                    String fournisseur="";                    if(tmpArray!=null) {                        this.tmpArray=tmpArray;                    }                      m_result = true;    //   if (!m_result) { m_vector = oldVect; }       return m_result;                          }         public java.util.ArrayList getData() {        return tmpArray;     }          public void setData(java.util.ArrayList data) {     }     private ArrayList data;private ArrayList tmpArray;private DossierMainScreenModule parent;    private DossierRmiInterface serveurDossier;private boolean m_result = true;}