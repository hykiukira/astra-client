/* * DossierIndexTableModel.java * * Created on 30 août 2002, 9:49 */package srcastra.astra.gui.sys.tableModel.dossierTableModel;import srcastra.astra.gui.sys.tableModel.*;import java.util.ArrayList;import srcastra.astra.gui.sys.ErreurScreenLibrary;import srcastra.astra.sys.rmi.astrainterface;import srcastra.astra.sys.classetransfert.Loginusers_T;import javax.swing.JLabel;import srcastra.astra.gui.modules.mainScreenModule.DossierMainScreenModule;import srcastra.astra.sys.classetransfert.dossier.brochure.DescriptionLogement_T;import srcastra.astra.gui.sys.*;import srcastra.astra.gui.sys.listModel.dossierListModel.descriptionLogement.*;import javax.swing.ListModel;import java.util.*;import srcastra.astra.sys.classetransfert.dossier.InterfaceProduit;import srcastra.astra.gui.modules.aidedesicion.*;/** * * @author  Sébastien */public class DossierDescriptionLogementTableModel extends javax.swing.table.AbstractTableModel {       public static final int DATAID_QUANTITE = 0;    public static final int DATAID_XLIT = 1;    public static final int DATAID_COMMODITE = 2;    public static final int DATAID_SITUATION = 3;    public static final int DATAID_VUE = 4;    public static final int DATAID_REGIME = 5;    public static final int[] COMBO_TYPE = { DATAID_QUANTITE, DATAID_XLIT, DATAID_COMMODITE, DATAID_SITUATION, DATAID_VUE, DATAID_REGIME };        private astrainterface m_serveur;    private Loginusers_T m_currentUser;    private DossierMainScreenModule m_parent;           private ColumnData[] m_columns;    private Vector m_vector;    private int m_productId;        private XLit m_combo_xlit;    private Commodite m_combo_commodite;    private Situation m_combo_situation;    private Vue m_combo_vue;    private Regime m_combo_regime;                /** Creates a new instance of DossierIndexTableModel */    AbstractBuffer descLogTree;    public DossierDescriptionLogementTableModel(astrainterface serveur, Loginusers_T currentUser, DossierMainScreenModule parent, int productId,AbstractBuffer descLogTree) {        m_serveur = serveur;        m_currentUser = currentUser;        m_parent = parent;        m_vector = new Vector(0);        m_columns = loadColumnNames();        m_productId = productId;        m_combo_xlit = new XLit(m_serveur, m_currentUser);        m_combo_commodite = new Commodite(m_serveur, m_currentUser);        m_combo_situation = new Situation(m_serveur, m_currentUser);        m_combo_vue = new Vue(m_serveur, m_currentUser);        m_combo_regime = new Regime(m_serveur, m_currentUser);        this.descLogTree=descLogTree;    }    protected ColumnData[] loadColumnNames() {        java.util.ResourceBundle rb = java.util.ResourceBundle.getBundle("srcastra/astra/locale/tableHeader/dossier/DossierDescriptionLogementTableHeader", m_currentUser.getLangage());        ColumnData[] cols = new ColumnData[] { new ColumnData("1", rb, 0, JLabel.LEFT),                                               new ColumnData("2", rb, 0, JLabel.LEFT),                                               new ColumnData("3", rb, 0, JLabel.LEFT),                                               new ColumnData("4", rb, 0, JLabel.LEFT),                                               new ColumnData("5", rb, 0, JLabel.LEFT),                                               new ColumnData("6", rb, 0, JLabel.LEFT) };       return cols;    }    public String getColumnName(int col) {       return m_columns[col].getM_title();    }    public void setToDefault() {        m_vector.removeAllElements();    }    public boolean retrieveData() {        setToDefault();        ArrayList list = null;        switch (m_productId) {            case InterfaceProduit.BRO :                list = m_parent.getBrochure().getDescriptionLogement();                break;            case InterfaceProduit.HO :                list = m_parent.getHotel().getDescriptionLogement();                break;        }        if (list != null) {            for (int i=0; i < list.size(); i++) {                DescriptionLogement_T dl = (DescriptionLogement_T)list.get(i);                if (!dl.isDeleted()) m_vector.addElement(dl);            }        }        return true;    }    public int getColumnCount() {        return m_columns.length;    }    public int getRowCount() {        return m_vector.size();    }    private Object getElement(int type,int id){        DecBuffer buff=new DecBuffer();        buff=(DecBuffer)descLogTree.getData3(type,id,buff);        if(buff!=null){        ArrayList data=buff.getData();        if(data!=null){            for(int i=0;i<data.size();i++){                Object[] tmp=(Object[])data.get(i);                if(m_currentUser.getUrlmcleunik()==((Integer)tmp[2]).intValue())                return tmp[3];            }        }              }        return null;    }    public Object getValueAt(int nrow, int ncol) {        DescriptionLogement_T row = (DescriptionLogement_T) m_vector.get(nrow);             Object retval=null;        switch (ncol) {            case 0 :                           return new Integer(row.getDlt_quantité());            case 1 :                retval=getElement(ncol,row.getDlt_xlit());                if(retval!=null)                    return retval;                else return "";            case 2 :                retval=getElement(ncol,row.getDlt_commodite());                if(retval!=null)                    return retval;                else return "";            case 3 :                retval=getElement(8,row.getDlt_situation());                if(retval!=null)                    return retval;                else return "";            case 4 :                retval=getElement(5,row.getDlt_vue());                if(retval!=null)                    return retval;                else return "";            case 5 :                 retval=getElement(3,row.getDlt_regime());                if(retval!=null)                    return retval;                else return "";        }        return null;    }    public ListModel getComboModel(int id) {        switch (id) {            case DossierDescriptionLogementTableModel.DATAID_XLIT :                return m_combo_xlit;            case DossierDescriptionLogementTableModel.DATAID_COMMODITE :                return m_combo_commodite;            case DossierDescriptionLogementTableModel.DATAID_SITUATION :                return m_combo_situation;            case DossierDescriptionLogementTableModel.DATAID_VUE :                return m_combo_vue;            case DossierDescriptionLogementTableModel.DATAID_REGIME :                return m_combo_regime;        }        return null;    }    public int getComboType(int col) {        return COMBO_TYPE[col];    }       public Object renvObject(int nrow) {       return (m_vector.size() > nrow) ? m_vector.get(nrow) : null;   }}