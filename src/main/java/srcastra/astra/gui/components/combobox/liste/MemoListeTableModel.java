/* * TransportTableModel.java * * Created on 20 novembre 2002, 14:22 */package srcastra.astra.gui.components.combobox.liste;import srcastra.astra.sys.rmi.astrainterface;import srcastra.astra.sys.classetransfert.Loginusers_T;import java.util.ArrayList;import srcastra.astra.Astra;import java.rmi.RemoteException;import srcastra.astra.gui.sys.ErreurScreenLibrary;import srcastra.astra.gui.sys.formVerification.ListSelectorMask;import srcastra.astra.gui.sys.tableModel.AbstractAstraTableModel;import srcastra.astra.gui.sys.ErreurScreenLibrary;import srcastra.astra.gui.test.*;import srcastra.astra.sys.rmi.astrainterface;import srcastra.astra.sys.classetransfert.clients.Clients_T;import srcastra.astra.sys.classetransfert.Loginusers_T;import java.util.ArrayList;import srcastra.astra.Astra;import java.rmi.RemoteException;import srcastra.astra.gui.sys.ErreurScreenLibrary;import srcastra.astra.gui.sys.formVerification.ListSelectorMask;import srcastra.astra.sys.Logger;import srcastra.astra.sys.rmi.Exception.ServeurSqlFailure;import srcastra.astra.sys.manipuleclient.ClientConstante;import srcastra.astra.gui.sys.tableModel.AbstractAstraTableModel;import srcastra.astra.gui.sys.ErreurScreenLibrary;import srcastra.astra.sys.classetransfert.dossier.ProduitAffichage;import javax.swing.*;import java.util.*;import java.awt.Component;import javax.swing.table.AbstractTableModel;import srcastra.astra.gui.sys.comparator.ListeSelectorComparaTor2;import srcastra.astra.gui.modules.aidedesicion.*;import srcastra.astra.gui.components.actions.actionToolBar.*;import srcastra.astra.gui.sys.comparator.*;/** * @author Thomas */public class MemoListeTableModel extends ListeTableModel implements ListeModelInterface {    /**     * Creates a new instance of TransportTableModel     */    int m_typeProduit;    int typeDecision;    public MemoListeTableModel(astrainterface serveur, Loginusers_T login, int typeProduit, int typeDecision, int test) {        super(serveur, login, true);        this.typeDecision = typeDecision;        m_typeProduit = typeProduit;        loadata();    }    public ArrayList loadata() {        try {            if (m_vector == null)                m_vector = new ArrayList();            DecBuffer dectree = (DecBuffer) m_serveur.workWithDecision(null, m_login.getUrcleunik(), ActionToolBar.ACT_READ, null, 0, 0, 0l, typeDecision);            m_vector = dectree.fillVectorListe(m_vector, m_typeProduit, m_login.getUrlmcleunik());            if (m_vector != null)                Collections.sort(m_vector, new ListeSelectorComparaTor(3, true));            return m_vector;        }        catch (srcastra.astra.sys.rmi.Exception.ServeurSqlFailure se) {            se.printStackTrace();        }        catch (java.rmi.RemoteException re) {            re.printStackTrace();        }        return null;    }    /**     * Getter for property m_column.     *     * @return Value of property m_column.     */    public srcastra.astra.gui.test.ColumnData[] getM_column() {        return this.m_columns;    }    /**     * Setter for property m_column.     *     * @param m_column New value of property m_column.     */    public void setM_column(srcastra.astra.gui.test.ColumnData[] m_column) {        this.m_columns = m_column;    }    /** Getter for property seveur.     * @return Value of property seveur.     */    /** Setter for property seveur.     * @param seveur New value of property seveur.     */    /** Getter for property login.     * @return Value of property login.     */    /** Setter for property login.     * @param login New value of property login.     */    /**     * Getter for property m_vector.     *     * @return Value of property m_vector.     */    public java.util.ArrayList getM_vector() {        return m_vector;    }    /**     * Setter for property m_vector.     *     * @param m_vector New value of property m_vector.     */    public void setM_vector(java.util.ArrayList m_vector) {        this.m_vector = m_vector;    }    public String getColumnName(int column)    {        return m_columns[column].c_title;    }    /**     * Getter for property m_vector_by_key.     *     * @return Value of property m_vector_by_key.     */    public java.util.ArrayList getM_vector_by_key() {        return m_vector_by_key;    }    /**     * Setter for property m_vector_by_key.     *     * @param m_vector_by_key New value of property m_vector_by_key.     */    public void setM_vector_by_key(java.util.ArrayList m_vector_by_key) {        this.m_vector_by_key = m_vector_by_key;    }    public Object getValueAt(int row2, int col) {        // if(row < 0 && row > m_vector.size()-1)        //    return "";        Object[] row = (Object[]) m_vector.get(row2);        int size = row.length - 1;        switch (col)        {            case 0:                return new srcastra.astra.gui.components.combobox.liste.RowColorListe(row[3], ((Integer) row[size]).intValue());                // case 1:return new srcastra.astra.gui.components.combobox.liste.RowColorListe(row[2],((Integer)row[size]).intValue());                //case 0:return row[param1].toString();                // case 1:return row[param1].toString();        }        return "";        //  return tab[3];    }    public int getColumnCount() {        return m_columns.length;    }    ColumnData[] m_columns = new ColumnData[]{            new ColumnData("Intitule", 10, JLabel.LEFT)};    //new ColumnData("Intitule",10,JLabel.LEFT)}