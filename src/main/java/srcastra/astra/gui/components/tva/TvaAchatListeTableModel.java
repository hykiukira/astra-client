/* * TransportTableModel.java * * Created on 20 novembre 2002, 14:22 */package srcastra.astra.gui.components.tva;import srcastra.astra.sys.rmi.astrainterface;import srcastra.astra.sys.classetransfert.Loginusers_T;import java.util.ArrayList;import srcastra.astra.Astra;import java.rmi.RemoteException;import srcastra.astra.gui.sys.ErreurScreenLibrary;import srcastra.astra.gui.sys.formVerification.ListSelectorMask;import srcastra.astra.gui.sys.tableModel.AbstractAstraTableModel;import srcastra.astra.gui.sys.ErreurScreenLibrary;import srcastra.astra.gui.test.*;import srcastra.astra.sys.rmi.astrainterface;import srcastra.astra.sys.classetransfert.clients.Clients_T;import srcastra.astra.sys.classetransfert.Loginusers_T;import java.util.ArrayList;import srcastra.astra.Astra;import java.rmi.RemoteException;import srcastra.astra.gui.sys.ErreurScreenLibrary;import srcastra.astra.gui.sys.formVerification.ListSelectorMask;import srcastra.astra.sys.Logger;import srcastra.astra.sys.rmi.Exception.ServeurSqlFailure;import srcastra.astra.sys.manipuleclient.ClientConstante;import srcastra.astra.gui.sys.tableModel.AbstractAstraTableModel;import srcastra.astra.gui.sys.ErreurScreenLibrary;import srcastra.astra.sys.classetransfert.dossier.ProduitAffichage;import javax.swing.*;import java.util.*;import java.awt.Component;import javax.swing.table.AbstractTableModel;import srcastra.astra.gui.sys.comparator.ListeSelectorComparaTor;import srcastra.astra.gui.components.combobox.liste.*;import srcastra.astra.sys.compta.*;/** * @author Thomas */public class TvaAchatListeTableModel extends ListeTableModel implements ListeModelInterface {    /**     * Creates a new instance of TransportTableModel     */    public TvaAchatListeTableModel(astrainterface serveur, Loginusers_T login, ArrayList achat) {        super(serveur, login, true);        vector2 = achat;        m_vector = achat;        Collections.sort(vector2, new ListeSelectorComparaTor(1, true));        //loadata();    }    public ArrayList loadata() {        //if(vector2!=null)        return vector2;        /*  if(m_vector==null){         m_vector=new ArrayList();         try {            m_vector = m_serveur.getTvaListe(m_login.getUrcleunik());        }        catch (RemoteException e) {            ErreurScreenLibrary.displayErreur(null, ErreurScreenLibrary.REMOTE_EXCEPTtion e) {            ErreurScreenLibrary.displayErreur(null, ErreurScreenLi        }        loadata2();*/        //  SpecialTva.fromFloaToString(m_vector);        //Collections.sort(m_vector,new ListeSelectorComparaTor2(25,true));        //  }        //return m_vector;    }    public int getRowCount() {        return vector2 == null ? 0 : vector2.size();    }    private void loadata2() {        int j = 0;        for (int i = 0; i < m_vector.size(); i++) {            Object[] tmp = (Object[]) m_vector.get(i);            if (tmp[3].toString().length() >= 6) {                if (tmp[3].toString().substring(0, 2).equals("01") || tmp[3].toString().substring(0, 2).equals("02") || tmp[3].toString().substring(0, 2).equals("03") || tmp[3].toString().substring(0, 2).equals("04") || tmp[3].toString().substring(0, 2).equals("05") || tmp[3].toString().substring(0, 2).equals("06")                        || tmp[3].toString().substring(0, 2).equals("31") || tmp[3].toString().substring(0, 2).equals("32") || tmp[3].toString().substring(0, 2).equals("33") ||                        tmp[3].toString().substring(0, 2).equals("10") || tmp[3].toString().substring(0, 2).equals("11") || tmp[3].toString().substring(0, 2).equals("12") ||                        tmp[3].toString().substring(0, 2).equals("13") || tmp[3].toString().substring(0, 2).equals("14")) {                    if (vector2 == null)                        vector2 = new ArrayList();                    Object[] tmp2 = new Object[]{tmp[0], tmp[25], tmp[26], new Object(), new Integer(j)};                    j++;                    vector2.add(tmp2);                }            }        }        Collections.sort(vector2, new ListeSelectorComparaTor(1, true));        m_vector = vector2;    }    public Object getValueAt(int param, int param1) {        if (vector2 == null) return "";        if (param < 0 || param1 > getColumnCount())            return "";        Object[] row = (Object[]) vector2.get(param);        // Logger.getDefaultLogger().log(Logger.LOG_INFOS,row[4].toString()+"  "+row[3].toString());        int size = row.length - 1;        switch (param1) {            case 0:                return new srcastra.astra.gui.components.combobox.liste.RowColorListe(row[1], 0);//((Integer)row[size]).intValue());            case 1:                return new srcastra.astra.gui.components.combobox.liste.RowColorListe(row[2], 0);//((Integer)row[size]).intValue());        }        return "";    }    public srcastra.astra.gui.test.ColumnData[] getM_column() {        return this.m_columns;    }    public void setM_column(srcastra.astra.gui.test.ColumnData[] m_column) {        this.m_columns = m_column;    }    public void setM_vector(java.util.ArrayList m_vector) {        this.m_vector = m_vector;    }    public String getColumnName(int column) {        return m_columns[column].c_title;    }    public java.util.ArrayList getM_vector_by_key() {        return m_vector_by_key;    }    public void setM_vector_by_key(java.util.ArrayList m_vector_by_key) {        this.m_vector_by_key = m_vector_by_key;    }    ColumnData[] m_columns = new ColumnData[]{            new ColumnData("Code", 20, JLabel.LEFT),            new ColumnData("Intitule", 20, JLabel.LEFT)};    ArrayList vector2;} 