/* * FournisseurDocumentPane.java * Created on 27 mars 2002, 12:32 */package srcastra.astra.gui.modules.fournisseurs;import srcastra.astra.gui.modules.InternScreenModule;import srcastra.astra.gui.modules.MainScreenModule;import srcastra.astra.gui.components.actions.actionToolBar.*;import srcastra.astra.gui.components.AstraComponent;import srcastra.astra.gui.sys.ErreurScreenLibrary;import javax.swing.JOptionPane;import srcastra.astra.gui.sys.formVerification.*;import srcastra.astra.gui.components.actions.ToolBarInteraction;import java.awt.event.ActionEvent;import java.awt.event.ActionListener;import srcastra.astra.gui.event.ValidateField;/** * @author  Sébastien */public class FournisseurDocumentPane extends javax.swing.JPanel implements InternScreenModule,                                                                           ToolBarComposer,                                                                           java.awt.event.ComponentListener {    //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// // CONSTRUCTOR////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////                                                                                        /** Creates new form FournisseurDocumentPane */    public FournisseurDocumentPane(srcastra.astra.sys.rmi.astrainterface serveur,    srcastra.astra.sys.classetransfert.Loginusers_T currentUser,    MainScreenModule parent, ActionToolBar actionToolBar, int frCleUnik) {        // initialisation des champs        this.serveur = serveur;        this.currentUser = currentUser;        this.parent = parent;        this.actionToolBar = actionToolBar;        this.frCleUnik = frCleUnik;        this.action = ActionToolBar.ACT_READ;        this.addComponentListener(this);    }        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// // INITIALISATION////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////          /** Initialise les champs graphiques ainsi qu'un tableau pour permettre d'interargir     * sur tous les éléments à partir d'une boucle.     * Les éléments graphiques et le tableau ne sera initialisé qu' 1 fois  */    private void init() {        if (!initOnce) {            // chargement des composants et de leurs propriétes            initComponents();            setDocumentMask();            this.addComponentListener(this);            // chargement d'un tableau reprenant tous les éléments pour une correction            this.composantToVerif = new AstraComponent[] {                grp_TField_nbreDoc, grp_TField_nbreConfirm, grp_TField_nbreFact,                grp_TField_noteCredit, grp_TField_factSolde };                            this.tb_interaction = new ToolBarInteraction(parent, this, composantToVerif);            tb_interaction.setValidateActionEnvironnement(ToolBarInteraction.ACT_ENV_STANDART);                        //-> Régistration des listeners pour la validité des composants            for (int i=0; i < composantToVerif.length; i++) {                composantToVerif[i].addActionListener(tb_interaction.getValidateActionListener());            }                            // les éléments ne sont intialisé qu'1 seule fois                initOnce = true;            grp_TField_factSolde.addActionListener(valideAndPrevious);        }    }        private void setDocumentMask() {        grp_TField_nbreDoc.setDocument(new IntegerMask(0, 4, currentUser.getLangage()));        grp_TField_nbreConfirm.setDocument(new IntegerMask(0, 4, currentUser.getLangage()));        grp_TField_nbreFact.setDocument(new IntegerMask(0, 4, currentUser.getLangage()));        grp_TField_noteCredit.setDocument(new IntegerMask(0, 4, currentUser.getLangage()));        grp_TField_factSolde.setDocument(new IntegerMask(0, 4, currentUser.getLangage()));    }        /** This method is called from within the constructor to     * initialize the form.     * WARNING: Do NOT modify this code. The content of this method is     * always regenerated by the Form Editor.     */    private void initComponents() {//GEN-BEGIN:initComponents        java.awt.GridBagConstraints gridBagConstraints;        jPanel2 = new javax.swing.JPanel();        jPanel1 = new javax.swing.JPanel();        grp_Label_nbreDoc = new javax.swing.JLabel();        grp_Label_nbreConfirm = new javax.swing.JLabel();        grp_Label_nbreFact = new javax.swing.JLabel();        grp_Label_noteCredit = new javax.swing.JLabel();        grp_Label_factSolde = new javax.swing.JLabel();        grp_TField_nbreDoc = new srcastra.astra.gui.components.textFields.ATextField();        grp_TField_nbreConfirm = new srcastra.astra.gui.components.textFields.ATextField();        grp_TField_nbreFact = new srcastra.astra.gui.components.textFields.ATextField();        grp_TField_noteCredit = new srcastra.astra.gui.components.textFields.ATextField();        grp_TField_factSolde = new srcastra.astra.gui.components.textFields.ATextField();        setBorder(new javax.swing.border.TitledBorder(java.util.ResourceBundle.getBundle("srcastra/astra/locale/ModuleFournisseur", currentUser.getLangage()).getString("DP_titrePane")));        setEnabled(false);        jPanel2.setBorder(new javax.swing.border.EtchedBorder());        jPanel2.setPreferredSize(new java.awt.Dimension(300, 115));        jPanel2.setEnabled(false);        jPanel1.setLayout(new java.awt.GridBagLayout());        jPanel1.setEnabled(false);        grp_Label_nbreDoc.setFont(new java.awt.Font("Tahoma", 0, 10));        grp_Label_nbreDoc.setForeground(java.awt.Color.black);        grp_Label_nbreDoc.setText(java.util.ResourceBundle.getBundle("srcastra/astra/locale/ModuleFournisseur", currentUser.getLangage()).getString("DP_nbrDoc"));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;        gridBagConstraints.insets = new java.awt.Insets(0, 0, 3, 3);        jPanel1.add(grp_Label_nbreDoc, gridBagConstraints);        grp_Label_nbreConfirm.setFont(new java.awt.Font("Tahoma", 0, 10));        grp_Label_nbreConfirm.setForeground(java.awt.Color.black);        grp_Label_nbreConfirm.setText(java.util.ResourceBundle.getBundle("srcastra/astra/locale/ModuleFournisseur", currentUser.getLangage()).getString("DP_nbrConfirm"));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 0;        gridBagConstraints.gridy = 1;        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;        gridBagConstraints.insets = new java.awt.Insets(0, 0, 3, 3);        jPanel1.add(grp_Label_nbreConfirm, gridBagConstraints);        grp_Label_nbreFact.setFont(new java.awt.Font("Tahoma", 0, 10));        grp_Label_nbreFact.setForeground(java.awt.Color.black);        grp_Label_nbreFact.setText(java.util.ResourceBundle.getBundle("srcastra/astra/locale/ModuleFournisseur", currentUser.getLangage()).getString("DP_nbrFact"));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 0;        gridBagConstraints.gridy = 2;        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;        gridBagConstraints.insets = new java.awt.Insets(0, 0, 3, 3);        jPanel1.add(grp_Label_nbreFact, gridBagConstraints);        grp_Label_noteCredit.setFont(new java.awt.Font("Tahoma", 0, 10));        grp_Label_noteCredit.setForeground(java.awt.Color.black);        grp_Label_noteCredit.setText(java.util.ResourceBundle.getBundle("srcastra/astra/locale/ModuleFournisseur", currentUser.getLangage()).getString("DP_nbrNcredit"));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 0;        gridBagConstraints.gridy = 3;        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;        gridBagConstraints.insets = new java.awt.Insets(0, 0, 3, 3);        jPanel1.add(grp_Label_noteCredit, gridBagConstraints);        grp_Label_factSolde.setFont(new java.awt.Font("Tahoma", 0, 10));        grp_Label_factSolde.setForeground(java.awt.Color.black);        grp_Label_factSolde.setText(java.util.ResourceBundle.getBundle("srcastra/astra/locale/ModuleFournisseur", currentUser.getLangage()).getString("DP_nbreFactSolde"));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 0;        gridBagConstraints.gridy = 4;        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;        gridBagConstraints.insets = new java.awt.Insets(0, 0, 3, 3);        jPanel1.add(grp_Label_factSolde, gridBagConstraints);        grp_TField_nbreDoc.setGrp_Comp_nextComponent(grp_TField_nbreConfirm);        grp_TField_nbreDoc.setHorizontalAlignment(javax.swing.JLabel.RIGHT);        grp_TField_nbreDoc.setWarningIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/warning.gif")));        grp_TField_nbreDoc.setWorkingIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/working.gif")));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(0, 20, 3, 0);        jPanel1.add(grp_TField_nbreDoc, gridBagConstraints);        grp_TField_nbreConfirm.setEnabled(false);        grp_TField_nbreConfirm.setGrp_Comp_nextComponent(grp_TField_nbreFact);        grp_TField_nbreConfirm.setGrp_Comp_previousComponent(grp_TField_nbreDoc);        grp_TField_nbreConfirm.setHorizontalAlignment(javax.swing.JLabel.RIGHT);        grp_TField_nbreConfirm.setWarningIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/warning.gif")));        grp_TField_nbreConfirm.setWorkingIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/working.gif")));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 1;        gridBagConstraints.gridy = 1;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(0, 20, 3, 0);        jPanel1.add(grp_TField_nbreConfirm, gridBagConstraints);        grp_TField_nbreFact.setEnabled(false);        grp_TField_nbreFact.setGrp_Comp_nextComponent(grp_TField_noteCredit);        grp_TField_nbreFact.setGrp_Comp_previousComponent(grp_TField_nbreConfirm);        grp_TField_nbreFact.setHorizontalAlignment(javax.swing.JLabel.RIGHT);        grp_TField_nbreFact.setWarningIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/warning.gif")));        grp_TField_nbreFact.setWorkingIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/working.gif")));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 1;        gridBagConstraints.gridy = 2;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(0, 20, 3, 0);        jPanel1.add(grp_TField_nbreFact, gridBagConstraints);        grp_TField_noteCredit.setEnabled(false);        grp_TField_noteCredit.setGrp_Comp_nextComponent(grp_TField_factSolde);        grp_TField_noteCredit.setGrp_Comp_previousComponent(grp_TField_nbreFact);        grp_TField_noteCredit.setHorizontalAlignment(javax.swing.JLabel.RIGHT);        grp_TField_noteCredit.setWarningIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/warning.gif")));        grp_TField_noteCredit.setWorkingIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/working.gif")));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 1;        gridBagConstraints.gridy = 3;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(0, 20, 3, 0);        jPanel1.add(grp_TField_noteCredit, gridBagConstraints);        grp_TField_factSolde.setEnabled(false);        grp_TField_factSolde.setGrp_Comp_previousComponent(grp_TField_noteCredit);        grp_TField_factSolde.setHorizontalAlignment(javax.swing.JLabel.RIGHT);        grp_TField_factSolde.setLastFocusedComponent(true);        grp_TField_factSolde.setMinimumSize(new java.awt.Dimension(100, 18));        grp_TField_factSolde.setWarningIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/warning.gif")));        grp_TField_factSolde.setWorkingIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/working.gif")));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 1;        gridBagConstraints.gridy = 4;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(0, 20, 3, 0);        jPanel1.add(grp_TField_factSolde, gridBagConstraints);        jPanel2.add(jPanel1);        add(jPanel2);    }//GEN-END:initComponents////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    // => LISTENERS////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////     public void componentShown(java.awt.event.ComponentEvent componentEvent) {        parent.setCurrentPanel(this);        switch (action) {            case ActionToolBar.ACT_READ :                displayReadMode();                break;            case ActionToolBar.ACT_INSERT :                displayInsertMode();                break;        }    }       public void componentMoved(java.awt.event.ComponentEvent componentEvent) {    }        public void componentResized(java.awt.event.ComponentEvent componentEvent) {    }        public void componentHidden(java.awt.event.ComponentEvent componentEvent) {    }    private ValidateField valideAndPrevious = new ValidateField() {        public void actionPerformed(ActionEvent evt) {            if (action == ActionToolBar.ACT_INSERT || action == ActionToolBar.ACT_MODIFY) {                requestFocus();                doPrevious();            }        }    };    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    // => METHODE APPARENTE AU BEANS////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////     ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    // => FONCTIONS APPARENTES AU TRANSFERT DE DONNEE////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////       public void chargeData() {     }          public void dbSelect() {        try {            Object obj = serveur.ChargeObject(0, currentUser.getUrcleunik(), frCleUnik, 1, serveur.COMBO_FOURNDOC);            document = (srcastra.astra.sys.classetransfert.Document_T) obj;            docCleUnik = document.getFrdtcleunik();               }        catch (java.rmi.RemoteException re) {            ErreurScreenLibrary.displayErreur(this, ErreurScreenLibrary.REMOTE_EXCEPTION, srcastra.astra.Astra.DEBUG, re);        }        catch (Exception e) {            ErreurScreenLibrary.displayErreur(this, ErreurScreenLibrary.EXCEPTION, srcastra.astra.Astra.DEBUG, e);        }        updateAllFields();    }        public void dbSelectForUpdate() {        try {            Object obj = serveur.ChargeObject(0, currentUser.getUrcleunik(), frCleUnik, 2, serveur.COMBO_FOURNDOC);            document = (srcastra.astra.sys.classetransfert.Document_T) obj;             if(document.getErreurcode()==1205)            {                JOptionPane.showMessageDialog(this,"Cette liste de document est déjà en cours de modification par un autre utilisateur!");                checkValidity=false;            }            else            {                  docCleUnik = document.getFrdtcleunik();                  updateAllFields();                  checkValidity=true;            }        }        catch (java.rmi.RemoteException re) {            ErreurScreenLibrary.displayErreur(this, ErreurScreenLibrary.REMOTE_EXCEPTION, srcastra.astra.Astra.DEBUG, re);        }        catch (Exception e) {            ErreurScreenLibrary.displayErreur(this, ErreurScreenLibrary.EXCEPTION, srcastra.astra.Astra.DEBUG, e);        }    }        public void dbInsert() {        srcastra.astra.sys.classetransfert.Gestionerreur_T erreur;        // construction de l'objet Document        document = new srcastra.astra.sys.classetransfert.Document_T();       document.setFrcleunik(frCleUnik);       document.setFrdtnbrdocprev(Integer.parseInt(grp_TField_nbreDoc.getText()));        document.setFrdtnbrconfprev(Integer.parseInt(grp_TField_nbreConfirm.getText()));        document.setFrdtnbrfactprev(Integer.parseInt(grp_TField_nbreFact.getText()));        document.setFrdtnbrcprev(Integer.parseInt(grp_TField_noteCredit.getText()));        document.setFrdtnbrfactsprev(Integer.parseInt(grp_TField_factSolde.getText()));        // envoi de document au serveur        try {            erreur = serveur.insertdocument(document, currentUser.getUrcleunik());            if (erreur.getErreurcode() == 1062) {                javax.swing.JOptionPane.showMessageDialog(this, "La référence dialogue existe déjà");            }            else {                displayDisableMode();                parent.nextScreen(PANE_NUMBER);            }        }        catch (java.rmi.RemoteException re) {            ErreurScreenLibrary.displayErreur(this, ErreurScreenLibrary.REMOTE_EXCEPTION, srcastra.astra.Astra.DEBUG, re);        }        catch (Exception e) {            ErreurScreenLibrary.displayErreur(this, ErreurScreenLibrary.EXCEPTION, srcastra.astra.Astra.DEBUG, e);        }    }        public void dbDelete() {    }        public void dbUpdate() {        srcastra.astra.sys.classetransfert.Gestionerreur_T erreur;        // construction de l'objet Document        document = new srcastra.astra.sys.classetransfert.Document_T();        document.setFrdtcleunik(docCleUnik);        document.setFrcleunik(frCleUnik);        document.setFrdtnbrdocprev(Integer.parseInt(grp_TField_nbreDoc.getText()));        document.setFrdtnbrconfprev(Integer.parseInt(grp_TField_nbreConfirm.getText()));        document.setFrdtnbrfactprev(Integer.parseInt(grp_TField_nbreFact.getText()));        document.setFrdtnbrcprev(Integer.parseInt(grp_TField_noteCredit.getText()));        document.setFrdtnbrfactsprev(Integer.parseInt(grp_TField_factSolde.getText()));        // envoi de document au serveur        try {            erreur = serveur.modifydocument(document, currentUser.getUrcleunik());            if (erreur.getErreurcode() == 1062) {                javax.swing.JOptionPane.showMessageDialog(this, "La référence dialogue existe déjà");            }            else {                displayReadMode();            }        }        catch (java.rmi.RemoteException re) {            ErreurScreenLibrary.displayErreur(this, ErreurScreenLibrary.REMOTE_EXCEPTION, srcastra.astra.Astra.DEBUG, re);        }        catch (Exception e) {            ErreurScreenLibrary.displayErreur(this, ErreurScreenLibrary.EXCEPTION, srcastra.astra.Astra.DEBUG, e);        }    }////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    // => METHODE APPARENTE A L' AFFICHAGE DES DONNEES////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////      public void displayReadMode() {        parent.setCurrentActionEnabled(new int[]{ actionToolBar.DO_MODIFY,                                                   actionToolBar.DO_CANCEL } );        action = actionToolBar.ACT_READ;        parent.enabledTabbedPane(true);        init();        for (int i=0; i < composantToVerif.length; i++) {            composantToVerif[i].setEnabled(false);            composantToVerif[i].setLastFocusedComponent(false);        }        grp_TField_factSolde.setLastFocusedComponent(true);        this.requestFocus();                dbSelect();    }        public void displayInsertMode() {        parent.setCurrentActionEnabled(new int[0]);        action = ActionToolBar.ACT_INSERT;        init();        for (int i=0; i < composantToVerif.length; i++) {            composantToVerif[i].setEnabled(false);            composantToVerif[i].setText("");        }        grp_TField_factSolde.setLastFocusedComponent(true);        grp_TField_nbreDoc.setEnabled(true);        grp_TField_nbreDoc.requestFocus();    }        public void displayUpdateMode() {          dbSelectForUpdate();             if(!checkValidity)             {                 displayReadMode();             }             else{                parent.setCurrentActionEnabled(new int[] { actionToolBar.DO_PREVIOUS,                                                            actionToolBar.DO_CANCEL } );                action = ActionToolBar.ACT_MODIFY;                parent.enabledTabbedPane(false);                init();                for (int i=0; i < composantToVerif.length; i++) {                    composantToVerif[i].setEnabled(true);                    composantToVerif[i].setLastFocusedComponent(true);                }                grp_TField_nbreDoc.requestFocus();             }    }         public void displayDisableMode() {         parent.setCurrentActionEnabled(new int[0]);        action = -1;        init();        for (int i=0; i < composantToVerif.length; i++) {            composantToVerif[i].setEnabled(false);        }     }          public void updateAllFields() {        try {            grp_TField_nbreDoc.setText("" + document.getFrdtnbrdocprev());            grp_TField_nbreConfirm.setText("" + document.getFrdtnbrconfprev());            grp_TField_nbreFact.setText("" + document.getFrdtnbrfactprev());            grp_TField_noteCredit.setText("" + document.getFrdtnbrcprev());            grp_TField_factSolde.setText("" + document.getFrdtnbrfactsprev());        }        catch (NullPointerException npe) {            ErreurScreenLibrary.displayErreur(this, ErreurScreenLibrary.NULL_POINTER_EXCEPTION, srcastra.astra.Astra.DEBUG, npe);            doCancel();        }    }         public void updateAllFields(Object donnee) {    }////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    // => METHODE APPARENTE AUX APPELS DE LA TOOLBAR////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////      public void doCancel() {        switch (action) {            case ActionToolBar.ACT_READ :                parent.cancelModule();                break;            case ActionToolBar.ACT_MODIFY :                try{                serveur.remoterollback(currentUser.getUrcleunik());                }                catch(java.rmi.RemoteException e)                {                    System.out.println("Exception dans remoterollback dans docancel fournisseurgénéralinfopane"+e.getMessage());                }                displayReadMode();                break;        }   }        public void doNext() {    }        public void doPrevious() {        switch (action) {            case ActionToolBar.ACT_INSERT :                dbInsert();                break;            case ActionToolBar.ACT_MODIFY :                dbUpdate();                break;        }    }        public void doDelete() {        JOptionPane.showMessageDialog(this,"Sorry ren pour le moment tu ne peux effacer les fournisseur que sur le premier panneaux");    }        public void doCreate() {    }        public void doHelp() {    }        public void doClose() {    }        public void doModify() {        displayUpdateMode();    }       public void doAccept() {            }        public void doPrint() {    }////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    // => Champs de la classe////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////     private srcastra.astra.sys.rmi.astrainterface serveur;    private srcastra.astra.sys.classetransfert.Loginusers_T currentUser;    private int frCleUnik;    private srcastra.astra.sys.classetransfert.Document_T document;        private MainScreenModule parent;    private int action;    private ActionToolBar actionToolBar;    private AstraComponent[] composantToVerif;        private int docCleUnik;        /** pour 1 seul initiation du panneau     */    public boolean initOnce = false;    private boolean checkValidity=false;    private ToolBarInteraction tb_interaction;//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// // STATIC VARIABLES////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////      public static int PANE_NUMBER = 1;////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////        // => Graphic Component////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////       // Variables declaration - do not modify//GEN-BEGIN:variables    private srcastra.astra.gui.components.textFields.ATextField grp_TField_nbreConfirm;    private javax.swing.JPanel jPanel2;    private javax.swing.JPanel jPanel1;    private srcastra.astra.gui.components.textFields.ATextField grp_TField_nbreFact;    private srcastra.astra.gui.components.textFields.ATextField grp_TField_nbreDoc;    private javax.swing.JLabel grp_Label_noteCredit;    private srcastra.astra.gui.components.textFields.ATextField grp_TField_factSolde;    private javax.swing.JLabel grp_Label_nbreFact;    private javax.swing.JLabel grp_Label_nbreConfirm;    private javax.swing.JLabel grp_Label_nbreDoc;    private srcastra.astra.gui.components.textFields.ATextField grp_TField_noteCredit;    private javax.swing.JLabel grp_Label_factSolde;    // End of variables declaration//GEN-END:variables////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    // BEANS PROPERTIES GET/SET SUPPORT////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    public String getTitle() {        try {            return java.util.ResourceBundle.getBundle("srcastra/astra/locale/ModuleFournisseur", currentUser.getLangage()).getString("DP_titrePane");        }        catch (java.util.MissingResourceException mre) {            ErreurScreenLibrary.displayErreur(this, ErreurScreenLibrary.MISSING_RESSOURCE_EXCEPTION, srcastra.astra.Astra.DEBUG, mre);            return "";        }    }        public void setFrCleunik(int frCleUnik) {        this.frCleUnik = frCleUnik;    }         public int getAction() {        return action;    }        public void setAction(int action) {        this.action = action;    }        /** Spécifie le composant qui implémente cette fonction comme     * le composant qui pilote l'actionToolBar     */    public void setThisAsToolBarComponent() {        parent.setCurrentPanel(this);    }        public int[] getDefaultActionToolBarMask() {        return new int[0];    }        public void doSwitch() {    }        public void goUp() {    }        public java.awt.Component m_getGeneriqueTable() {        return null;    }        public void doF10() {    }    public void addKeystroque() {    }        public void doF7() {    }        }