/*



 * FournisseurContactPane.java



 * Created on 27 mars 2002, 12:34



 */







package srcastra.astra.gui.modules.signalitique;



import srcastra.astra.gui.modules.InternScreenModule;



import srcastra.astra.gui.modules.MainScreenModule;



import srcastra.astra.gui.sys.ErreurScreenLibrary;



import srcastra.astra.gui.components.actions.actionToolBar.*;



import srcastra.astra.gui.components.AstraComponent;



import srcastra.astra.sys.classetransfert.signaletique.CodePost_Tb;



import javax.swing.JOptionPane;



import java.util.ArrayList;



import srcastra.astra.gui.sys.formVerification.*;



import srcastra.astra.gui.components.actions.ToolBarInteraction;



import srcastra.astra.sys.rmi.Exception.*;



import srcastra.astra.gui.event.ValidateField;



import java.awt.event.ActionListener;



import java.awt.event.ActionEvent;



import srcastra.astra.sys.rmi.astrainterface;







/**



 *



 * @author  Sébastien



 */



public class SignaletiqueCodePostaux extends javax.swing.JPanel implements InternScreenModule, Signaletique, ToolBarComposer, java.awt.event.ComponentListener, java.awt.event.FocusListener {







//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// 



// CONSTRUCTOR



//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// 



    



  /** Creates new form FournisseurContactPane */



    public SignaletiqueCodePostaux(srcastra.astra.sys.rmi.astrainterface serveur, srcastra.astra.sys.classetransfert.Loginusers_T currentUser, ActionToolBar actionToolBar, MainScreenModule parent) {



        // initialisation des champs



        this.serveur = serveur;



        this.currentUser = currentUser;



        this.parent = parent;



        this.actionToolBar = actionToolBar;



        this.frCleUnik = frCleUnik;



        this.addComponentListener(this);



       // init();



        parent.setCurrentPanel(this);



        displayReadMode();



    }



    



     /** Creates new form FournisseurContactPane */



    public SignaletiqueCodePostaux(srcastra.astra.sys.rmi.astrainterface serveur, srcastra.astra.sys.classetransfert.Loginusers_T currentUser, ActionToolBar actionToolBar, MainScreenModule parent, SignaletiqueOtherLanguage otherLanguageObject) {



        // initialisation des champs



        this.serveur = serveur;



        this.currentUser = currentUser;



        this.parent = parent;



        this.actionToolBar = actionToolBar;



        this.frCleUnik = frCleUnik;



        this.otherLanguage = otherLanguageObject;



        this.addComponentListener(this);



       // init();



        setLastModify(-1);



        interfacesign=this;



        langueCleUnik=this.otherLanguage.getLmcleunik();



        grp_Combo_insertCombo = new srcastra.astra.gui.components.InsertCombo.InsertCombo(new String[]{"","",""},0, currentUser);



        parent.setCurrentPanel(this);



        displayReadMode();        



    }



    



//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// 



// INITIALISATION



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////  



    



    /** Initialise les champs graphiques ainsi qu'un tableau pour permettre d'interargir



     * sur tous les éléments à partir d'une boucle.



     * Les éléments graphiques et le tableau ne sera initialisé qu' 1 fois  */



    private void init() {



        if (!initOnce) {



            // chargement des composants et de leurs propriétes



            initComponents();



            init2();



            setDocumentMask();



            // chargement d'un tableau reprenant tous les éléments pour une correction



            this.composantToVerif = new AstraComponent[] {



                grp_TField_CodePostal, grp_TField_Localite};



            this.tb_interaction = new ToolBarInteraction(parent, this, composantToVerif);



            tb_interaction.setValidateActionEnvironnement(ToolBarInteraction.ACT_ENV_STANDART);



            //-> Régistration des listeners pour la validité des composants



            for (int i=0; i < composantToVerif.length; i++) {



                // composantToVerif[i].addPropertyChangeListener(tb_interaction.getChangeCorrectInputListener());



                composantToVerif[i].addActionListener(tb_interaction.getValidateActionListener());



            }



            grp_Combo_insertCombo.addInsertComboListener(tb_interaction.getChangeInsertComboDataActionListener());



            //-------------------fin de la régistration des listeners dans les beans --------------------------------



            



            // les éléments ne sont intialisé qu'1 seule fois



            initOnce = true;



            grp_TField_Localite.addActionListener(validateAndDoPrevious);



        }



    }



    



    private void setDocumentMask() {



        grp_TField_CodePostal.setDocument(new DefaultMask(1, 15, currentUser.getLangage(), DefaultMask.ALL_LETTRE_IN_UPPERCASE));
        grp_TField_Localite.setDocument(new DefaultMask(1, 30, currentUser.getLangage(), DefaultMask.ALL_LETTRE_IN_UPPERCASE));



    }



    



    /** This method is called from within the constructor to



     * initialize the form.



     * WARNING: Do NOT modify this code. The content of this method is



     * always regenerated by the Form Editor.



     */



    private void initComponents() {//GEN-BEGIN:initComponents



        java.awt.GridBagConstraints gridBagConstraints;







        buttonGroup1 = new javax.swing.ButtonGroup();



        grp_Pan_Center = new javax.swing.JPanel();



        grp_Pan_AfficheInsertCombo = new javax.swing.JPanel();



        jPanel8 = new javax.swing.JPanel();



        jPanel5 = new javax.swing.JPanel();



        jPanel6 = new javax.swing.JPanel();



        grp_Label_CodePostal = new javax.swing.JLabel();



        grp_Label_Localite = new javax.swing.JLabel();



        grp_TField_CodePostal = new srcastra.astra.gui.components.textFields.ATextField();



        grp_TField_Localite = new srcastra.astra.gui.components.textFields.ATextField();



        jPanel9 = new javax.swing.JPanel();







        setLayout(new java.awt.BorderLayout());







        setBorder(new javax.swing.border.TitledBorder(null, java.util.ResourceBundle.getBundle("srcastra/astra/locale/Signalitique", currentUser.getLangage()).getString("Cp_titrePane"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11)));



        setEnabled(false);



        grp_Pan_Center.setLayout(new java.awt.BorderLayout());







        grp_Pan_AfficheInsertCombo.setLayout(new java.awt.BorderLayout());







        grp_Pan_AfficheInsertCombo.setEnabled(false);



        grp_Pan_AfficheInsertCombo.add(jPanel8, java.awt.BorderLayout.NORTH);







        grp_Pan_Center.add(grp_Pan_AfficheInsertCombo, java.awt.BorderLayout.EAST);







        jPanel5.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 20));







        jPanel5.setBorder(new javax.swing.border.EtchedBorder());



        jPanel5.setEnabled(false);



        jPanel5.addMouseListener(new java.awt.event.MouseAdapter() {



            public void mouseClicked(java.awt.event.MouseEvent evt) {



                jPanel5MouseClicked(evt);



            }



        });







        jPanel6.setLayout(new java.awt.GridBagLayout());







        jPanel6.setEnabled(false);



        jPanel6.addMouseListener(new java.awt.event.MouseAdapter() {



            public void mouseClicked(java.awt.event.MouseEvent evt) {



                jPanel6MouseClicked(evt);



            }



        });







        grp_Label_CodePostal.setFont(new java.awt.Font("Tahoma", 0, 10));



        grp_Label_CodePostal.setForeground(java.awt.Color.black);



        grp_Label_CodePostal.setText(java.util.ResourceBundle.getBundle("srcastra/astra/locale/Signalitique", currentUser.getLangage()).getString("Cp_CodePostal"));



        gridBagConstraints = new java.awt.GridBagConstraints();



        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;



        gridBagConstraints.insets = new java.awt.Insets(0, 0, 3, 100);



        jPanel6.add(grp_Label_CodePostal, gridBagConstraints);







        grp_Label_Localite.setFont(new java.awt.Font("Tahoma", 0, 10));



        grp_Label_Localite.setForeground(java.awt.Color.black);



        grp_Label_Localite.setText(java.util.ResourceBundle.getBundle("srcastra/astra/locale/Signalitique", currentUser.getLangage()).getString("Cp_Localite"));



        gridBagConstraints = new java.awt.GridBagConstraints();



        gridBagConstraints.gridx = 0;



        gridBagConstraints.gridy = 1;



        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;



        gridBagConstraints.insets = new java.awt.Insets(0, 0, 3, 100);



        jPanel6.add(grp_Label_Localite, gridBagConstraints);







        grp_TField_CodePostal.setEnabled(false);



        grp_TField_CodePostal.setGrp_Comp_nextComponent(grp_TField_Localite);







        grp_TField_CodePostal.setGrp_Comp_nextComponent(grp_TField_Localite);



        







        grp_TField_CodePostal.setWarningIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/warning.gif")));



        grp_TField_CodePostal.setWorkingIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/working.gif")));



        gridBagConstraints = new java.awt.GridBagConstraints();



        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;



        gridBagConstraints.insets = new java.awt.Insets(0, 0, 3, 0);



        jPanel6.add(grp_TField_CodePostal, gridBagConstraints);







        grp_TField_Localite.setEnabled(false);







        grp_TField_Localite.setGrp_Comp_nextComponent(null);



        grp_TField_Localite.setGrp_Comp_previousComponent(grp_TField_CodePostal);



        grp_TField_Localite.setLastFocusedComponent(true);



        grp_TField_Localite.setPreferredSize(new java.awt.Dimension(130, 18));







        grp_TField_Localite.setGrp_Comp_nextComponent(null);



        grp_TField_Localite.setGrp_Comp_previousComponent(grp_TField_CodePostal);



        grp_TField_Localite.setLastFocusedComponent(true);



        grp_TField_Localite.setPreferredSize(new java.awt.Dimension(130, 18));







        grp_TField_Localite.setWarningIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/warning.gif")));



        grp_TField_Localite.setWorkingIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/working.gif")));



        gridBagConstraints = new java.awt.GridBagConstraints();



        gridBagConstraints.gridx = 1;



        gridBagConstraints.gridy = 1;



        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;



        gridBagConstraints.insets = new java.awt.Insets(0, 0, 3, 0);



        jPanel6.add(grp_TField_Localite, gridBagConstraints);







        jPanel5.add(jPanel6);







        jPanel9.setLayout(new java.awt.GridBagLayout());







        jPanel5.add(jPanel9);







        grp_Pan_Center.add(jPanel5, java.awt.BorderLayout.SOUTH);







        add(grp_Pan_Center, java.awt.BorderLayout.NORTH);







    }//GEN-END:initComponents



    private void jPanel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel5MouseClicked



        grp_Combo_insertCombo.setFocusRecherche();   // Add your handling code here:



    }//GEN-LAST:event_jPanel5MouseClicked



    private void jPanel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel6MouseClicked



        grp_Combo_insertCombo.setFocusRecherche();        // Add your handling code here:



    }//GEN-LAST:event_jPanel6MouseClicked



  private void init2() {



      try {



        String[] titre=new String[]{"",



                                    java.util.ResourceBundle.getBundle("srcastra.astra.locale.Signalitique", currentUser.getLangage()).getString("Cp_CodePostal"),



                                    java.util.ResourceBundle.getBundle("srcastra.astra.locale.Signalitique", currentUser.getLangage()).getString("Cp_Localite") };







       // grp_Combo_insertCombo = new srcastra.astra.gui.components.InsertCombo.InsertCombo(titre,0, currentUser);



        grp_Combo_insertCombo.setTitle(titre);



        grp_Combo_insertCombo.setServeur(this.serveur);



        grp_Combo_insertCombo.setTypeDeCombo(srcastra.astra.sys.rmi.astrainterface.COMBO_CODE_POST);



        grp_Combo_insertCombo.setIParent(this);



        grp_Combo_insertCombo.setEnvironnement(srcastra.astra.gui.components.InsertCombo.InsertCombo.ENVIRONNEMENT_PANEL_SIGNALETIQUE);



        grp_Pan_AfficheInsertCombo.add(grp_Combo_insertCombo);       



      }



      catch (java.util.MissingResourceException mre) {



          ErreurScreenLibrary.displayErreur(this, ErreurScreenLibrary.MISSING_RESSOURCE_EXCEPTION, srcastra.astra.Astra.DEBUG, mre);



      }



       



    }  







////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    



// => METHODE APPARENTE AU BEANS



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////   



 /*  public void verifAllFields() {



       int verif = 0;



       int taille = composantToVerif.length;



       for (int i=0; i < composantToVerif.length; i++) {



            verif = verif + composantToVerif[i].getverif();



            composantToVerif[i].setLastFocusedComponent(true);



        }



        if (verif <= 0) {



            int[] act = new int[] { actionToolBar.DO_PREVIOUS,



                                    actionToolBar.DO_CANCEL };



            parent.setCurrentActionEnabled(act);



        }



        else {



            int[] act = new int[] { actionToolBar.DO_CANCEL };



            parent.setCurrentActionEnabled(act);



        }



    }



  */



    public void setFocusToCombo(boolean x)    {



        grp_Combo_insertCombo.changeSelectionColor(x);



    }



    



    private String renvTraduction(ArrayList tmpList2)



    {



        ArrayList tmpList=tmpList2;



        Object[] tmpObj=(Object[])tmpList.get(langueCleUnik-1);



        return tmpObj[2].toString();       



    }



    private void grp_But_dernierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grp_But_dernierActionPerformed



        // Add your handling code here:      



    }//GEN-LAST:event_grp_But_dernierActionPerformed



    private void grp_But_SuivantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grp_But_SuivantActionPerformed



        // Add your handling code here:



    }//GEN-LAST:event_grp_But_SuivantActionPerformed



    private void grp_But_precedentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grp_But_precedentActionPerformed



        // Add your handling code here:



    }//GEN-LAST:event_grp_But_precedentActionPerformed



    private void grp_But_premierElementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grp_But_premierElementActionPerformed



        // Add your handling code here:



    }//GEN-LAST:event_grp_But_premierElementActionPerformed



    private void grp_Cbox_FournisseurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grp_Cbox_FournisseurActionPerformed



        // Add your handling code here:



    }//GEN-LAST:event_grp_Cbox_FournisseurActionPerformed



    private void grp_CBox_DepartementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grp_CBox_DepartementActionPerformed



        // Add your handling code here:



    }//GEN-LAST:event_grp_CBox_DepartementActionPerformed



    private void grp_CBox_NomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grp_CBox_NomActionPerformed



        // Add your handling code here:



    }//GEN-LAST:event_grp_CBox_NomActionPerformed



   



      



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    



// => FONCTIONS APPARENTES AU TRANSFERT DE DONNEE



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////  



   



     public void chargeData() {



    //   try {



           // java.util.ArrayList d = serveur.renvcombo('c',currentUser.getUrcleunik(),currentUser.getUrlmcleunik(),'p'," ",2);



            // setData(d);



      // }



      // catch (java.rmi.RemoteException re) {



        //   ErreurScreenLibrary.displayErreur(this,  ErreurScreenLibrary.REMOTE_EXCEPTION, srcastra.astra.Astra.DEBUG, re);



       //}



    }    



     



    public void dbSelect() {

           grp_Combo_insertCombo.setModifyItem(getLastModify());

           if (codep != null) setLastModify(codep.getCxcleunik());

           else setLastModify(-1);

           grp_Combo_insertCombo.setValuefromParent(1,serveur.COMBO_CODE_POST);

           grp_Combo_insertCombo.chargeData(1); 

   }



    



    public void dbSelectForUpdate() {



      try {



            Object obj = serveur.ChargeObjectPopup(currentUser.getUrlmcleunik(), currentUser.getUrcleunik(),  CodePostalCleUnik, 2, serveur.COMBO_CODE_POST);



            codep = (CodePost_Tb) obj;



            if(codep.getErreurcode()==1205)



            {



               JOptionPane.showMessageDialog(this,"Ce code postal est déjà en cours de modification par un autre utilisateur"); 



               checkValidity=false;



            }



            else



            {



                 CodePostalCleUnik = codep.getCxcleunik();



                 String test=renvTraduction(codep.getdata());



                 if(test.compareTo("none")==0)



                    codep.setTmpString("none");



                 else 



                     codep.setTmpString("ok");



                 updateAllFields();



                 checkValidity=true;



                



            }



            CodePostalCleUnik = codep.getCxcleunik();



        }



        catch (java.rmi.RemoteException re) {



            System.out.println("Attention : " + this.getClass().getName() + " fct : prepareForInsertion !!!");



            System.out.println(re);



        }       



    }



    



    public void dbInsert() {

        srcastra.astra.sys.classetransfert.Gestionerreur_T erreur=new srcastra.astra.sys.classetransfert.Gestionerreur_T();

        if(codep==null)

            codep=new CodePost_Tb();

        codep.setCxcode(grp_TField_CodePostal.getText());

        codep.setCxlocalite(grp_TField_Localite.getText());

         try {

            erreur = serveur.insertObjectPopup(codep,currentUser.getUrcleunik(),serveur.COMBO_CODE_POST,1);

            if (erreur.getErreurcode() == 1062) {

                javax.swing.JOptionPane.showMessageDialog(this, "Le code postal existe déjà");

           }

            else {

                action = ActionToolBar.ACT_READ;
                setLastModify(erreur.getTmpint());
                displayReadMode();

           }

        }

        catch (java.rmi.RemoteException re) {

            ErreurScreenLibrary.displayErreur(this,  ErreurScreenLibrary.REMOTE_EXCEPTION, srcastra.astra.Astra.DEBUG, re);            



        }



        



   



    }



  



    public void dbDelete() {



        try{ArrayList tmp=codep.getdata();



           // Object[] tmpobj=(Object[])tmp.get(codep.getCxlangue());



            //String message=tmpobj[1].toString();



            int rep=JOptionPane.showConfirmDialog(this,java.util.ResourceBundle.getBundle("srcastra/astra/locale/alertmessage",currentUser.getLangage()).getString("eff_sign")+codep.getCxcode()+" - "+codep.getCxlocalite());



            if(rep==JOptionPane.YES_OPTION)



            {           



            serveur.deleteSignaletique(this.codep.TABLE_CP,this.codep.CLE_CP,currentUser.getUrcleunik(),codep.CHECK_FOR_FOURN_AND_CLIENT,this.codep.getCxcleunik(),astrainterface.COMBO_CODE_POST);          



            setLastModify(-1);



            displayReadMode();



            }



        }



        catch(ServeurSqlFailure se){



          ErreurScreenLibrary.displayErreur(this, ErreurScreenLibrary.SERVEUR_SQL_FAILURE, srcastra.astra.Astra.DEBUG, se,this.currentUser);  



       } 



        catch (java.rmi.RemoteException re) {



            ErreurScreenLibrary.displayErreur(this, ErreurScreenLibrary.REMOTE_EXCEPTION, srcastra.astra.Astra.DEBUG, re);



        }



    }



    



    public void dbUpdate() {



        srcastra.astra.sys.classetransfert.Gestionerreur_T erreur;



        codep.setCxcode(grp_TField_CodePostal.getText());



        codep.setCxlocalite(grp_TField_Localite.getText());



        codep.setCxlangue(otherLanguage.getLmcleunik());



         try {



            erreur = serveur.modifyObjectPopup(codep,currentUser.getUrcleunik(),serveur.COMBO_CODE_POST,1);



            codep.setTmpString("");



            if (erreur.getErreurcode() == 1062) {



                javax.swing.JOptionPane.showMessageDialog(this, "Le code postal existe déjà");



            }



            else {



                action = ActionToolBar.ACT_READ;



                setLastModify(codep.getCxcleunik());



                displayReadMode();



            }



        }



        catch (java.rmi.RemoteException re) {



            ErreurScreenLibrary.displayErreur(this,  ErreurScreenLibrary.REMOTE_EXCEPTION, srcastra.astra.Astra.DEBUG, re);       



            codep.setTmpString("");



        }



     



    }



    



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    



// => METHODE APPARENTE A L' AFFICHAGE DES DONNEES



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////     



    public void displayReadMode() {

        // toolbar

        parent.setCurrentActionEnabled(new int[0]);

        action = ActionToolBar.ACT_READ;

        init();

        /* chargement des données en lecture dans grp_Combo_inserCombo */

        dbSelect();        

        for (int i=0; i < composantToVerif.length; i++) {

            composantToVerif[i].setEnabled(false);

            composantToVerif[i].setLastFocusedComponent(false);

        }

        grp_Combo_insertCombo.setEnabled(true);

        grp_TField_Localite.setLastFocusedComponent(true);

        this.requestFocus();

        otherLanguage.setEnabled_grp_List_LanguageList(true);       

    }



    



    public void displayInsertMode() {



        // toolbar



        parent.setCurrentActionEnabled(new int[] { ActionToolBar.DO_CANCEL } );



        action = ActionToolBar.ACT_INSERT;



        init();



        for (int i=0; i < composantToVerif.length; i++) {



            composantToVerif[i].setEnabled(false);



            composantToVerif[i].setText("");



        }



        grp_Combo_insertCombo.setEnabled(false);



        grp_TField_Localite.setLastFocusedComponent(true);



        grp_TField_CodePostal.setEnabled(true);



        grp_TField_CodePostal.requestFocus();



        otherLanguage.setEnabled_grp_List_LanguageList(false);



        grp_TField_CodePostal.requestFocus();



    }



    



    public void displayUpdateMode() {



        // effectuer un select for update dans insertCombo 



        dbSelectForUpdate();



        if(!checkValidity)



        {



            displayReadMode();



        }



        else{



        // afficher les données dans les champs d'insertCombo



        



        parent.setCurrentActionEnabled(new int[] { ActionToolBar.DO_PREVIOUS,



                                                   ActionToolBar.DO_CANCEL } );



        action = ActionToolBar.ACT_MODIFY;



        init();



        for (int i=0; i < composantToVerif.length; i++) {



            composantToVerif[i].setEnabled(true);



            composantToVerif[i].setLastFocusedComponent(true);



        }







        grp_Combo_insertCombo.setEnabled(false);



        grp_TField_CodePostal.requestFocus();



        otherLanguage.setEnabled_grp_List_LanguageList(false);



        grp_TField_CodePostal.requestFocus();



        



        otherLanguage.setEnabled_grp_List_LanguageList(false);



        grp_TField_CodePostal.requestFocus();    



        grp_TField_CodePostal.requestFocus();    







        }



    }



    



    public void displayDisableMode() {



         //



     }



    



     public void updateAllFields()



    {



        grp_TField_CodePostal.setText("" + codep.getCxcode());



        grp_TField_Localite.setText(renvTraduction(codep.getdata())); 



        



    }



    public void updateAllFields(Object donnee) {



        codep=(CodePost_Tb)donnee;



        CodePostalCleUnik = codep.getCxcleunik();



        //if (otherLanguage != null) {



          //  otherLanguage.setAvaibleLanguage(codep.getdata(),currentUser.getUrlmcleunik());



        //}



        updateAllFields();



    }



    



    public void updateAllFields(int langueCleUnik) {



        this.langueCleUnik = langueCleUnik;



        if(codep!=null)



        {



        grp_TField_Localite.setText(renvTraduction(codep.getdata()));    



        }



    }



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    



// => METHODE APPARENTE AUX APPELS DE LA TOOLBAR



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////       



 



    public void doCancel() {



       switch (action) {



            case ActionToolBar.ACT_INSERT :



                displayReadMode();    



                break;



            case ActionToolBar.ACT_MODIFY :



                try{



                serveur.remoterollback(currentUser.getUrcleunik());



                }catch(java.rmi.RemoteException e){System.out.println("erreur dans le rollback dans signalitique des code postaux F8(cancel)"+e.getMessage());}



                setLastModify(codep.getCxcleunik());



                displayReadMode();



                break;



            case ActionToolBar.ACT_READ :



                parent.cancelModule();



        }                                        



    }



    



    public void doNext() {



    }



    



    public void doPrevious() {

        if (action == ActionToolBar.ACT_INSERT) {

            dbInsert();

        }

        else if (action == ActionToolBar.ACT_MODIFY) {

            dbUpdate();

        }

    }



    



    public void doDelete() {



        dbDelete();



    }



    



    public void doCreate() {



        displayInsertMode();        



    }



    



    public void doHelp() {



   }



    



    public void doClose() {



        parent.closeModule();



    }



    



    public void doModify() {



        displayUpdateMode();



    }



    



    public void doAccept() {



        // actions



        



        



   }



    



    public void doPrint() {



    }



    



  



  



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    



// => LISTENERS



///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////   



    



    public void componentShown(java.awt.event.ComponentEvent componentEvent) {



        //actionToolBar.setTbComposer(this);



        parent.setCurrentPanel(this);



        switch (action) {



            case ActionToolBar.ACT_READ :



                displayReadMode();



                break;



            case ActionToolBar.ACT_INSERT :



                displayInsertMode();



                break;



        }



    }



    



    public void componentMoved(java.awt.event.ComponentEvent componentEvent) {



    }



    



    public void componentResized(java.awt.event.ComponentEvent componentEvent) {



    }



    



    public void componentHidden(java.awt.event.ComponentEvent componentEvent) {



    }



    



    public void focusLost(java.awt.event.FocusEvent focusEvent) {



    }



    



    public void focusGained(java.awt.event.FocusEvent focusEvent) {



    }







    private ValidateField validateAndDoPrevious = new ValidateField() {



          public void actionPerformed(ActionEvent evt) {



              srcastra.astra.gui.components.textFields.ATextField field = (srcastra.astra.gui.components.textFields.ATextField)evt.getSource();



               if ((action == ActionToolBar.ACT_INSERT || action == ActionToolBar.ACT_MODIFY) && !field.getText().equals("")) {



                   requestFocus();



                   doPrevious();



               }



           }



       };







    



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    



// => Champs de la classe



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////      



    



    private int langueCleUnik;



    private srcastra.astra.sys.rmi.astrainterface serveur;    



    private srcastra.astra.sys.classetransfert.Loginusers_T currentUser;    



    private int frCleUnik;



    private CodePost_Tb codep;



    private java.util.ArrayList data;



    private MainScreenModule parent;



    private SignaletiqueOtherLanguage otherLanguage;



    private char premiereLettre = 1;    



    private boolean create = false;    



    public boolean modif = false;



    private int action;



    private ActionToolBar actionToolBar;



    private AstraComponent[] composantToVerif;



    /** pour 1 seul initiation du panneau



     */



    public boolean initOnce = false;



    private ToolBarInteraction tb_interaction;



    



    private srcastra.astra.gui.components.InsertCombo.InsertCombo grp_Combo_insertCombo;



    private int CodePostalCleUnik; 



    private Signaletique interfacesign;



    private boolean checkValidity=false;



    private int lmcleunik;



    private int lastModify;



    



    



//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// 



// STATIC VARIABLES



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////     



    public static int PANE_NUMBER = 4;



    



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////        



// => Graphic Component



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    



    



    // Variables declaration - do not modify



    private javax.swing.JPanel jPanel9;



    private javax.swing.JPanel jPanel8;



    private javax.swing.JPanel jPanel6;



    private javax.swing.JPanel jPanel5;



    private javax.swing.JPanel grp_Pan_AfficheInsertCombo;



    private srcastra.astra.gui.components.textFields.ATextField grp_TField_CodePostal;



    private srcastra.astra.gui.components.textFields.ATextField grp_TField_Localite;



    private javax.swing.ButtonGroup buttonGroup1;



    private javax.swing.JLabel grp_Label_CodePostal;



    private javax.swing.JLabel grp_Label_Localite;



    private javax.swing.JPanel grp_Pan_Center;



    // End of variables declaration



    



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    



// BEANS PROPERTIES GET/SET SUPPORT



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    



    



    public String getTitle() {



        return "Contact";



    }    



    public void setFrCleunik(int frCleUnik) {



       this.frCleUnik = frCleUnik;



    }  



    



     /** Getter for property data.



     * @return Value of property data.



     */



    public java.util.ArrayList getData() {



        return data;



    }



    



    public int getAction() {



        return this.action;



    }



    



    public void setAction(int action) {



        this.action = action;



    }



    



    /** Spécifie le composant qui implémente cette fonction comme



     * le composant qui pilote l'actionToolBar



     */



    public void setThisAsToolBarComponent() {



        //actionToolBar.setTbComposer(this);



        System.out.println("ta mère à poil !");



        parent.setCurrentPanel(this);



    }



    



    public int[] getDefaultActionToolBarMask() {



        return new int[] { actionToolBar.DO_CREATE, 



                           actionToolBar.DO_MODIFY,



                           actionToolBar.DO_CLOSE };



    }



    



     /** Getter for property otherLanguage.



     * @return Value of property otherLanguage.



     */



    public srcastra.astra.gui.modules.signalitique.SignaletiqueOtherLanguage getOtherLanguage() {



    return otherLanguage;



    }    



      



    /** Setter for property otherLanguage.



     * @param otherLanguage New value of property otherLanguage.



     */



    public void setOtherLanguage(srcastra.astra.gui.modules.signalitique.SignaletiqueOtherLanguage otherLanguage) {



        this.otherLanguage = otherLanguage;



    }



    



      public int setMode(int mode)



    {



       return 1; 



    }



    



    /** Getter for property lmcleunik.



     * @return Value of property lmcleunik.



     */



    public int getLmcleunik() {



        return lmcleunik;



    }



    



    /** Setter for property lmcleunik.



     * @param lmcleunik New value of property lmcleunik.



     */



    public void setLmcleunik(int lmcleunik) {



        this.lmcleunik = lmcleunik;



    }



    



    /** Getter for property lastModify.



     * @return Value of property lastModify.



     */



    public int getLastModify() {



        return lastModify;



    }



    



    /** Setter for property lastModify.



     * @param lastModify New value of property lastModify.



     */



    public void setLastModify(int lastModify) {



        this.lastModify = lastModify;



    }



    



    public void doSwitch() {



    }    



   



    public void goUp() {



    }    



   



    public java.awt.Component m_getGeneriqueTable() {



        return grp_Combo_insertCombo.getGrp_Table_Affiche();



    }



    



    public void doF10() {



    }

    public void addKeystroque() {
    }    

    public void doF7() {
    }    

    



}



