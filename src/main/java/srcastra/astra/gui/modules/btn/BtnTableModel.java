/* * DossierIndexTableModel.java * * Created on 30 août 2002, 9:49 */package srcastra.astra.gui.modules.btn;import srcastra.astra.gui.sys.tableModel.AbstractVectorTableModel;import srcastra.astra.gui.sys.tableModel.ColumnData;import javax.swing.JLabel;import java.util.Vector;import java.util.ArrayList;import srcastra.astra.gui.sys.ErreurScreenLibrary;import srcastra.astra.sys.rmi.astrainterface;import srcastra.astra.sys.classetransfert.Loginusers_T;import srcastra.astra.gui.modules.mainScreenModule.DossierMainScreenModule;import java.rmi.RemoteException;import srcastra.astra.sys.classetransfert.dossier.Dossier_T;import srcastra.astra.sys.rmi.DossierRmiInterface;import srcastra.astra.sys.classetransfert.dossier.avion.*;import srcastra.astra.sys.classetransfert.utils.Date;import srcastra.astra.sys.btn.model.Reservering;public class BtnTableModel extends javax.swing.table.DefaultTableModel {    srcastra.astra.gui.sys.listModel.dossierListModel.StatusListModel statutliste;    public ColumnData[] columData;    astrainterface serveur;    Loginusers_T currentUser;    ArrayList m_vector;    public BtnTableModel(astrainterface serveur, Loginusers_T currentUser) {        //super(serveur, currentUser);        this.currentUser = currentUser;        this.serveur = serveur;        loadColumnNames();    }    protected ColumnData[] loadColumnNames() {        java.util.ResourceBundle rb = null;        try {            rb = java.util.ResourceBundle.getBundle("srcastra/astra/locale/Btn", currentUser.getLangage());        }        catch (java.util.MissingResourceException e) {            ErreurScreenLibrary.displayErreur(null, ErreurScreenLibrary.MISSING_RESSOURCE_EXCEPTION, srcastra.astra.Astra.DEBUG, e);        }        if (rb != null) {            columData = new ColumnData[]{                    new ColumnData("to", rb, 30, JLabel.LEFT),                    new ColumnData("broch", rb, 40, JLabel.CENTER),                    new ColumnData("num", rb, 35, JLabel.LEFT),                    new ColumnData("client", rb, 45, JLabel.LEFT),                    new ColumnData("date", rb, 25, JLabel.LEFT),                    new ColumnData("prix", rb, 10, JLabel.CENTER),            };        }        return columData;    }    public int getColumnCount() {        if (columData != null)            return columData.length;        return 0;    }    public String getColumnName(int i) {        if (columData != null)            return columData[i].getM_title();        return "";    }    public int getRowCount() {        if (this.m_vector != null) {            return this.m_vector.size();        } else {            return 0;        }    }    public void setData(ArrayList array) {        m_vector = array;    }    public boolean isCellEditable(int row, int col) {        return false;    }    public Object getValueAt(int param, int param1) {        if (param1 < 0 || param1 > getColumnCount())            return "";        if (m_vector != null) {            Reservering reserve = (Reservering) m_vector.get(param);            if (reserve != null) {                switch (param1) {                    case 0:                        return reserve.getTocodeS() != null ? reserve.getTocodeS() : " ";                    case 1:                        return reserve.getTobrochureS() != null ? reserve.getTobrochureS() : " ";                    case 2:                        return reserve.getBoekingnumber() != null ? reserve.getBoekingnumber() : " ";                    case 3:                        return reserve.getClientName() != null ? reserve.getClientName() : " ";                    case 4:                        return reserve.getTripDate() != null ? reserve.getTripDate().toString2() : " ";                    case 5:                        return reserve.getPrice().toString() != null ? reserve.getPrice().toString() : " ";                }            }        }        return "";    }    public Object[] getClassAffichage(int row) {        if (this.tmpArray != null)            if (row >= 0 && row < this.tmpArray.size())                return (Object[]) tmpArray.get(row);        return null;    }    public synchronized boolean retrieveData() {        return true;    }    public synchronized boolean retrieveData(ArrayList tmpArray) {        //  Vector oldVect = (Vector) m_vector.clone();        this.tmpArray = tmpArray;        m_vector = new ArrayList();        Dossier_T tmpDossier;        String numticket = "";        String destination = "";        String fournisseur = "";        if (tmpArray != null) {            this.tmpArray = tmpArray;        }        m_result = true;        //   if (!m_result) { m_vector = oldVect; }        return m_result;    }    public java.util.ArrayList getData() {        return tmpArray;    }    private ArrayList data;    private ArrayList tmpArray;    private DossierMainScreenModule parent;    private DossierRmiInterface serveurDossier;    private boolean m_result = true;}