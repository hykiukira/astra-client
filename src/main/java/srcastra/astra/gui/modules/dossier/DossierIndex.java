/* * FournisseurIndex.java * Created on 11 avril 2002, 10:56 */package srcastra.astra.gui.modules.dossier;import java.io.*;//ajout de Driart le 21 aout 2003 import com.java4less.rreport.AstraPrint;//end ajout// srcastra Importimport srcastra.astra.gui.components.actions.actionToolBar.ActionToolBar;import srcastra.astra.gui.modules.InternScreenModule;import srcastra.astra.gui.modules.mainScreenModule.DossierMainScreenModule;import srcastra.astra.gui.components.actions.actionToolBar.ToolBarComposer;import srcastra.astra.gui.sys.tableModel.dossierTableModel.DossierIndexTableModel;import srcastra.astra.sys.classetransfert.dossier.*;import srcastra.astra.sys.rmi.DossierRmiInterface;import srcastra.astra.sys.classetransfert.dossier.Dossier_T;import java.util.ArrayList;import srcastra.astra.gui.event.NavigateInTable;import java.awt.event.*;import srcastra.astra.gui.sys.utils.CursorChange;import java.rmi.*;import srcastra.astra.gui.sys.ErreurScreenLibrary;import srcastra.astra.gui.components.buttongroup.*;import javax.swing.*;import java.awt.event.*;import java.util.*;import srcastra.astra.gui.components.textFields.ATextField;import javax.swing.table.*;import srcastra.astra.sys.classetransfert.*;import javax.swing.event.ListSelectionEvent;import javax.swing.event.ListSelectionListener;/** * @author Sébastien */public class DossierIndex extends javax.swing.JPanel implements InternScreenModule, ToolBarComposer, InterfaceModuleDossier, srcastra.astra.sys.rmi.DossierSqlRecherche, ListSelectionListener {////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////     // CONSTRUCTOR    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    /**     * Creates new form FournisseurIndex     */    Loginusers_T currentUser;    public DossierIndex(DossierMainScreenModule parent) {        this.parent = parent;        currentUser = parent.getCurrentUser();        init();        initListe();        this.ncfacts2.setVisible(false);        // initButtonGroup();        this.nomComponent = new Hashtable();        /* nomComponent.put("grp_TField_NumDossier",grp_jRadioButton_numdos);         nomComponent.put("grp_TField_Po",grp_jRadioButton_po);         nomComponent.put("grp_TField_RefCliCon",grp_jRadioButton_refclicon);         nomComponent.put("grp_TField_RefCliFact",grp_jRadioButton_refclifact);//prepareKeyeventAdapter();         nomComponent.put("grp_TField_NumFacture",grp_jRadioButton_numfact);//joinListenersToComponent();         nomComponent.put("grp_TField_NumNc",grp_jRadioButton_numnc);         nomComponent.put("grp_TField_NumFactFourn",grp_jRadioButton_numfactFourn);         nomComponent.put("grp_TField_Aucun",grp_jRadioButton_Aucun1);*/        //  postinit();    }    private void postinit() {        jScrollPane1.getViewport().setBackground(new java.awt.Color(255, 204, 102));        grp_Table_dossier.getTableHeader().setBackground(new java.awt.Color(204, 0, 0));        grp_Table_dossier.getTableHeader().setForeground(new java.awt.Color(255, 204, 102));        grp_Table_dossier.getTableHeader().setFont(new java.awt.Font("Tahoma", java.awt.Font.BOLD, 12));    }    private void initListe() {        grp_Liste_TypeProduit.setServeur(parent.getServeur());        grp_Liste_TypeProduit.setLogin(parent.getCurrentUser());        this.typeProdmodel = new srcastra.astra.gui.components.combobox.liste.TypeProduitListeTableModel(parent.getServeur(), parent.getCurrentUser());        grp_Liste_TypeProduit.setModel(this.typeProdmodel);        grp_Liste_TypeProduit.init2();    }    /*  private void initButtonGroup(){     mybuttongroup=new MyButtonGroup();     mybuttongroup2=new MyButtonGroup();   //  mybuttongroup2.add(grp_jR     grp_TField_NumDossier.setText("PER0");     grp_TField_NumDossier.addKeyListener(key);     grp_TField_Po.addKeyListener(key);     grp_TField_RefCliCon.addKeyListener(key);     grp_TField_RefCliFact.addKeyListener(key);     grp_TField_NumFacture.addKeyListener(key);     grp_TField_NumNc.addKeyListener(key);     grp_TField_NumFactFourn.addKeyListener(key);     mybuttongroup2.add(grp_jRadionbutton_Datecreation,aDate1);     mybuttongroup2.add(grp_jRadionbutton_DateDepart,aDate2);   //   mybuttongroup2.add(grp_jRadionbutton_Facture,grp_TField_Facture);     mybuttongroup2.add(grp_jRadionbutton_Type_produit,grp_Liste_TypeProduit);      mybuttongroup2.add(grp_jRadioButton_Aucun2,grp_TField_Aucun2);    //  grp_TField_Aucun.setVisible(false);     mybuttongroup.add(grp_jRadioButton_numdos,grp_TField_NumDossier);     mybuttongroup.add(grp_jRadioButton_po,grp_TField_Po);     mybuttongroup.add(grp_jRadioButton_refclicon,grp_TField_RefCliCon);     mybuttongroup.add(grp_jRadioButton_refclifact,grp_TField_RefCliFact);   //  mybuttongroup.add(grp_jRadioButton_numfact,grp_TField_NumFacture);    // mybuttongroup.add(grp_jRadioButton_numnc,grp_TField_NumNc);    // mybuttongroup.add(grp_jRadioButton_numfactFourn,grp_TField_NumFactFourn);     mybuttongroup.add(grp_jRadioButton_Aucun1,grp_TField_Aucun);     //  mybuttongroup.setSelected(grp_jRadioButton_numdos,true);            }*/    /*void prepareKeyeventAdapter(){         keyadapter=new java.awt.event.KeyAdapter(){             public void keyPressed(KeyEvent e){                  localKeyPressed(e);                  }                     public void keyReleased(KeyEvent e){                 }                       public void keyTyped(KeyEvent e){                }        };            }    void  localKeyPressed(KeyEvent e){        if(e.getKeyCode()==e.VK_DOWN)            System.out.println("ok en bas");        else if(e.getKeyCode()==e.VK_UP)            System.out.println("ok en bas");        else if(e.getKeyCode()==e.VK_ENTER)            System.out.println("ok enter");     }    void joinListenersToComponent()    {        this.addKeyListener(keyadapter);        jPanel3.addKeyListener(keyadapter);            }*/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// INITIALISATION////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    public void valueChanged(ListSelectionEvent e) {        //ardoise.couleur = getCouleur((String)((JList)evt.getSource()).        //                             getSelectedValue());        //ardoise.repaint();        System.out.println("evt");        System.out.println(grp_Table_dossier.getSelectedRow());        if (grp_Table_dossier.getSelectedRow() != -1) {            try {                Object[] tmp = this.table_model.getClassAffichage(grp_Table_dossier.getSelectedRow());                if (tmp[1].toString().length() > 8) {                    if (tmp[1].toString().charAt(8) == 'F' || tmp[1].toString().charAt(8) == 'N') {                        ncfacts.setVisible(false);                        ncfacts1.setVisible(false);                        ncfacts3.setVisible(false);                    } else if (tmp[1].toString().charAt(8) == 'G') {                        if (tmp[1].toString().charAt(9) == '0') {                            ncfacts.setVisible(true);                            ncfacts1.setVisible(true);                            ncfacts3.setVisible(true);                        } else {                            ncfacts.setVisible(false);                            ncfacts1.setVisible(false);                            ncfacts3.setVisible(false);                        }                    } else {                        ncfacts.setVisible(true);                        ncfacts1.setVisible(true);                        ncfacts3.setVisible(false);                    }                } else {                    ncfacts.setVisible(true);                    ncfacts1.setVisible(true);                    ncfacts3.setVisible(false);                }            } catch (Exception exception) {            }        }    }    private void init() {        // création graphique        initComponents();        // table Model        initTable();        // -> toolBarre        parent.setCurrentPanel(this);        adaptAction();        NavigateInTable navigate = new NavigateInTable(grp_Table_dossier);        grp_TField_NumDossier.addKeyListener(navigate);        grp_TField_Po.addKeyListener(navigate);        grp_TField_RefCliCon.addKeyListener(navigate);        grp_TField_RefCliFact.addKeyListener(navigate);        grp_TField_NumFacture.addKeyListener(navigate);        grp_TField_NumNc.addKeyListener(navigate);        grp_TField_NumFactFourn.addKeyListener(navigate);        grp_Table_dossier.getTableHeader().setReorderingAllowed(false);        grp_Table_dossier.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);        grp_Table_dossier.getSelectionModel().addListSelectionListener(this);//        grp_Table_dossier.getColumnModel().getSelectionModel().addListSelectionListener(this);        //grp_Table_dossier.addFocusListener(l)        displayReadMode();        ncfacts.setVisible(false);        ncfacts1.setVisible(false);        ncfacts3.setVisible(false);    }    public void adaptAction() {        if (grp_Table_dossier.getRowCount() > 0) {            parent.setCurrentActionEnabled(new int[]{ActionToolBar.DO_CREATE,                    ActionToolBar.DO_ACCEPT,                    ActionToolBar.DO_CLOSE,                    ActionToolBar.DO_PREVIOUS,                    ActionToolBar.DO_F10});            grp_Table_dossier.changeSelection(((DossierModules) parent).getSelectedRow(), 0, false, false);        } else {            parent.setCurrentActionEnabled(new int[]{ActionToolBar.DO_CREATE,                    ActionToolBar.DO_CLOSE,                    ActionToolBar.DO_PREVIOUS            });        }    }    private void initTable() {        TableCellRenderer renderer = new srcastra.astra.gui.modules.dossier.CustomTableCellRender();        try {            grp_Table_dossier.setDefaultRenderer(Class.forName                    ("java.lang.String"), renderer);            grp_Table_dossier.repaint();        }        catch (ClassNotFoundException ex) {            System.exit(0);        }        //grp_Table_dossier.setSelectionBackground(java.awt.Color.red);        //grp_Table_dossier.setSelectionBackground(new java.awt.Color(221,221,255));        //grp_Table_dossier.set        table_model = new DossierIndexTableModel(parent.getServeur(), parent.getCurrentUser(), parent);        grp_Table_dossier.setAutoCreateColumnsFromModel(false);        grp_Table_dossier.setModel(table_model);        for (int i = 0; i < table_model.getColumnCount(); i++) {            //DefaultTableCellRenderer renderer = new DefaultTableCellRenderer();            //renderer.setHorizontalAlignment(table_model.m_columnNames[i].getM_alignment());            TableCellEditor editor = new DefaultCellEditor(new JTextField());            grp_Table_dossier.addColumn(new TableColumn(i, table_model.m_columnNames[i].getM_width(), renderer, editor));            JTableHeader header = grp_Table_dossier.getTableHeader();            header.setUpdateTableInRealTime(false);        }    }    /**     * This method is called from within the constructor to     * <p/>     * <p/>     * initialize the form.     * <p/>     * <p/>     * WARNING: Do NOT modify this code. The content of this method is     * <p/>     * <p/>     * always regenerated by the Form Editor.     */    private void initComponents() {//GEN-BEGIN:initComponents        java.awt.GridBagConstraints gridBagConstraints;        buttonGroup2 = new javax.swing.ButtonGroup();        jPanel2 = new javax.swing.JPanel();        jPanel3 = new javax.swing.JPanel();        grp_Pan_inserCombo = new javax.swing.JPanel();        jPanel5 = new javax.swing.JPanel();        jScrollPane1 = new javax.swing.JScrollPane();        grp_Table_dossier = new javax.swing.JTable();        jPanel6 = new javax.swing.JPanel();        jPanel1 = new javax.swing.JPanel();        jPanel7 = new javax.swing.JPanel();        grp_TField_NumDossier = new srcastra.astra.gui.components.textFields.ATextField();        grp_TField_Po = new srcastra.astra.gui.components.textFields.ATextField();        grp_TField_RefCliCon = new srcastra.astra.gui.components.textFields.ATextField();        grp_TField_RefCliFact = new srcastra.astra.gui.components.textFields.ATextField();        grp_TField_NumFacture = new srcastra.astra.gui.components.textFields.ATextField();        grp_TField_NumNc = new srcastra.astra.gui.components.textFields.ATextField();        jLabel1 = new javax.swing.JLabel();        jLabel2 = new javax.swing.JLabel();        jLabel3 = new javax.swing.JLabel();        jLabel4 = new javax.swing.JLabel();        jLabel5 = new javax.swing.JLabel();        jLabel6 = new javax.swing.JLabel();        jLabel7 = new javax.swing.JLabel();        grp_TField_NumFactFourn = new srcastra.astra.gui.components.textFields.ATextField();        ncfacts3 = new javax.swing.JButton();        jPanel4 = new javax.swing.JPanel();        jPanel8 = new javax.swing.JPanel();        grp_Liste_TypeProduit = new srcastra.astra.gui.components.combobox.liste.Liste();        aDate1 = new srcastra.astra.gui.components.date.thedate.ADate();        aDate2 = new srcastra.astra.gui.components.date.thedate.ADate();        jLabel8 = new javax.swing.JLabel();        jLabel9 = new javax.swing.JLabel();        jLabel10 = new javax.swing.JLabel();        jLabel11 = new javax.swing.JLabel();        grp_CheckBox_Facture = new srcastra.astra.gui.components.checkbox.ACheckBox();        ncfacts = new javax.swing.JButton();        ncfacts1 = new javax.swing.JButton();        jLabel12 = new javax.swing.JLabel();        ncfacts2 = new javax.swing.JButton();        setLayout(new java.awt.BorderLayout());        addFocusListener(new java.awt.event.FocusAdapter() {            public void focusGained(java.awt.event.FocusEvent evt) {                formFocusGained(evt);            }        });        jPanel2.setEnabled(false);        add(jPanel2, java.awt.BorderLayout.SOUTH);        jPanel3.setLayout(new java.awt.GridLayout(2, 0));        grp_Pan_inserCombo.setLayout(new java.awt.BorderLayout());        grp_Pan_inserCombo.setEnabled(false);        grp_Pan_inserCombo.addFocusListener(new java.awt.event.FocusAdapter() {            public void focusGained(java.awt.event.FocusEvent evt) {                grp_Pan_inserComboFocusGained(evt);            }        });        grp_Pan_inserCombo.add(jPanel5, java.awt.BorderLayout.NORTH);        grp_Table_dossier.setFont(new java.awt.Font("Tahoma", 0, 10));        grp_Table_dossier.setModel(new DefaultTableModel());        grp_Table_dossier.setToolTipText("");        grp_Table_dossier.setRequestFocusEnabled(false);        grp_Table_dossier.setSelectionForeground(new java.awt.Color(0, 102, 0));        grp_Table_dossier.setVerifyInputWhenFocusTarget(false);        grp_Table_dossier.addFocusListener(new java.awt.event.FocusAdapter() {            public void focusGained(java.awt.event.FocusEvent evt) {                grp_Table_dossierFocusGained(evt);            }        });        jScrollPane1.setViewportView(grp_Table_dossier);        grp_Pan_inserCombo.add(jScrollPane1, java.awt.BorderLayout.CENTER);        jPanel3.add(grp_Pan_inserCombo);        jPanel6.setLayout(new java.awt.GridLayout(1, 0));        jPanel6.setBorder(new javax.swing.border.TitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 102), 5), java.util.ResourceBundle.getBundle("srcastra/astra/locale/ModuleDossier/DossierIndexPane").getString("rech"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12)));        jPanel6.setEnabled(false);        jPanel6.addFocusListener(new java.awt.event.FocusAdapter() {            public void focusGained(java.awt.event.FocusEvent evt) {                jPanel6FocusGained(evt);            }        });        jPanel1.setLayout(null);        jPanel7.setLayout(new java.awt.GridBagLayout());        jPanel7.addFocusListener(new java.awt.event.FocusAdapter() {            public void focusGained(java.awt.event.FocusEvent evt) {                jPanel7FocusGained(evt);            }        });        grp_TField_NumDossier.setGrp_Comp_nextComponent(grp_TField_Po);        grp_TField_NumDossier.setName("grp_TField_NumDossier");        grp_TField_NumDossier.setWarningIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/warning.gif")));        grp_TField_NumDossier.setWorkingIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/working.gif")));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 1;        gridBagConstraints.gridy = 0;        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;        jPanel7.add(grp_TField_NumDossier, gridBagConstraints);        grp_TField_Po.setGrp_Comp_nextComponent(grp_TField_RefCliCon);        grp_TField_Po.setName("grp_TField_Po");        grp_TField_Po.setWarningIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/warning.gif")));        grp_TField_Po.setWorkingIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/working.gif")));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 1;        gridBagConstraints.gridy = 1;        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;        jPanel7.add(grp_TField_Po, gridBagConstraints);        grp_TField_RefCliCon.setGrp_Comp_nextComponent(grp_TField_RefCliFact);        grp_TField_RefCliCon.setName("grp_TField_RefCliCon");        grp_TField_RefCliCon.setWarningIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/warning.gif")));        grp_TField_RefCliCon.setWorkingIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/working.gif")));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 1;        gridBagConstraints.gridy = 2;        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;        jPanel7.add(grp_TField_RefCliCon, gridBagConstraints);        grp_TField_RefCliFact.setGrp_Comp_nextComponent(grp_TField_NumFacture);        grp_TField_RefCliFact.setName("grp_TField_RefCliFact");        grp_TField_RefCliFact.setWarningIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/warning.gif")));        grp_TField_RefCliFact.setWorkingIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/working.gif")));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 1;        gridBagConstraints.gridy = 3;        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;        jPanel7.add(grp_TField_RefCliFact, gridBagConstraints);        grp_TField_NumFacture.setGrp_Comp_nextComponent(grp_TField_NumNc);        grp_TField_NumFacture.setName("grp_TField_NumFacture");        grp_TField_NumFacture.setWarningIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/warning.gif")));        grp_TField_NumFacture.setWorkingIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/working.gif")));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 1;        gridBagConstraints.gridy = 4;        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;        jPanel7.add(grp_TField_NumFacture, gridBagConstraints);        grp_TField_NumNc.setGrp_Comp_nextComponent(grp_TField_NumFactFourn);        grp_TField_NumNc.setName("grp_TField_NumNc");        grp_TField_NumNc.setWarningIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/warning.gif")));        grp_TField_NumNc.setWorkingIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/working.gif")));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 1;        gridBagConstraints.gridy = 5;        jPanel7.add(grp_TField_NumNc, gridBagConstraints);        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 10));        jLabel1.setText(java.util.ResourceBundle.getBundle("srcastra/astra/locale/ModuleDossier/DossierIndexPane", currentUser.getLangage()).getString("grp_TField_nDossier"));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 0;        gridBagConstraints.gridy = 0;        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        jPanel7.add(jLabel1, gridBagConstraints);        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 10));        jLabel2.setText(java.util.ResourceBundle.getBundle("srcastra/astra/locale/ModuleDossier/DossierIndexPane", currentUser.getLangage()).getString("grp_TField_POBillet"));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 0;        gridBagConstraints.gridy = 1;        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        jPanel7.add(jLabel2, gridBagConstraints);        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 10));        jLabel3.setText(java.util.ResourceBundle.getBundle("srcastra/astra/locale/ModuleDossier/DossierIndexPane", currentUser.getLangage()).getString("grp_TField_ReferenceClient"));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 0;        gridBagConstraints.gridy = 2;        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        jPanel7.add(jLabel3, gridBagConstraints);        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 10));        jLabel4.setText(java.util.ResourceBundle.getBundle("srcastra/astra/locale/ModuleDossier/DossierIndexPane", currentUser.getLangage()).getString("grp_TField_Commandeur"));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 0;        gridBagConstraints.gridy = 3;        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        jPanel7.add(jLabel4, gridBagConstraints);        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 10));        jLabel5.setText(java.util.ResourceBundle.getBundle("srcastra/astra/locale/ModuleDossier/DossierIndexPane", currentUser.getLangage()).getString("grp_TField_nfacture"));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 0;        gridBagConstraints.gridy = 4;        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        jPanel7.add(jLabel5, gridBagConstraints);        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 10));        jLabel6.setText(java.util.ResourceBundle.getBundle("srcastra/astra/locale/ModuleDossier/DossierIndexPane", currentUser.getLangage()).getString("grp_TField_nNoteCredit"));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 0;        gridBagConstraints.gridy = 5;        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        jPanel7.add(jLabel6, gridBagConstraints);        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 10));        jLabel7.setText(java.util.ResourceBundle.getBundle("srcastra/astra/locale/ModuleDossier/DossierIndexPane", currentUser.getLangage()).getString("grp_TField_nFactFournisseur"));        jLabel7.setToolTipText(java.util.ResourceBundle.getBundle("srcastra/astra/locale/ModuleDossier/DossierIndexPane", currentUser.getLangage()).getString("grp_TField_nFactFournisseur"));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 0;        gridBagConstraints.gridy = 6;        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        jPanel7.add(jLabel7, gridBagConstraints);        grp_TField_NumFactFourn.setGrp_Comp_nextComponent(aDate1);        grp_TField_NumFactFourn.setName("grp_TField_NumFactFourn");        grp_TField_NumFactFourn.setWarningIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/warning.gif")));        grp_TField_NumFactFourn.setWorkingIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/working.gif")));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 1;        gridBagConstraints.gridy = 6;        jPanel7.add(grp_TField_NumFactFourn, gridBagConstraints);        jPanel1.add(jPanel7);        jPanel7.setBounds(5, 5, 224, 126);        ncfacts3.setForeground(new java.awt.Color(255, 51, 102));        ncfacts3.setText(java.util.ResourceBundle.getBundle("srcastra/astra/locale/ModuleDossier/DossierIndexPane").getString("gservice"));        ncfacts3.addItemListener(new java.awt.event.ItemListener() {            public void itemStateChanged(java.awt.event.ItemEvent evt) {                ncfacts3ItemStateChanged(evt);            }        });        ncfacts3.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                ncfacts3ActionPerformed(evt);            }        });        jPanel1.add(ncfacts3);        ncfacts3.setBounds(20, 160, 140, 23);        jPanel6.add(jPanel1);        jPanel4.setLayout(null);        jPanel8.setLayout(new java.awt.GridBagLayout());        grp_Liste_TypeProduit.setIsLastComponent(true);        grp_Liste_TypeProduit.setPreferredSize(new java.awt.Dimension(100, 18));        grp_Liste_TypeProduit.setUp(true);        grp_Liste_TypeProduit.setWorkingIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/working.gif")));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 1;        gridBagConstraints.gridy = 3;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 0);        jPanel8.add(grp_Liste_TypeProduit, gridBagConstraints);        aDate1.setForm(this);        aDate1.setGrp_Comp_nextComponent(aDate2);        aDate1.setUser(parent.getCurrentUser());        aDate1.setWarningIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/warning.gif")));        aDate1.setWorkingIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/working.gif")));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 1;        gridBagConstraints.gridy = 0;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 0);        jPanel8.add(aDate1, gridBagConstraints);        aDate2.setForm(this);        aDate2.setGrp_Comp_nextComponent(grp_CheckBox_Facture);        aDate2.setUser(parent.getCurrentUser());        aDate2.setWarningIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/warning.gif")));        aDate2.setWorkingIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/working.gif")));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 1;        gridBagConstraints.gridy = 1;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 0);        jPanel8.add(aDate2, gridBagConstraints);        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 10));        jLabel8.setText(java.util.ResourceBundle.getBundle("srcastra/astra/locale/ModuleDossier/DossierIndexPane", currentUser.getLangage()).getString("grp_ADate_dateCreation"));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 0;        gridBagConstraints.gridy = 0;        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);        jPanel8.add(jLabel8, gridBagConstraints);        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 10));        jLabel9.setText(java.util.ResourceBundle.getBundle("srcastra/astra/locale/ModuleDossier/DossierIndexPane", currentUser.getLangage()).getString("grp_ADate_dateDepart"));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 0;        gridBagConstraints.gridy = 1;        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);        jPanel8.add(jLabel9, gridBagConstraints);        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 10));        jLabel10.setText(java.util.ResourceBundle.getBundle("srcastra/astra/locale/ModuleDossier/DossierIndexPane", currentUser.getLangage()).getString("grp_TField_typeProduit"));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 0;        gridBagConstraints.gridy = 3;        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);        jPanel8.add(jLabel10, gridBagConstraints);        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 10));        jLabel11.setText(java.util.ResourceBundle.getBundle("srcastra/astra/locale/ModuleDossier/DossierIndexPane", currentUser.getLangage()).getString("grp_TField_factur\u00E9"));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 0;        gridBagConstraints.gridy = 2;        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(2, 0, 3, 0);        jPanel8.add(jLabel11, gridBagConstraints);        grp_CheckBox_Facture.setGrp_Comp_nextComponent(grp_Liste_TypeProduit);        grp_CheckBox_Facture.setWorkingIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/working.gif")));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 1;        gridBagConstraints.gridy = 2;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 0);        jPanel8.add(grp_CheckBox_Facture, gridBagConstraints);        jPanel4.add(jPanel8);        jPanel8.setBounds(50, 5, 245, 80);        ncfacts.setForeground(new java.awt.Color(255, 51, 102));        ncfacts.setText(java.util.ResourceBundle.getBundle("srcastra/astra/locale/ModuleDossier/DossierIndexPane").getString("factureservice"));        ncfacts.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                ncfactsActionPerformed(evt);            }        });        jPanel4.add(ncfacts);        ncfacts.setBounds(200, 160, 140, 23);        ncfacts1.setForeground(new java.awt.Color(255, 51, 102));        ncfacts1.setText(java.util.ResourceBundle.getBundle("srcastra/astra/locale/ModuleDossier/DossierIndexPane").getString("ncservice"));        ncfacts1.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                ncfacts1ActionPerformed(evt);            }        });        jPanel4.add(ncfacts1);        ncfacts1.setBounds(30, 160, 160, 23);        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 10));        jPanel4.add(jLabel12);        jLabel12.setBounds(120, 130, 0, 0);        ncfacts2.setForeground(new java.awt.Color(255, 51, 102));        ncfacts2.setText("!!!!!!!");        ncfacts2.addItemListener(new java.awt.event.ItemListener() {            public void itemStateChanged(java.awt.event.ItemEvent evt) {                ncfacts2ItemStateChanged(evt);            }        });        ncfacts2.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                ncfacts2ActionPerformed(evt);            }        });        jPanel4.add(ncfacts2);        ncfacts2.setBounds(30, 100, 47, 23);        jPanel6.add(jPanel4);        jPanel3.add(jPanel6);        add(jPanel3, java.awt.BorderLayout.CENTER);    }//GEN-END:initComponents    private void ncfacts3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ncfacts3ActionPerformed        // TODO add your handling code here:        parent.changeCursor(CursorChange.CHANGE_CURSOR_EVERYWHERE, new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));        Dossier_T doss = new Dossier_T();        //doss.setDrnumdos(drnumdos)        String cle = "";        //doss.setNcFactService(true);        if (grp_Table_dossier.getRowCount() > 0) {            int ligne = grp_Table_dossier.getSelectedRow();            ((DossierModules) parent).setSelectedRow(ligne);            Object[] tmp = this.table_model.getClassAffichage(grp_Table_dossier.getSelectedRow());            if (tmp != null) {                try {                    int id = parent.getServeur().renvDossierRmiObject(parent.getCurrentUser().getUrcleunik()).getNumService(parent.getCurrentUser().getUrcleunik(), tmp[1].toString().substring(0, 8) + "G");                    id = id + 10;                    cle = tmp[1].toString().substring(0, 8) + "G" + (id);                    ArrayList tm = parent.getServeurDossier().chargeDossier(parent.getCurrentUser(), Integer.valueOf(tmp[0].toString()).intValue(), false);                    doss = (Dossier_T) tm.get(0);                    //System.out.println(tmpDossier.getCliIntitule());                    //System.out.println("");                } catch (srcastra.astra.sys.rmi.Exception.ServeurSqlFailure se) {                    ErreurScreenLibrary.displayErreur(this, ErreurScreenLibrary.SERVEUR_SQL_FAILURE, srcastra.astra.Astra.DEBUG, se);                } catch (java.rmi.RemoteException re) {                    re.printStackTrace();                    ErreurScreenLibrary.displayErreur(this, ErreurScreenLibrary.REMOTE_EXCEPTION, srcastra.astra.Astra.DEBUG, re);                }// Add your handling code here:            }            doss.setDrnumdos(cle);            doss.setGroupe(true);            parent.setDossier(doss);            parent.getMainframe().setGroupe(true);            //parent.displayCreateSequence();            //  this.openDossier(-1, true, 0);            //parent.getMainframe().setRattrap(true);            //parent.getDossier().            try {                Dossier_T dd = parent.getDossier();                System.out.println(dd.getDrnumdos());                System.out.println(parent.getCurrentUser().getUrcleunik());                dd.setGroupe(true);                dd.setPassager(null);                dd.setDr_facture(0);                //for (int i=0;i<o.size();i++)                //dd.                /*    for(int i=0;i<br.size();i++)                {                    srcastra.astra.sys.classetransfert.dossier.brochure.Brochure_T bb=new srcastra.astra.sys.classetransfert.dossier.brochure.Brochure_T();                }*/                srcastra.astra.sys.classetransfert.clients.Clients_T cl = null;                //dd.setCscleunik(-1);                //dd.setCscleunik_fact(-1);                dd.setPayement(null);                java.util.Hashtable returnvalue = parent.getServeurDossier().insertDossier(parent.getCurrentUser().getUrcleunik(), dd);                this.openDossier(Integer.parseInt(returnvalue.get("id").toString()), true, 3);            } catch (srcastra.astra.sys.rmi.Exception.ServeurSqlFailure se) {                ErreurScreenLibrary.displayErreur(this, ErreurScreenLibrary.SERVEUR_SQL_FAILURE, srcastra.astra.Astra.DEBUG, se);            } catch (java.rmi.RemoteException re) {                re.printStackTrace();                ErreurScreenLibrary.displayErreur(this, ErreurScreenLibrary.REMOTE_EXCEPTION, srcastra.astra.Astra.DEBUG, re);            }// Add your handling code here:            parent.changeCursor(CursorChange.CHANGE_CURSOR_EVERYWHERE, new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));        }    }//GEN-LAST:event_ncfacts3ActionPerformed    private void ncfacts3ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ncfacts3ItemStateChanged        // TODO add your handling code here:    }//GEN-LAST:event_ncfacts3ItemStateChanged    private void ncfacts2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ncfacts2ItemStateChanged        // TODO add your handling code here:    }//GEN-LAST:event_ncfacts2ItemStateChanged    private void ncfacts2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ncfacts2ActionPerformed        boolean suite = false;        int cle = 0;        AstraPrint blla = null;        grp_Table_dossier.changeSelection(0, 0, false, false);        String messageAnomalie = "";        int index = 0;        while (messageAnomalie.length() == 0 && index < grp_Table_dossier.getRowCount()) {            if (grp_Table_dossier.getRowCount() > 0) {                //grp_Table_dossier.set                int ligne = grp_Table_dossier.getSelectedRow();                Object[] tmp = this.table_model.getClassAffichage(grp_Table_dossier.getSelectedRow());                if (tmp != null) {                    cle = ((Long) tmp[0]).intValue();                    System.out.println("key:" + cle);                    String tmp1 = ((String) tmp[1].toString());                    suite = true;                    if (tmp1.length() > 8) {                        if (tmp1.charAt(8) == 'F' || tmp1.charAt(8) == 'N')                            suite = false;                    }                    try {                        messageAnomalie = parent.getServeur().renvDossierRmiObject(parent.getCurrentUser().getUrcleunik()).getAnomalieDossier(parent.getCurrentUser().getUrcleunik(), cle, false);                    } catch (Exception e) {                    }                    if (messageAnomalie.length() == 0) {                        index++;                        grp_Table_dossier.changeSelection(index, 0, false, false);                    }                }            }        }        if (suite) {            if (messageAnomalie.length() != 0) {                blla = new AstraPrint(cle, parent.getSuperOwner(), parent, grp_Table_dossier, true, "");                blla.init(cle);                blla = null;                System.gc();            }        }    }//GEN-LAST:event_ncfacts2ActionPerformed    private void ncfacts1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ncfacts1ActionPerformed        /*   Dossier_T doss=new Dossier_T();   if(grp_Table_dossier.getRowCount()>0){        int ligne=grp_Table_dossier.getSelectedRow();        ((DossierModules)parent).setSelectedRow(ligne);        Object[] tmp=this.table_model.getClassAffichage(grp_Table_dossier.getSelectedRow());        if(tmp!=null)        {        try{        int cle=Integer.valueOf(tmp[0].toString()).intValue();        ArrayList d=parent.getServeur().renvDossierRmiObject(parent.getCurrentUser().getUrcleunik()).chargeDossier(parent.getCurrentUser(), cle, true);        doss=(Dossier_T)d.get(0);        doss.setNumnc(parent.getServeur().renvDossierRmiObject(parent.getCurrentUser().getUrcleunik()).NC(doss.getDrcleunik(),parent.getCurrentUser().getUrcleunik(),doss,parent.getCurrentUser()));         new srcastra.astra.gui.modules.printing.PrintingPreview2(parent.getSuperOwner(),parent.getServeur().renvDossierRmiObject(parent.getCurrentUser().getUrcleunik()),doss,parent.getCurrentUser(),((srcastra.astra.gui.MainFrame)parent.getSuperOwner()).getMediator(),parent.getServeur(),3,true);        } catch (srcastra.astra.sys.rmi.Exception.ServeurSqlFailure se) {        ErreurScreenLibrary.displayErreur(this, ErreurScreenLibrary.SERVEUR_SQL_FAILURE, srcastra.astra.Astra.DEBUG, se);        } catch (java.rmi.RemoteException re) {        re.printStackTrace();        ErreurScreenLibrary.displayErreur(this, ErreurScreenLibrary.REMOTE_EXCEPTION, srcastra.astra.Astra.DEBUG, re);        }// Add your handling code here:        }*/        parent.changeCursor(CursorChange.CHANGE_CURSOR_EVERYWHERE, new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));        Dossier_T doss = new Dossier_T();        //doss.setDrnumdos(drnumdos)        String cle = "";        doss.setNcFactService(true);        if (grp_Table_dossier.getRowCount() > 0) {            int ligne = grp_Table_dossier.getSelectedRow();            ((DossierModules) parent).setSelectedRow(ligne);            Object[] tmp = this.table_model.getClassAffichage(grp_Table_dossier.getSelectedRow());            if (tmp != null) {                try {                    int id = parent.getServeur().renvDossierRmiObject(parent.getCurrentUser().getUrcleunik()).getNumService(parent.getCurrentUser().getUrcleunik(), tmp[1].toString() + "N");                    cle = tmp[1].toString().substring(0, 8) + "N" + (id + 1);                } catch (srcastra.astra.sys.rmi.Exception.ServeurSqlFailure se) {                    ErreurScreenLibrary.displayErreur(this, ErreurScreenLibrary.SERVEUR_SQL_FAILURE, srcastra.astra.Astra.DEBUG, se);                } catch (java.rmi.RemoteException re) {                    re.printStackTrace();                    ErreurScreenLibrary.displayErreur(this, ErreurScreenLibrary.REMOTE_EXCEPTION, srcastra.astra.Astra.DEBUG, re);                }// Add your handling code here:            }            doss.setDrnumdos(cle);            parent.setDossier(doss);            parent.getMainframe().setNCFactService(true);            //parent.getMainframe().setRattrap(true);            //parent.getDossier().            parent.displayCreateSequence();            parent.changeCursor(CursorChange.CHANGE_CURSOR_EVERYWHERE, new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));        }        // ((DossierModules)parent).getDossierInit().setNumnc(parent.getServeur().renvDossierRmiObject(parent.getCurrentUser().getUrcleunik()).NC(parent.getDossier().getDrcleunik(),parent.getCurrentUser().getUrcleunik(),parent.getDossier(),parent.getCurrentUser()));    }//GEN-LAST:event_ncfacts1ActionPerformed    private void ncfactsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ncfactsActionPerformed        parent.changeCursor(CursorChange.CHANGE_CURSOR_EVERYWHERE, new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));        Dossier_T doss = new Dossier_T();        //doss.setDrnumdos(drnumdos)        String cle = "";        doss.setNcFactService(true);        if (grp_Table_dossier.getRowCount() > 0) {            int ligne = grp_Table_dossier.getSelectedRow();            ((DossierModules) parent).setSelectedRow(ligne);            Object[] tmp = this.table_model.getClassAffichage(grp_Table_dossier.getSelectedRow());            if (tmp != null) {                try {                    int id = parent.getServeur().renvDossierRmiObject(parent.getCurrentUser().getUrcleunik()).getNumService(parent.getCurrentUser().getUrcleunik(), tmp[1].toString() + "F");                    cle = tmp[1].toString().substring(0, 8) + "F" + (id + 1);                } catch (srcastra.astra.sys.rmi.Exception.ServeurSqlFailure se) {                    ErreurScreenLibrary.displayErreur(this, ErreurScreenLibrary.SERVEUR_SQL_FAILURE, srcastra.astra.Astra.DEBUG, se);                } catch (java.rmi.RemoteException re) {                    re.printStackTrace();                    ErreurScreenLibrary.displayErreur(this, ErreurScreenLibrary.REMOTE_EXCEPTION, srcastra.astra.Astra.DEBUG, re);                }// Add your handling code here:            }            doss.setDrnumdos(cle);            parent.setDossier(doss);            parent.getMainframe().setNCFactService(true);            //parent.getMainframe().setRattrap(true);            //parent.getDossier().            parent.displayCreateSequence();            parent.changeCursor(CursorChange.CHANGE_CURSOR_EVERYWHERE, new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));        }        // TODO add your handling code here:    }//GEN-LAST:event_ncfactsActionPerformed    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained        // Add your handling code here:    }//GEN-LAST:event_formFocusGained    private void jPanel7FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPanel7FocusGained        //  new javax.swing.JOptionPane().showMessageDialog(null,"jpanel7");        // System.out.println("jpanel7");// Add your handling code here:    /    }//GEN-LAST:event_jPanel7FocusGained    private void jPanel6FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPanel6FocusGained        //new javax.swing.JOptionPane().showMessageDialog(null,"jpanel6");        // System.out.println("jpanel6");// Add your handling code here:    // Add your handling code here:    }//GEN-LAST:event_jPanel6FocusGained    private void grp_Pan_inserComboFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_grp_Pan_inserComboFocusGained        //  new javax.swing.JOptionPane().showMessageDialog(null,"j'ai le focus inser combo");        // Add your handling code here:        //System.out.println("inserCombo index foc");        // Add your handling code here:    }//GEN-LAST:event_grp_Pan_inserComboFocusGained    private void grp_Table_dossierFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_grp_Table_dossierFocusGained        grp_TField_NumDossier.requestFocus();    }//GEN-LAST:event_grp_Table_dossierFocusGained////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// => LISTENERS////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// => METHODE APPARENTE AU BEANS////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// => FONCTIONS APPARENTES AU TRANSFERT DE DONNEE////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    /**     * Permet au parent de lancer le chargement des données au     * <p/>     * <p/>     * sein de liste (Ici : ListSelector)     */    public void chargeData() {    }    /**     * Demande d'une suppression ou d'une annulation physique au serveur     */    public void dbDelete() {    }    /**     * Demande d'une insertion au serveur     */    public void dbInsert() {    }    /**     * Demande de sélection au serveur     */    public void dbSelect() {    }    /**     * Demande de sélection en vue d'une modification au serveur     */    public void dbSelectForUpdate() {    }    /**     * Demande d'une modification au serveur     */    public void dbUpdate() {    }////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// => METHODE APPARENTE A L' AFFICHAGE DES DONNEES////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    /**     * Affichage en Mode disable     */    public void displayDisableMode() {    }    /**     * Affichage en mode Insertion     */    public void displayInsertMode() {    }    /**     * Affichage en mode Lecture     */    public void displayReadMode() {        grp_TField_NumDossier.requestFocus();        if (((DossierModules) parent).getDossierIndexArray() != null) {            //  System.out.println("size of array= "+array.size());            Comparator DossierComparator = new Comparator() {                public int compare(Object o1, Object o2) {                    Object[] obj1 = (Object[]) o1;                    Object[] obj2 = (Object[]) o2;                    //double a= Double.valueOf(obj1[1].toString()).doubleValue();                    //double b= Double.valueOf(obj2[1].toString()).doubleValue();                    return -(obj1[1].toString().compareTo(obj2[1].toString()));                    //Double.compare(b,a);                    //if(obj1[1].toString().equals(obj2[1].toString()))                    //    return(obj1[1].toString().compareTo(obj2[1].toString()));                    //else                    //  return(obj1[1].toString().compareTo(obj2[1].toString()));                }            };            ArrayList l = ((DossierModules) parent).getDossierIndexArray();            // Collections.sort(l,DossierComparator);            table_model.retrieveData(l);            grp_Table_dossier.tableChanged(new javax.swing.event.TableModelEvent(table_model));            grp_Table_dossier.repaint();            if (grp_Table_dossier.getRowCount() > 0) {                System.out.println("SelectedLigne " + ((DossierModules) parent).getSelectedRow());            }            adaptAction();        }    }    /**     * Affichage en mode Modification     */    public void displayUpdateMode() {    }    /**     * Méthode pour l'update de tous les champs     */    public void updateAllFields() {    }    public void updateAllFields(Object donnee) {    }////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// => METHODE APPARENTE AUX APPELS DE LA TOOLBAR////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    /**     * Spécifie le composant qui implémente cette fonction comme     * <p/>     * <p/>     * le composant qui pilote l'actionToolBar     */    public void setThisAsToolBarComponent() {    }    public void openDossier(int cle, boolean lock, int etat) {        Dossier_T tmpDossier = null;        try {            parent.changeCursor(CursorChange.CHANGE_CURSOR_EVERYWHERE, new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));            if (cle != -1) {                ArrayList tm = parent.getServeurDossier().chargeDossier(parent.getCurrentUser(), cle, lock);                tmpDossier = (Dossier_T) tm.get(0);                parent.getMainframe().setSelectedDossier(tmpDossier.getDrcleunik());                parent.setDossier(tmpDossier);                ((DossierModules) parent).cloneDossier();                parent.displayReadSequence(0);            } else {                tmpDossier = parent.getDossier();                parent.getDossier().setNewreccord(true);                ((DossierModules) parent).cloneDossier();                parent.displayReadSequence(0);            }            if (tmpDossier.getMemo() != null) {                if (tmpDossier.getMemo().getSpecialdossier() == 1)                    new MemoFrame(parent.getSuperOwner(), true, tmpDossier.getMemo()).show();            }            parent.calculTotal();            if (etat == 3)                parent.getDossier().setGroupe(true);            if (etat == 1)                parent.getDossier().setModifreccord(true);            parent.changeCursor(CursorChange.CHANGE_CURSOR_EVERYWHERE, new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));        } catch (srcastra.astra.sys.rmi.Exception.ServeurSqlFailure se) {            parent.changeCursor(CursorChange.CHANGE_CURSOR_EVERYWHERE, new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));            int rep = ErreurScreenLibrary.displayErreur(this, ErreurScreenLibrary.SERVEUR_SQL_FAILURE, srcastra.astra.Astra.DEBUG, se, parent.getCurrentUser());            if (rep == 0)                openDossier(cle, false, 0);        } catch (RemoteException re) {            parent.changeCursor(CursorChange.CHANGE_CURSOR_EVERYWHERE, new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));            ErreurScreenLibrary.displayErreur(this, ErreurScreenLibrary.REMOTE_EXCEPTION, srcastra.astra.Astra.DEBUG, re);        }    }    public void doAccept() {        if (grp_Table_dossier.getRowCount() > 0) {            int ligne = grp_Table_dossier.getSelectedRow();            ((DossierModules) parent).setSelectedRow(ligne);            Object[] tmp = this.table_model.getClassAffichage(grp_Table_dossier.getSelectedRow());            if (tmp != null) {                int cle = ((Long) tmp[0]).intValue();                String val = tmp[1].toString();                if (val.length() > 8) {                    if (val.charAt(8) == 'F') {                        doFacture(cle, true);                    } else if (val.charAt(8) == 'N') {                        doFacture(cle, false);                    } else if (val.charAt(8) == 'G') {                        if (val.charAt(9) == '0')                            openDossier(cle, true, 0);                        else                            openDossier(cle, true, 3);                    } else                        openDossier(cle, true, 0);                } else                    openDossier(cle, true, 0);                //if(val.)                /*   try{                parent.changeCursor(CursorChange.CHANGE_CURSOR_EVERYWHERE, new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));                ArrayList tm=parent.getServeurDossier().chargeDossier(parent.getCurrentUser(),cle,true);                Dossier_T tmpDossier=(Dossier_T)tm.get(0);                              parent.setDossier(tmpDossier);                ((DossierModules)parent).cloneDossier();                parent.displayReadSequence(0);                parent.calculTotal();                parent.changeCursor(CursorChange.CHANGE_CURSOR_EVERYWHERE, new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));                                }catch(srcastra.astra.sys.rmi.Exception.ServeurSqlFailure se){                   parent.changeCursor(CursorChange.CHANGE_CURSOR_EVERYWHERE, new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));                     int rep= ErreurScreenLibrary.displayErreur(this, ErreurScreenLibrary.SERVEUR_SQL_FAILURE, srcastra.astra.Astra.DEBUG, se,parent.getCurrentUser());                    if(rep==0){                        parent.changeCursor(CursorChange.CHANGE_CURSOR_EVERYWHERE, new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));                    ArrayList tm=parent.getServeurDossier().chargeDossier(parent.getCurrentUser(),cle,false);                    Dossier_T tmpDossier=(Dossier_T)tm.get(0);                                  parent.setDossier(tmpDossier);                    ((DossierModules)parent).cloneDossier();                    parent.displayReadSequence(0);                    parent.calculTotal();                    parent.changeCursor(CursorChange.CHANGE_CURSOR_EVERYWHERE, new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));                   }                                                 }catch(RemoteException re){                   parent.changeCursor(CursorChange.CHANGE_CURSOR_EVERYWHERE, new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));                     ErreurScreenLibrary.displayErreur(this, ErreurScreenLibrary.REMOTE_EXCEPTION, srcastra.astra.Astra.DEBUG, re,parent.getCurrentUser());                }*/            }        }    }    public void doCancel() {    }    public void doVoucher(int cle) {        try {            ArrayList tm = null;            tm = parent.getServeurDossier().chargeDossier(currentUser, cle, true);            Dossier_T tmpDossier = (Dossier_T) tm.get(0);            new srcastra.astra.gui.modules.printing.PrintingPreview2(parent.getSuperOwner(), parent.getServeur().renvDossierRmiObject(parent.getCurrentUser().getUrcleunik()), tmpDossier, parent.getCurrentUser(), ((srcastra.astra.gui.MainFrame) parent.getSuperOwner()).getMediator(), parent.getServeur(), 4, true);            // new srcastra.astra.gui.modules.printing.PrintingPreview2(parent,serveur.renvDossierRmiObject(user.getUrcleunik()),tmpDossier,user,((srcastra.astra.gui.MainFrame)parent).getMediator(),serveur,1,false);        } catch (srcastra.astra.sys.rmi.Exception.ServeurSqlFailure se) {            ErreurScreenLibrary.displayErreur(this, ErreurScreenLibrary.SERVEUR_SQL_FAILURE, srcastra.astra.Astra.DEBUG, se);        } catch (java.rmi.RemoteException re) {            re.printStackTrace();            ErreurScreenLibrary.displayErreur(this, ErreurScreenLibrary.REMOTE_EXCEPTION, srcastra.astra.Astra.DEBUG, re);        }// Add your handling code here:    }    public void doFacture(int cle, boolean fact) {        try {            ArrayList tm = null;            if (fact)                tm = parent.getServeurDossier().chargeDossier(currentUser, cle, true);            else                tm = parent.getServeurDossier().chargeNCService(currentUser, cle, true);//parent.getCurrentUser(),cle,true);            String numnc = "";            if (!fact) {                for (int i = 0; i < tm.size(); i++) {                    Dossier_T tmp = (Dossier_T) tm.get(i);                    if (tmp.getNumnc() != "0")                        numnc = tmp.getNumnc();                }            }            Dossier_T tmpDossier = (Dossier_T) tm.get(0);            if (!fact)                tmpDossier.setNumnc(numnc);            String numFact = tmpDossier.getNumfact();            int param = 0;            if (fact) param = 1;            else param = 3;            new srcastra.astra.gui.modules.printing.PrintingPreview2(parent.getSuperOwner(), parent.getServeur().renvDossierRmiObject(parent.getCurrentUser().getUrcleunik()), tmpDossier, parent.getCurrentUser(), ((srcastra.astra.gui.MainFrame) parent.getSuperOwner()).getMediator(), parent.getServeur(), param, true);            // new srcastra.astra.gui.modules.printing.PrintingPreview2(parent,serveur.renvDossierRmiObject(user.getUrcleunik()),tmpDossier,user,((srcastra.astra.gui.MainFrame)parent).getMediator(),serveur,1,false);        } catch (srcastra.astra.sys.rmi.Exception.ServeurSqlFailure se) {            ErreurScreenLibrary.displayErreur(this, ErreurScreenLibrary.SERVEUR_SQL_FAILURE, srcastra.astra.Astra.DEBUG, se);        } catch (java.rmi.RemoteException re) {            re.printStackTrace();            ErreurScreenLibrary.displayErreur(this, ErreurScreenLibrary.REMOTE_EXCEPTION, srcastra.astra.Astra.DEBUG, re);        }// Add your handling code here:        //ArrayList tm=parent.renvDossierRmiObject(user.getUrcleunik()).chargeDossier(user,Integer.valueOf(o[0].toString()).intValue(), true);        //ArrayList tm=.getServeurDossier().chargeDossier(parent.getCurrentUser(),cle,lock);        /*   Dossier_T tmpDossier=(Dossier_T)tm.get(0);      String numFact=tmpDossier.getNumfact();      if(tmpDossier.getDr_facture()==0)      {      numFact=serveur.renvDossierRmiObject(user.getUrcleunik()).setDossierFacture(user.getUrcleunik(),tmpDossier.getDrcleunik(),Long.parseLong(tmpDossier.getNumfact()),tmpDossier.getDrtotalprix());      tmpDossier.setDr_date_facturation(CalculDate.getTodayDate());      tmpDossier.setNumfact(numFact);       new srcastra.astra.gui.modules.printing.PrintingPreview2(parent,serveur.renvDossierRmiObject(user.getUrcleunik()),tmpDossier,user,((srcastra.astra.gui.MainFrame)parent).getMediator(),serveur,1,false);       System.out.println("test");       String fileName;*/    }    public void doClose() {        parent.closeModule();    }    public void doCreate() {        parent.changeCursor(CursorChange.CHANGE_CURSOR_EVERYWHERE, new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));        parent.setDossier(new Dossier_T());        parent.getDossier().setNcFactService(false);        parent.getMainframe().setNCFactService(false);        //parent.getDossier().        parent.displayCreateSequence();        parent.changeCursor(CursorChange.CHANGE_CURSOR_EVERYWHERE, new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));    }    public void doDelete() {    }    public void doHelp() {    }    public void doModify() {    }//ajout de Driart le 11/09/2003    public void doNext() {    }//end ajout    public void doPrevious() {        aDate1.getCorreInput();        aDate2.getCorreInput();        ArrayList checkOrder = new ArrayList();        if (!grp_TField_NumDossier.getText().equals(""))            checkOrder.add(new Integer(1));        if (!grp_TField_RefCliCon.getText().equals(""))            checkOrder.add(new Integer(2));        if (aDate2.getDate() != null) {            if (!aDate2.getDate().isOpen() && !aDate2.getDate().isUnknow())                checkOrder.add(new Integer(3));        }        if (!grp_TField_Po.getText().equals(""))            checkOrder.add(new Integer(4));        if (!grp_TField_RefCliFact.getText().equals(""))            checkOrder.add(new Integer(5));        if (aDate1.getDate() != null) {            if (!aDate1.getDate().isOpen() && !aDate1.getDate().isUnknow())                checkOrder.add(new Integer(6));        }        if (!grp_Liste_TypeProduit.getText().equals(""))            checkOrder.add(new Integer(7));        if (!grp_TField_NumFacture.getText().equals("")) {            checkOrder.add(new Integer(8));        }        if (!grp_TField_NumNc.getText().equals("")) {            checkOrder.add(new Integer(9));        }        if (!grp_TField_NumFactFourn.getText().equals("")) {            checkOrder.add(new Integer(10));        }        if (grp_CheckBox_Facture.isSelected()) {            checkOrder.add(new Integer(11));        }        /*    int cleRecherche=CHARGE_DOSSIER_BY_REF;         //  System.out.println(mybuttongroup.isSelected(grp_jRadioButton_numdos));           //System.out.println(mybuttongroup.isSelected(grp_jRadioButton_refclifact));       String champ="";       boolean sw=false;           if(mybuttongroup.isSelected(grp_jRadioButton_numdos) && mybuttongroup2.isSelected(grp_jRadioButton_Aucun2)){               System.out.println("numdosselected");               cleRecherche=CHARGE_DOSSIER_BY_REF;               champ=grp_TField_NumDossier.getText();           }           else if(mybuttongroup.isSelected(grp_jRadioButton_refclicon)&& mybuttongroup2.isSelected(grp_jRadioButton_Aucun2)){               System.out.println("numcliselected");               cleRecherche=CHARGE_DOSSIER_BY_CLICONTRACT_REF;               champ=grp_TField_RefCliCon.getText();              }        else if(mybuttongroup.isSelected(grp_jRadioButton_refclifact) && mybuttongroup2.isSelected(grp_jRadioButton_Aucun2)){               System.out.println("numcliselected");               cleRecherche=CHARGE_DOSSIER_BY_CLIFACT_REF;               champ=grp_TField_RefCliFact.getText();              }        else if(mybuttongroup.isSelected(grp_jRadioButton_po) && mybuttongroup2.isSelected(grp_jRadioButton_Aucun2)){               System.out.println("numcliselected");               cleRecherche=CHARGE_DOSSIER_BY_PO;               champ=grp_TField_Po.getText();              }        else if(mybuttongroup.isSelected(grp_jRadioButton_Aucun1) && mybuttongroup2.isSelected(grp_jRadionbutton_Datecreation)){               System.out.println("DateCreationSelected");               cleRecherche=CHARGE_DOSSIER_BY_DATECREA;               champ=aDate1.getDate().toString();              }        else if(mybuttongroup.isSelected(grp_jRadioButton_Aucun1) && mybuttongroup2.isSelected(grp_jRadionbutton_DateDepart)){               System.out.println("DateCreationSelected");               cleRecherche=CHARGE_DOSSIER_BY_DATEDEPART;               champ=aDate2.getDate().toString();              }        else if(mybuttongroup.isSelected(grp_jRadioButton_Aucun1) && mybuttongroup2.isSelected(grp_jRadionbutton_Type_produit)){               System.out.println("DateCreationSelected");               cleRecherche=CHARGE_DOSSIER_BY_TYPEPRODUIT;               champ=new Integer(grp_Liste_TypeProduit.getCleUnik()).toString();              }        else{          new JOptionPane().showMessageDialog(this,"Les recherche combinées ne sont pas encore implémentée");          sw=true;        }*/        //  if(!sw){        parent.changeCursor(srcastra.astra.gui.sys.utils.CursorChange.CHANGE_CURSOR_EVERYWHERE, new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));        try {            ((DossierModules) parent).setDossierIndexArray(parent.getServeurDossier().chargeDossierRecherche(parent.getCurrentUser(), 0, grp_TField_NumDossier.getText(), grp_TField_Po.getText(), grp_TField_RefCliCon.getText(), grp_TField_RefCliFact.getText(), grp_Liste_TypeProduit.getText(), aDate1.getDate(), aDate2.getDate(), 0, grp_TField_NumFacture.getText(), grp_TField_NumNc.getText(), grp_TField_NumFactFourn.getText(), grp_CheckBox_Facture.isSelected() ? 1 : 0, checkOrder));            if (((DossierModules) parent).getDossierIndexArray() != null) {                //  System.out.println("size of array= "+array.size());                ArrayList l = ((DossierModules) parent).getDossierIndexArray();                table_model.retrieveData(l);                grp_Table_dossier.tableChanged(new javax.swing.event.TableModelEvent(table_model));                grp_Table_dossier.repaint();                if (grp_Table_dossier.getRowCount() > 0)                    grp_Table_dossier.changeSelection(0, 0, false, false);                adaptAction();            }            grp_Table_dossier.changeSelection(0, 0, false, false);            parent.changeCursor(srcastra.astra.gui.sys.utils.CursorChange.CHANGE_CURSOR_EVERYWHERE, new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));            //  grp_TField_NumDossier.requestFocus();        } catch (java.rmi.RemoteException re) {            re.printStackTrace();            parent.changeCursor(srcastra.astra.gui.sys.utils.CursorChange.CHANGE_CURSOR_EVERYWHERE, new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));            // grp_TField_NumDossier.requestFocus();        }        //  }    }    public void doPrint() {    }    public int[] getDefaultActionToolBarMask() {        return new int[0];    }////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// => Champs de la classe////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    private DossierMainScreenModule parent;    private int action;    private DossierIndexTableModel table_model;////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// STATIC VARIABLES////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// => Graphic Component////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    private Hashtable nomComponent;    private MyButtonGroup mybuttongroup;    private MyButtonGroup mybuttongroup2;    private srcastra.astra.gui.components.combobox.liste.TypeProduitListeTableModel typeProdmodel;    private java.awt.event.KeyAdapter keyadapter;    // Variables declaration - do not modify//GEN-BEGIN:variables    private srcastra.astra.gui.components.date.thedate.ADate aDate1;    private srcastra.astra.gui.components.date.thedate.ADate aDate2;    private javax.swing.ButtonGroup buttonGroup2;    private srcastra.astra.gui.components.checkbox.ACheckBox grp_CheckBox_Facture;    private srcastra.astra.gui.components.combobox.liste.Liste grp_Liste_TypeProduit;    private javax.swing.JPanel grp_Pan_inserCombo;    private srcastra.astra.gui.components.textFields.ATextField grp_TField_NumDossier;    private srcastra.astra.gui.components.textFields.ATextField grp_TField_NumFactFourn;    private srcastra.astra.gui.components.textFields.ATextField grp_TField_NumFacture;    private srcastra.astra.gui.components.textFields.ATextField grp_TField_NumNc;    private srcastra.astra.gui.components.textFields.ATextField grp_TField_Po;    private srcastra.astra.gui.components.textFields.ATextField grp_TField_RefCliCon;    private srcastra.astra.gui.components.textFields.ATextField grp_TField_RefCliFact;    private javax.swing.JTable grp_Table_dossier;    private javax.swing.JLabel jLabel1;    private javax.swing.JLabel jLabel10;    private javax.swing.JLabel jLabel11;    private javax.swing.JLabel jLabel12;    private javax.swing.JLabel jLabel2;    private javax.swing.JLabel jLabel3;    private javax.swing.JLabel jLabel4;    private javax.swing.JLabel jLabel5;    private javax.swing.JLabel jLabel6;    private javax.swing.JLabel jLabel7;    private javax.swing.JLabel jLabel8;    private javax.swing.JLabel jLabel9;    private javax.swing.JPanel jPanel1;    private javax.swing.JPanel jPanel2;    private javax.swing.JPanel jPanel3;    private javax.swing.JPanel jPanel4;    private javax.swing.JPanel jPanel5;    private javax.swing.JPanel jPanel6;    private javax.swing.JPanel jPanel7;    private javax.swing.JPanel jPanel8;    private javax.swing.JScrollPane jScrollPane1;    private javax.swing.JButton ncfacts;    private javax.swing.JButton ncfacts1;    private javax.swing.JButton ncfacts2;    private javax.swing.JButton ncfacts3;    // End of variables declaration//GEN-END:variables////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// BEANS PROPERTIES GET/SET SUPPORT////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    /**     * Permet à la classe qui implémente cette méthode de se     * <p/>     * <p/>     * référencer auprès d' ActionToolBar     *     * @return le n° de l'action     */    public int getAction() {        return this.action;    }    /**     * Sert à recevoir le titre de son parent     * <p/>     * <p/>     * pour un cadre éventuel     *     * @return le titre du panneau     */    public String getTitle() {        return "# Dossier Index #";    }    /**     * Permet de préciser le type d'action qu'on est occupé de faire :     * <p/>     * <p/>     * 0 pour lecture     * <p/>     * <p/>     * 1 pour création     * <p/>     * <p/>     * 2 pour modification     *     * @param action type d'action     */    public void setAction(int action) {        this.action = action;    }    /**     * Permet de recevoir la clé unique d'un objet relatif     * <p/>     * <p/>     * au modules : création par partie ou modification     *     * @param frCleUnik la clé unique     */    public void setFrCleunik(int frCleUnik) {    }    public void doSwitch() {        //String nom=((JTextField)evt.getSource()).getName();        //  mybuttongroup.setNextElementSelected(null,true);    }    public Dossier_T getDossier() {        return null;    }    public DossierRmiInterface getServeurDossier() {        return null;    }    public void setDossier(Dossier_T dossier) {    }    public srcastra.astra.sys.classetransfert.Loginusers_T getCurrentUser() {        return null;    }    public void my_KeyPressed(KeyEvent evt) {        if (evt.getKeyCode() == evt.VK_F12) {            //  String nom=((JTextField)evt.getSource()).getName();            // mybuttongroup.setNextElementSelected(((JToggleButton)this.nomComponent.get(nom)).getModel(),true);        } else if (evt.getKeyCode() == evt.VK_ENTER) {            doPrevious();        }    }    public void goUp() {    }    public java.awt.Component m_getGeneriqueTable() {        return grp_Table_dossier;    }    public void doF10() {        AstraPrint blla = null;        if (grp_Table_dossier.getRowCount() > 0) {            int ligne = grp_Table_dossier.getSelectedRow();            Object[] tmp = this.table_model.getClassAffichage(grp_Table_dossier.getSelectedRow());            if (tmp != null) {                int cle = ((Long) tmp[0]).intValue();                System.out.println("key:" + cle);                String tmp1 = ((String) tmp[1].toString());                boolean suite = true;                if (tmp1.length() > 8) {                    if (tmp1.charAt(8) == 'F' || tmp1.charAt(8) == 'N')                        suite = false;                }                if (suite) {                    blla = new AstraPrint(cle, parent.getSuperOwner(), parent, grp_Table_dossier, false, tmp1);                    blla.init(cle);                }            }        }    }    public void addKeystroque() {    }    public void doF7() {    }    KeyListener key = new KeyListener() {        public void keyPressed(KeyEvent evt) {            my_KeyPressed(evt);        }        public void keyTyped(KeyEvent evt) {        }        public void keyReleased(KeyEvent evt) {        }    };    /*public class Chargement extends Thread {        public void run() {            table_model.chargeData();            grp_Table_dossier.tableChanged(new javax.swing.event.TableModelEvent(table_model));            grp_Table_dossier.repaint();            grp_Table_dossier.updateUI();                        if(grp_Table_dossier.getRowCount()!=0) grp_Table_dossier.changeSelection(0,0,false,false);       }    }*/}