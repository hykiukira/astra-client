/* * Segments.java * * Created on 29 août 2002, 17:28 */package srcastra.astra.gui.modules.dossier.productSpecification.gestionnairepaneaux;// Interfacesimport srcastra.astra.gui.modules.mainScreenModule.DossierMainScreenModule;import srcastra.astra.gui.components.actions.actionToolBar.ToolBarComposer;import srcastra.astra.gui.modules.InternScreenModule;// eventimport java.awt.event.ActionEvent;import java.awt.event.ActionListener;// Table & List modelimport srcastra.astra.gui.sys.listModel.dossierListModel.TypeClasseListModel;import srcastra.astra.gui.sys.tableModel.listSelectorTableModel.*;// divers srcastra importimport srcastra.astra.sys.classetransfert.dossier.avion.Avion_segment_T;import srcastra.astra.gui.components.AstraComponent;import srcastra.astra.gui.components.actions.ToolBarInteraction;import srcastra.astra.gui.sys.formVerification.*;import srcastra.astra.sys.classetransfert.dossier.Dossier_T;import srcastra.astra.gui.components.actions.actionToolBar.ActionToolBar;import srcastra.astra.sys.classetransfert.dossier.avion.*;import javax.swing.text.*;import java.text.*;import javax.swing.table.DefaultTableModel;import javax.swing.*;import java.awt.event.*;/** * @author Sébastien */public class SegmentsEdition extends javax.swing.JPanel implements InternScreenModule, ToolBarComposer, InterfacePanel {////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// CONSTRUCTOR////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    /**     * Creates new form Segments     */    JPanel m_test;    KeyAdapter adapter = new java.awt.event.KeyAdapter() {        public void keyReleased(java.awt.event.KeyEvent evt) {            jFormattedTextField1KeyReleased(evt);        }    };    private void jFormattedTextField1KeyReleased(java.awt.event.KeyEvent evt) {        if (evt.getSource().equals(grp_TField_HeureDepart.getGrp_JText_encode())) {            if (grp_TField_HeureDepart.getCaretPosition() == 5)                grp_TField_HeureDepart.getGrp_Comp_nextComponent().requestFocus();        } else if (evt.getSource().equals(grp_TField_HeureArrivee.getGrp_JText_encode())) {            if (grp_TField_HeureArrivee.getCaretPosition() == 5)                grp_TField_HeureArrivee.getGrp_Comp_nextComponent().requestFocus();        }    }    public JRootPane rootpane;    public SegmentsEdition(AbstractSousPanel parent2) {        rootpane = new JRootPane();        rootpane.add(this);        m_parent = parent2;        this.parent = m_parent.getMainScreenModule();        init();        setSize(708, 140);        this.setBounds(0, 218, 708, 140);        // setBounds(0, 290, 700, 140);        DefaultFormatter fmt = null;        try {            fmt = new MaskFormatter("##:##");        } catch (ParseException pn) {            pn.printStackTrace();        }        setFormat(fmt);        if (m_parent.m_config.test == false)            initListe();    }    private void setFormat(DefaultFormatter format) {        DefaultFormatter fmt = format;        grp_TField_HeureDepart.setValue("00:00");        grp_TField_HeureArrivee.setValue("00:00");        grp_TField_HeureDepart.getGrp_JText_encode().addKeyListener(adapter);        grp_TField_HeureArrivee.getGrp_JText_encode().addKeyListener(adapter);        fmt.setValueClass(grp_TField_HeureDepart.getValue().getClass());        DefaultFormatterFactory fmtFactory = new DefaultFormatterFactory(fmt, fmt, fmt);        grp_TField_HeureDepart.setFormatterFactory(fmtFactory);        grp_TField_HeureArrivee.setFormatterFactory(fmtFactory);    }    private void initListe() {        grp_LSelect_Compagnie.setServeur(parent.getServeur());        grp_LSelect_Compagnie.setLogin(parent.getCurrentUser());        grp_LSelect_Compagnie.setModel(new srcastra.astra.gui.components.combobox.liste.CompagnieListeTableModel(parent.getServeur(), parent.getCurrentUser()));        grp_LSelect_Compagnie.init2();        grp_LSelect_routingDepart.setServeur(parent.getServeur());        grp_LSelect_routingDepart.setLogin(parent.getCurrentUser());        grp_LSelect_routingDepart.setModel(new srcastra.astra.gui.components.combobox.liste.DestinationtListeTableModel(parent.getServeur(), parent.getCurrentUser()));        grp_LSelect_routingDepart.init2();        grp_LSelect_routingDepart.setFreeModeAllow(true);        grp_LSelect_RoutingArrivee.setServeur(parent.getServeur());        grp_LSelect_RoutingArrivee.setLogin(parent.getCurrentUser());        grp_LSelect_RoutingArrivee.setModel(new srcastra.astra.gui.components.combobox.liste.DestinationtListeTableModel(parent.getServeur(), parent.getCurrentUser()));        grp_LSelect_RoutingArrivee.init2();        grp_LSelect_RoutingArrivee.setFreeModeAllow(true);    }////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// INITIALISATION////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    private void init() {        initComponents();        composantToVerif = new AstraComponent[]{grp_LSelect_routingDepart, grp_LSelect_RoutingArrivee,                grp_LSelect_Compagnie,                grp_TField_NumeroVol, grp_ADate_DateDepart,                grp_TField_HeureDepart, grp_TField_HeureArrivee, grp_TField_FareBasis,//,                grp_ACB_Classe, grp_Cbox_Void, grp_Cbox_NonEditable        };        this.tb_interaction = new ToolBarInteraction(parent, this, composantToVerif);        tb_interaction.setValidateActionEnvironnement(ToolBarInteraction.ACT_ENV_WITH_SWITCH);        //-> Régistration des listeners pour la validité des composants        for (int i = 0; i < 3; i++) {            composantToVerif[i].addActionListener(tb_interaction.getValidateActionListener());        }        setDocument();        grp_Cbox_Void.addActionListener(m_parent.m_config.getValidate());    }    private void setDocument() {        /* !!!! J'ai mis des valeurs à la rien à voir -> il faut corriger */        grp_TField_NumeroVol.setDocument(new DefaultMask(0, 6, parent.getCurrentUser().getLangage(), DefaultMask.ALL_LETTRE_IN_UPPERCASE));        //grp_TField_HeureDepart.setDocument(new DefaultMask(0, 50, parent.getCurrentUser().getLangage(), DefaultMask.FIRST_LETTRE_IN_UPPERCASE));        // grp_TField_HeureArrivee.setDocument(new DefaultMask(0, 50, parent.getCurrentUser().getLangage(), DefaultMask.FIRST_LETTRE_IN_UPPERCASE));        grp_TField_FareBasis.setDocument(new DefaultMask(0, 50, parent.getCurrentUser().getLangage(), DefaultMask.FIRST_LETTRE_IN_UPPERCASE));        grp_ACB_Classe.setDocument(new DefaultMask(0, 50, parent.getCurrentUser().getLangage(), DefaultMask.FIRST_LETTRE_IN_UPPERCASE));    }    /**     * This method is called from within the constructor to     * <p/>     * <p/>     * initialize the form.     * <p/>     * <p/>     * WARNING: Do NOT modify this code. The content of this method is     * <p/>     * <p/>     * always regenerated by the Form Editor.     */    private void initComponents() {//GEN-BEGIN:initComponents        java.awt.GridBagConstraints gridBagConstraints;        jPanel5 = new javax.swing.JPanel();        jPanel2 = new javax.swing.JPanel();        jPanel1 = new javax.swing.JPanel();        jPanel3 = new javax.swing.JPanel();        jLabel1 = new javax.swing.JLabel();        jLabel2 = new javax.swing.JLabel();        jLabel3 = new javax.swing.JLabel();        jLabel4 = new javax.swing.JLabel();        grp_TField_position = new javax.swing.JLabel();        grp_LSelect_routingDepart = new srcastra.astra.gui.components.combobox.liste.Liste();        grp_LSelect_RoutingArrivee = new srcastra.astra.gui.components.combobox.liste.Liste();        grp_LSelect_Compagnie = new srcastra.astra.gui.components.combobox.liste.Liste();        jPanel4 = new javax.swing.JPanel();        jLabel5 = new javax.swing.JLabel();        grp_TField_NumeroVol = new srcastra.astra.gui.components.textFields.ATextField();        jLabel7 = new javax.swing.JLabel();        jLabel6 = new javax.swing.JLabel();        jLabel8 = new javax.swing.JLabel();        grp_TField_HeureDepart = new srcastra.astra.gui.components.textFields.FormatedTextField.FormatedTextField();        grp_TField_HeureArrivee = new srcastra.astra.gui.components.textFields.FormatedTextField.FormatedTextField();        grp_ADate_DateDepart = new srcastra.astra.gui.components.date.thedate.ADate();        jPanel7 = new javax.swing.JPanel();        grp_TField_FareBasis = new srcastra.astra.gui.components.textFields.ATextField();        jLabel9 = new javax.swing.JLabel();        jLabel10 = new javax.swing.JLabel();        jLabel12 = new javax.swing.JLabel();        grp_Cbox_NonEditable = new srcastra.astra.gui.components.checkbox.ACheckBox();        grp_Cbox_Void = new srcastra.astra.gui.components.checkbox.ACheckBox();        jLabel14 = new javax.swing.JLabel();        grp_ACB_Classe = new srcastra.astra.gui.components.textFields.ATextField();        jPanel6 = new javax.swing.JPanel();        jLabel13 = new javax.swing.JLabel();        setLayout(new java.awt.BorderLayout());        jPanel5.setLayout(new java.awt.GridLayout(1, 0));        jPanel2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));        jPanel1.setLayout(new java.awt.GridBagLayout());        jPanel3.setLayout(new java.awt.GridBagLayout());        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 10));        jLabel1.setText(java.util.ResourceBundle.getBundle("srcastra/astra/locale/ModuleDossier/productSpecification/SegmentsPanel", parent.getCurrentUser().getLangage()).getString("grp_TField_position"));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 0;        gridBagConstraints.gridy = 0;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 3);        jPanel3.add(jLabel1, gridBagConstraints);        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 10));        jLabel2.setText(java.util.ResourceBundle.getBundle("srcastra/astra/locale/ModuleDossier/productSpecification/SegmentsPanel", parent.getCurrentUser().getLangage()).getString("grp_TField_routingDepart"));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 0;        gridBagConstraints.gridy = 1;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 3);        jPanel3.add(jLabel2, gridBagConstraints);        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 10));        jLabel3.setText(java.util.ResourceBundle.getBundle("srcastra/astra/locale/ModuleDossier/productSpecification/SegmentsPanel", parent.getCurrentUser().getLangage()).getString("grp_TField_RoutingArrivee"));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 0;        gridBagConstraints.gridy = 2;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 3);        jPanel3.add(jLabel3, gridBagConstraints);        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 10));        jLabel4.setText(java.util.ResourceBundle.getBundle("srcastra/astra/locale/ModuleDossier/productSpecification/SegmentsPanel", parent.getCurrentUser().getLangage()).getString("grp_LSelect_Compagnie"));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 0;        gridBagConstraints.gridy = 3;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 3);        jPanel3.add(jLabel4, gridBagConstraints);        grp_TField_position.setFont(new java.awt.Font("Tahoma", 0, 10));        grp_TField_position.setPreferredSize(new java.awt.Dimension(100, 18));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 1;        gridBagConstraints.gridy = 0;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 0);        jPanel3.add(grp_TField_position, gridBagConstraints);        grp_LSelect_routingDepart.setEnabled(false);        grp_LSelect_routingDepart.setGrp_Comp_nextComponent(grp_LSelect_RoutingArrivee);        grp_LSelect_routingDepart.setName("l1");        grp_LSelect_routingDepart.setUp(true);        grp_LSelect_routingDepart.setWarningIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/warning.gif")));        grp_LSelect_routingDepart.setWorkingIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/working.gif")));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 1;        gridBagConstraints.gridy = 1;        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 0);        jPanel3.add(grp_LSelect_routingDepart, gridBagConstraints);        grp_LSelect_RoutingArrivee.setEnabled(false);        grp_LSelect_RoutingArrivee.setGrp_Comp_nextComponent(grp_LSelect_Compagnie);        grp_LSelect_RoutingArrivee.setName("l2");        grp_LSelect_RoutingArrivee.setUp(true);        grp_LSelect_RoutingArrivee.setWarningIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/warning.gif")));        grp_LSelect_RoutingArrivee.setWorkingIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/working.gif")));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 1;        gridBagConstraints.gridy = 2;        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 0);        jPanel3.add(grp_LSelect_RoutingArrivee, gridBagConstraints);        grp_LSelect_Compagnie.setEnabled(false);        grp_LSelect_Compagnie.setGrp_Comp_nextComponent(grp_TField_NumeroVol);        grp_LSelect_Compagnie.setName("l3");        grp_LSelect_Compagnie.setUp(true);        grp_LSelect_Compagnie.setWarningIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/warning.gif")));        grp_LSelect_Compagnie.setWorkingIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/working.gif")));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 1;        gridBagConstraints.gridy = 3;        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 0);        jPanel3.add(grp_LSelect_Compagnie, gridBagConstraints);        jPanel1.add(jPanel3, new java.awt.GridBagConstraints());        jPanel4.setLayout(new java.awt.GridBagLayout());        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 10));        jLabel5.setText(java.util.ResourceBundle.getBundle("srcastra/astra/locale/ModuleDossier/productSpecification/SegmentsPanel", parent.getCurrentUser().getLangage()).getString("grp_TField_NumeroVol"));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 2;        gridBagConstraints.gridy = 0;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 3);        jPanel4.add(jLabel5, gridBagConstraints);        grp_TField_NumeroVol.setEnabled(false);        grp_TField_NumeroVol.setGrp_Comp_nextComponent(grp_ADate_DateDepart);        grp_TField_NumeroVol.setWarningIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/warning.gif")));        grp_TField_NumeroVol.setWorkingIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/working.gif")));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 3;        gridBagConstraints.gridy = 0;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 0);        jPanel4.add(grp_TField_NumeroVol, gridBagConstraints);        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 10));        jLabel7.setText(java.util.ResourceBundle.getBundle("srcastra/astra/locale/ModuleDossier/productSpecification/SegmentsPanel", parent.getCurrentUser().getLangage()).getString("grp_ADate_DateDepart"));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 2;        gridBagConstraints.gridy = 1;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 3);        jPanel4.add(jLabel7, gridBagConstraints);        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 10));        jLabel6.setText(java.util.ResourceBundle.getBundle("srcastra/astra/locale/ModuleDossier/productSpecification/SegmentsPanel", parent.getCurrentUser().getLangage()).getString("grp_TField_HeureDepart"));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 2;        gridBagConstraints.gridy = 2;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 3);        jPanel4.add(jLabel6, gridBagConstraints);        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 10));        jLabel8.setText(java.util.ResourceBundle.getBundle("srcastra/astra/locale/ModuleDossier/productSpecification/SegmentsPanel", parent.getCurrentUser().getLangage()).getString("grp_TField_HeureArrivee"));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 2;        gridBagConstraints.gridy = 3;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 3);        jPanel4.add(jLabel8, gridBagConstraints);        grp_TField_HeureDepart.setEnabled(false);        grp_TField_HeureDepart.setGrp_Comp_nextComponent(grp_TField_HeureArrivee);        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 3;        gridBagConstraints.gridy = 2;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 0);        jPanel4.add(grp_TField_HeureDepart, gridBagConstraints);        grp_TField_HeureArrivee.setEnabled(false);        grp_TField_HeureArrivee.setGrp_Comp_nextComponent(grp_TField_FareBasis);        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 3;        gridBagConstraints.gridy = 3;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 0);        jPanel4.add(grp_TField_HeureArrivee, gridBagConstraints);        grp_ADate_DateDepart.setCheckUptodate(true);        grp_ADate_DateDepart.setEnabled(false);        grp_ADate_DateDepart.setForm(this);        grp_ADate_DateDepart.setGrp_Comp_nextComponent(grp_TField_HeureDepart);        grp_ADate_DateDepart.setUser(parent.getCurrentUser());        grp_ADate_DateDepart.setWarningIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/warning.gif")));        grp_ADate_DateDepart.setWorkingIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/working.gif")));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 3;        gridBagConstraints.gridy = 1;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 0);        jPanel4.add(grp_ADate_DateDepart, gridBagConstraints);        jPanel1.add(jPanel4, new java.awt.GridBagConstraints());        jPanel7.setLayout(new java.awt.GridBagLayout());        grp_TField_FareBasis.setEnabled(false);        grp_TField_FareBasis.setGrp_Comp_nextComponent(grp_ACB_Classe);        grp_TField_FareBasis.setWarningIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/warning.gif")));        grp_TField_FareBasis.setWorkingIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/working.gif")));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 1;        gridBagConstraints.gridy = 0;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 0);        jPanel7.add(grp_TField_FareBasis, gridBagConstraints);        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 10));        jLabel9.setText(java.util.ResourceBundle.getBundle("srcastra/astra/locale/ModuleDossier/productSpecification/SegmentsPanel", parent.getCurrentUser().getLangage()).getString("grp_TField_FareBasis"));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 0;        gridBagConstraints.gridy = 0;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 3);        jPanel7.add(jLabel9, gridBagConstraints);        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 10));        jLabel10.setText(java.util.ResourceBundle.getBundle("srcastra/astra/locale/ModuleDossier/productSpecification/SegmentsPanel", parent.getCurrentUser().getLangage()).getString("grp_ACB_Classe"));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 0;        gridBagConstraints.gridy = 1;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 3);        jPanel7.add(jLabel10, gridBagConstraints);        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 10));        jLabel12.setText(java.util.ResourceBundle.getBundle("srcastra/astra/locale/ModuleDossier/productSpecification/SegmentsPanel", parent.getCurrentUser().getLangage()).getString("grp_Cbox_Void"));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 0;        gridBagConstraints.gridy = 3;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 3);        jPanel7.add(jLabel12, gridBagConstraints);        grp_Cbox_NonEditable.setEnabled(false);        grp_Cbox_NonEditable.setGrp_Comp_nextComponent(grp_Cbox_Void);        grp_Cbox_NonEditable.setWorkingIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/working.gif")));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 1;        gridBagConstraints.gridy = 2;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 0);        jPanel7.add(grp_Cbox_NonEditable, gridBagConstraints);        grp_Cbox_Void.setEnabled(false);        grp_Cbox_Void.setGrp_Comp_nextComponent(null);        grp_Cbox_Void.setLastFocusedComponent(true);        grp_Cbox_Void.setWorkingIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/working.gif")));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 1;        gridBagConstraints.gridy = 3;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 0);        jPanel7.add(grp_Cbox_Void, gridBagConstraints);        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 10));        jLabel14.setText(java.util.ResourceBundle.getBundle("srcastra/astra/locale/ModuleDossier/productSpecification/SegmentsPanel", parent.getCurrentUser().getLangage()).getString("grp_Cbox_NonEditable"));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 0;        gridBagConstraints.gridy = 2;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 3);        jPanel7.add(jLabel14, gridBagConstraints);        grp_ACB_Classe.setEnabled(false);        grp_ACB_Classe.setGrp_Comp_nextComponent(grp_Cbox_NonEditable);        grp_ACB_Classe.setWarningIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/warning.gif")));        grp_ACB_Classe.setWorkingIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/working.gif")));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 1;        gridBagConstraints.gridy = 1;        jPanel7.add(grp_ACB_Classe, gridBagConstraints);        jPanel1.add(jPanel7, new java.awt.GridBagConstraints());        jPanel2.add(jPanel1);        jPanel5.add(jPanel2);        add(jPanel5, java.awt.BorderLayout.CENTER);        jPanel6.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 1));        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 10));        jLabel13.setText("Segments");        jPanel6.add(jLabel13);        add(jPanel6, java.awt.BorderLayout.NORTH);    }//GEN-END:initComponents////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// => LISTENERS////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    private ActionListener validateAndDoPrevious = new ActionListener() {        public void actionPerformed(ActionEvent evt) {            if (action == ActionToolBar.ACT_INSERT || action == ActionToolBar.ACT_MODIFY) {                // requestFocus();                //  internParent.doPrevious();            }        }    };////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// => METHODE APPARENTE AU BEANS////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// => FONCTIONS APPARENTES AU TRANSFERT DE DONNEE////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    /**     * Permet au parent de lancer le chargement des données au     * <p/>     * <p/>     * sein de liste (Ici : ListSelector)     */    public void chargeData() {    }    /**     * Demande d'une insertion au serveur     */    private Avion_segment_T chargeSegmentsClass(Avion_segment_T tmpSegments) {        tmpSegments.setAs_position(0);        tmpSegments.setAs_routing_de(grp_LSelect_routingDepart.getCleUnik());        tmpSegments.setAs_routing_de_intitule(grp_LSelect_routingDepart.getText());        tmpSegments.setFree_routing_de(grp_LSelect_routingDepart.getFreetexte());        tmpSegments.setAs_routing_a(grp_LSelect_RoutingArrivee.getCleUnik());        tmpSegments.setAs_routing_a_intitule(grp_LSelect_RoutingArrivee.getText());        tmpSegments.setFree_routing_a(grp_LSelect_RoutingArrivee.getFreetexte());        tmpSegments.setCoe_cleunik(grp_LSelect_Compagnie.getCleUnik());        tmpSegments.setAs_compagnie_intitule(grp_LSelect_Compagnie.getText());        tmpSegments.setAs_numero_vol(grp_TField_NumeroVol.getText());        tmpSegments.setAs_date_départ(grp_ADate_DateDepart.getDate());        tmpSegments.setAs_farebasis(grp_TField_FareBasis.getText());        tmpSegments.setAs_classe(grp_ACB_Classe.getText());        tmpSegments.setAs_heure_arrive(grp_TField_HeureArrivee.getValue().toString());        tmpSegments.setAs_heure_départ(grp_TField_HeureDepart.getValue().toString());        return tmpSegments;    }    /**     * Demande d'une suppression ou d'une annulation physique au serveur     */    public void dbDelete() {    }    /**     * Demande d'une insertion au serveur     */    public void dbInsert() {        Conjonction_T tmpConj;        if (!parent.getDossier().isNewreccord())            parent.getDossier().setModifreccord(true);        this.segment = new Avion_segment_T();        segment.setIsnewreccord(true);        if (parent.getTicket().getConjonctionList() == null)//|| parent.getTicket().getConjonctionList().size())        {            tmpConj = new Conjonction_T();            parent.decrementeVoitureLocationCompteur();            tmpConj.setNumconjonction(parent.getVoitureLocationCompteur());            tmpConj.setNewreccord(true);            tmpConj.setNumbillet(parent.getTicket().getAt_num_billet());            Avion_segment_T tmpseg = chargeSegmentsClass(this.segment);            tmpseg.setConcleunik(tmpConj.getNumconjonction());            tmpConj.addSegment(tmpseg);            parent.getTicket().addConjonction(tmpConj);        } else {            int numberConj = parent.getTicket().getConjonctionList().size();            if (numberConj == 0) {                tmpConj = new Conjonction_T();                parent.decrementeVoitureLocationCompteur();                tmpConj.setNumconjonction(parent.getVoitureLocationCompteur());                tmpConj.setNewreccord(true);                tmpConj.setNumbillet(parent.getTicket().getAt_num_billet());            } else {                tmpConj = (Conjonction_T) parent.getTicket().getConjonctionList().get(numberConj - 1);                tmpConj.setModif(true);            }            if (tmpConj.getSegmentList() != null) {                if (tmpConj.getSegmentList().size() < 4) {                    Avion_segment_T tmpseg = chargeSegmentsClass(this.segment);                    tmpseg.setConcleunik(tmpConj.getNumconjonction());                    tmpConj.addSegment(tmpseg);                } else {                    tmpConj = new Conjonction_T();                    parent.decrementeVoitureLocationCompteur();                    tmpConj.setNumconjonction(parent.getVoitureLocationCompteur());                    tmpConj.setNumbillet(parent.getTicket().getAt_num_billet() + numberConj);                    tmpConj.setNewreccord(true);                    Avion_segment_T tmpseg = chargeSegmentsClass(this.segment);                    tmpseg.setConcleunik(tmpConj.getNumconjonction());                    tmpConj.addSegment(tmpseg);                    parent.getTicket().addConjonction(tmpConj);                }            } else {                tmpConj = new Conjonction_T();                parent.decrementeVoitureLocationCompteur();                tmpConj.setNumconjonction(parent.getVoitureLocationCompteur());                tmpConj.setNumbillet(parent.getTicket().getAt_num_billet() + numberConj);                tmpConj.setNewreccord(true);                Avion_segment_T tmpseg = chargeSegmentsClass(this.segment);                tmpseg.setConcleunik(tmpConj.getNumconjonction());                tmpConj.addSegment(tmpseg);                parent.getTicket().addConjonction(tmpConj);            }        }        setBoolean();    }    /**     * Demande de sélection au serveur     */    public void dbSelect() {    }    /**     * Demande de sélection en vue d'une modification au serveur     */    public void dbSelectForUpdate() {    }    private void setBoolean() {        if (!parent.getDossier().isNewreccord())            parent.getDossier().setModifreccord(true);        if (!parent.getTicket().isIsnewreccord())            parent.getTicket().setModify(true);        parent.getTicket().setLocalyModify(true);    }    /**     * Demande d'une modification au serveur     */    public void dbUpdate() {        if (parent.getTicket().isIsnewreccord()) {            this.segment.setIsnewreccord(true);            chargeSegmentsClass(this.segment);            chargeSegment();        } else {            if (parent.getTicket().getConjonctionList() != null)            {                for (int i = 0; i < parent.getTicket().getConjonctionList().size(); i++)                {                    if (((Conjonction_T) parent.getTicket().getConjonctionList().get(i)).getNumconjonction() == this.segment.getConcleunik())                    {                        Conjonction_T conj = (Conjonction_T) parent.getTicket().getConjonctionList().get(i);                        if (!conj.isNewreccord())                            conj.setModif(true);                    }                }            }            this.segment.setModifyreccord(true);            chargeSegmentsClass(this.segment);            chargeSegment();        }        // parent.getDossier().setListPassagerModif(true);        // -> this.segment.setModify(true);        setBoolean();    }////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// => METHODE APPARENTE A L' AFFICHAGE DES DONNEES////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    /**     * Affichage en Mode disable     */    public void displayDisableMode() {        tb_interaction.enableValidateActionListener(false);        //  grp_LSelect_Compagnie.setFocusable(false);        // grp_LSelect_RoutingArrivee.setFocusable(false);        // grp_LSelect_routingDepart.setFocusable(false);        for (int i = 0; i < composantToVerif.length; i++) {            composantToVerif[i].setEnabled(false);            composantToVerif[i].setLastFocusedComponent(false);        }        // requestFocus();        grp_ACB_Classe.requestFocus();        //grp_ACB_Classe.setNextFocusableComponent(m_test);        // grp_ACB_Classe.transferFocus();        // this.setNextFocusableComponent(aComponent    }    /**     * Affichage en mode Insertion     */    public void displayInsertMode() {        tb_interaction.enableValidateActionListener(true);        action = ActionToolBar.ACT_INSERT;        m_parent.getMainScreenModule().setCurrentActionEnabled(new int[]{ActionToolBar.DO_CANCEL});        for (int i = 0; i < composantToVerif.length; i++) {            // composantToVerif[i].setFocusable(true);            composantToVerif[i].setEnabled(true);            composantToVerif[i].setLastFocusedComponent(true);            if (composantToVerif[i] instanceof srcastra.astra.gui.components.combobox.liste.Liste) ;            else                composantToVerif[i].setText("");        }//        grp_ADate_DateDepart.clearField();        //  grp_ADate_DateDepart.setDate(parent.getTicket().getAt_date_depart());        grp_LSelect_Compagnie.setCleUnik(0);        grp_LSelect_RoutingArrivee.setCleUnik(0);        grp_LSelect_routingDepart.setCleUnik(0);        //grp_LSelect_routingDepart.setEnabled(true);        grp_LSelect_routingDepart.requestFocus();        grp_LSelect_routingDepart.requestFocus();    }    /**     * Affichage en mode Lecture     */    public void displayReadMode() {        tb_interaction.enableValidateActionListener(false);        action = ActionToolBar.ACT_READ;        /*parent.setCurrentActionEnabled(new int[] { ActionToolBar.DO_MODIFY,       ActionToolBar.DO_CANCEL,       ActionToolBar.DO_DELETE });*/        //  chargeSegment();        for (int i = 0; i < composantToVerif.length; i++) {            composantToVerif[i].setEnabled(false);            //  composantToVerif[i].setFocusable(false);            //composantToVerif[i].setLastFocusedComponent(false);            //composantToVerif[0].requestFocus();        }    }    /**     * Affichage en mode Modification     */    public void displayUpdateMode() {        tb_interaction.enableValidateActionListener(true);        action = ActionToolBar.ACT_MODIFY;        //parent.setCurrentActionEnabled(new int[] { ActionToolBar.DO_CANCEL });        chargeSegment();        for (int i = 0; i < composantToVerif.length; i++) {            composantToVerif[i].setEnabled(true);            composantToVerif[i].setLastFocusedComponent(true);        }        grp_LSelect_routingDepart.setEnabled(true);        grp_LSelect_routingDepart.requestFocus();    }    /**     * Méthode pour l'update de tous les champs     */    public void updateAllFields() {    }    public void updateAllFields(Object donnee) {    }    private void chargeSegment() {        grp_TField_position.setText("" + segment.getAs_position());        grp_LSelect_routingDepart.setCleUnik(segment.getAs_routing_de());        srcastra.astra.gui.components.combobox.liste.ManageFreeListe.setValue(segment.getAs_routing_de(), segment.getFree_routing_de(), grp_LSelect_routingDepart);        //  grp_LSelect_routingDepart.setText(segment.getAs_routing_de_intitule());        srcastra.astra.gui.components.combobox.liste.ManageFreeListe.setValue(segment.getAs_routing_a(), segment.getFree_routing_a(), grp_LSelect_RoutingArrivee);        ///  grp_LSelect_RoutingArrivee.setText(segment.getAs_routing_a_intitule());        grp_LSelect_Compagnie.setCleUnik(segment.getCoe_cleunik());        //  grp_LSelect_Compagnie.setText(segment.getAs_compagnie_intitule());        grp_TField_NumeroVol.setText(segment.getAs_numero_vol());        grp_ADate_DateDepart.setDate(segment.getAs_date_départ());        System.out.println("h arrivée " + segment.getAs_heure_départ());        grp_TField_HeureDepart.setValue(segment.getAs_heure_départ());        grp_TField_HeureArrivee.setValue(segment.getAs_heure_arrive());        grp_TField_FareBasis.setText("" + segment.getAs_farebasis());        grp_ACB_Classe.setText(segment.getAs_classe());        System.out.println(segment.getAs_farebasis());        //add by me        if (segment.getAs_farebasis().equals("VOID")) {            grp_LSelect_Compagnie.setVisible(false);            grp_TField_HeureDepart.setVisible(false);            grp_TField_HeureArrivee.setVisible(false);            grp_ACB_Classe.setVisible(false);            grp_ADate_DateDepart.setVisible(false);            jLabel4.setVisible(false);            jLabel5.setVisible(false);            jLabel6.setVisible(false);            jLabel7.setVisible(false);            jLabel8.setVisible(false);            grp_Cbox_NonEditable.setVisible(false);            grp_Cbox_Void.setVisible(false);            jLabel10.setVisible(false);            jLabel14.setVisible(false);            jLabel12.setVisible(false);            grp_TField_NumeroVol.setVisible(false);        } else {            grp_LSelect_Compagnie.setVisible(true);            grp_TField_HeureDepart.setVisible(true);            grp_TField_HeureArrivee.setVisible(true);            grp_ACB_Classe.setVisible(true);            grp_ADate_DateDepart.setVisible(true);            jLabel4.setVisible(true);            jLabel5.setVisible(true);            jLabel6.setVisible(true);            jLabel7.setVisible(true);            jLabel8.setVisible(true);            grp_Cbox_NonEditable.setVisible(true);            grp_Cbox_Void.setVisible(true);            jLabel10.setVisible(true);            jLabel14.setVisible(true);            jLabel12.setVisible(true);            grp_TField_NumeroVol.setVisible(true);        }        // -> void        // -> non editable    }////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// => METHODE APPARENTE AUX APPELS DE LA TOOLBAR////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    /**     * Spécifie le composant qui implémente cette fonction comme     * <p/>     * <p/>     * le composant qui pilote l'actionToolBar     */    public void setThisAsToolBarComponent() {    }    public void doAccept() {        displayDisableMode();        /* switch (action) {            case ActionToolBar.ACT_INSERT :                dbInsert();                if(parent.getTicket().isIsattached())                    parent.getTicket().setModify(true);                //displayInsertMode();                internParent.doCancel();                break;            case ActionToolBar.ACT_MODIFY :                dbUpdate();                if(parent.getTicket().isIsattached())                    parent.getTicket().setModify(true);                displayReadMode();                break;                        }*/    }    public void doCancel() {        // displayReadMode();        displayDisableMode();        /*switch (action) {            case ActionToolBar.ACT_INSERT :                action = ActionToolBar.ACT_READ;                internParent.doCancel();                  break;            case ActionToolBar.ACT_MODIFY :                 displayReadMode();                break;            case ActionToolBar.ACT_READ :                internParent.doCancel();                break;        }*/    }    public void doClose() {    }    public void doCreate() {    }    public void doDelete() {    }    public void doHelp() {    }    public void doModify() {    }    public void doNext() {    }    public void doPrevious() {    }    public void doPrint() {    }    public void doSwitch() {    }    public int[] getDefaultActionToolBarMask() {        return new int[0];    }////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// => Champs de la classe////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    private AbstractSousPanel m_parent;    private DossierMainScreenModule parent;    private AstraComponent[] composantToVerif;    private Avion_segment_T segment;    private int action;    private int dr_cleUnik;    private ToolBarInteraction tb_interaction;    private ToolBarComposer internParent;////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// STATIC VARIABLES////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// => Graphic Component////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    // Variables declaration - do not modify//GEN-BEGIN:variables    private srcastra.astra.gui.components.textFields.ATextField grp_ACB_Classe;    private srcastra.astra.gui.components.date.thedate.ADate grp_ADate_DateDepart;    private srcastra.astra.gui.components.checkbox.ACheckBox grp_Cbox_NonEditable;    private srcastra.astra.gui.components.checkbox.ACheckBox grp_Cbox_Void;    private srcastra.astra.gui.components.combobox.liste.Liste grp_LSelect_Compagnie;    private srcastra.astra.gui.components.combobox.liste.Liste grp_LSelect_RoutingArrivee;    private srcastra.astra.gui.components.combobox.liste.Liste grp_LSelect_routingDepart;    private srcastra.astra.gui.components.textFields.ATextField grp_TField_FareBasis;    private srcastra.astra.gui.components.textFields.FormatedTextField.FormatedTextField grp_TField_HeureArrivee;    private srcastra.astra.gui.components.textFields.FormatedTextField.FormatedTextField grp_TField_HeureDepart;    private srcastra.astra.gui.components.textFields.ATextField grp_TField_NumeroVol;    private javax.swing.JLabel grp_TField_position;    private javax.swing.JLabel jLabel1;    private javax.swing.JLabel jLabel10;    private javax.swing.JLabel jLabel12;    private javax.swing.JLabel jLabel13;    private javax.swing.JLabel jLabel14;    private javax.swing.JLabel jLabel2;    private javax.swing.JLabel jLabel3;    private javax.swing.JLabel jLabel4;    private javax.swing.JLabel jLabel5;    private javax.swing.JLabel jLabel6;    private javax.swing.JLabel jLabel7;    private javax.swing.JLabel jLabel8;    private javax.swing.JLabel jLabel9;    private javax.swing.JPanel jPanel1;    private javax.swing.JPanel jPanel2;    private javax.swing.JPanel jPanel3;    private javax.swing.JPanel jPanel4;    private javax.swing.JPanel jPanel5;    private javax.swing.JPanel jPanel6;    private javax.swing.JPanel jPanel7;    // End of variables declaration//GEN-END:variables////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// BEANS PROPERTIES GET/SET SUPPORT////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    /**     * Permet à la classe qui implémente cette méthode de se     * <p/>     * <p/>     * référencer auprès d' ActionToolBar     *     * @return le n° de l'action     */    public int getAction() {        return action;    }    /**     * Sert à recevoir le titre de son parent     * <p/>     * <p/>     * pour un cadre éventuel     *     * @return le titre du panneau     */    public String getTitle() {        return "# Segments Editions #";    }    /**     * Permet de préciser le type d'action qu'on est occupé de faire :     * <p/>     * <p/>     * 0 pour lecture     * <p/>     * <p/>     * 1 pour création     * <p/>     * <p/>     * 2 pour modification     *     * @param action type d'action     */    public void setAction(int action) {        this.action = action;    }    /**     * Permet de recevoir la clé unique d'un objet relatif     * <p/>     * <p/>     * au modules : création par partie ou modification     *     * @param frCleUnik la clé unique     */    public void setFrCleunik(int frCleUnik) {        this.dr_cleUnik = frCleUnik;    }    /**     * Getter for property segment.     *     * @return Value of property segment.     */    public Avion_segment_T getSegment() {        return segment;    }    /**     * Setter for property segment.     *     * @param segment New value of property segment.     */    public void setSegment(Avion_segment_T segment) {        this.segment = segment;    }    public void goUp() {    }    public void setSup_reduc(Object supreduc) {        this.segment = (Avion_segment_T) supreduc;    }    /* public java.awt.Container getContentPane() {      return rootpane.getContentPane();  }    public java.awt.Component getGlassPane() {      return rootpane.getGlassPane();  }    public javax.swing.JLayeredPane getLayeredPane() {       return rootpane.getLayeredPane();  }    public void setContentPane(java.awt.Container container) {        rootpane.setContentPane(container);  }    public void setGlassPane(java.awt.Component component) {      rootpane.setGlassPane(component);  }    public void setLayeredPane(javax.swing.JLayeredPane jLayeredPane) {        rootpane.setLayeredPane(jLayeredPane);  }    */    public java.awt.Component m_getGeneriqueTable() {        return null;    }    public Object getSupReduc2(int i) {        return null;    }    public void reloadTableModel() {    }    public int doPrevious(boolean sw) {        if (action == ActionToolBar.ACT_INSERT)            if (!m_parent.m_config.test)                dbInsert();        if (action == ActionToolBar.ACT_MODIFY)            if (!m_parent.m_config.test)                dbUpdate();        return 1;    }    public int doCancel(boolean sw) {        displayDisableMode();        return 1;    }    public int doAccept(boolean sw) {        displayDisableMode();        return 1;    }    public int doCreate(boolean sw) {        displayInsertMode();        return 1;    }    public void moveInTable(int direction) {    }    public java.awt.Component getTable() {        return null;    }    public int doModify(boolean sw) {        displayUpdateMode();        return 1;    }    public int doDelete(boolean sw) {        return 1;    }    public void doF10() {    }    public void addKeystroque() {    }    public void doF7() {    }}