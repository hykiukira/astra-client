/* * DescriptionLogementPanel.java * * Created on 21 novembre 2002, 9:46 */package srcastra.astra.gui.modules.dossier.productSpecification.gestionnairepaneaux;import srcastra.astra.gui.modules.mainScreenModule.DossierMainScreenModule;import srcastra.astra.gui.modules.InternScreenModule;import srcastra.astra.gui.components.actions.actionToolBar.*;import srcastra.astra.gui.components.fx.*;import srcastra.astra.gui.components.AstraComponent;import srcastra.astra.sys.classetransfert.dossier.InterfaceProduit;import srcastra.astra.gui.sys.tableModel.dossierTableModel.DossierDescriptionLogementTableModel;import srcastra.astra.sys.classetransfert.dossier.brochure.*;import srcastra.astra.gui.components.actions.*;import srcastra.astra.gui.sys.listModel.dossierListModel.descriptionLogement.*;import srcastra.astra.gui.sys.formVerification.*;import srcastra.astra.gui.components.combobox.aCombo.ACombo;import srcastra.astra.gui.components.checkbox.ACheckBox;import javax.swing.event.*;import srcastra.astra.gui.event.*;import java.awt.event.*;import srcastra.astra.gui.components.combobox.liste.DescriptionLogementListeModel;import srcastra.astra.sys.classetransfert.dossier.produit_T;import javax.swing.table.DefaultTableModel;import javax.swing.JOptionPane;/** * @author Sébastien */public class DescriptionLogementEdition extends javax.swing.JPanel implements InternScreenModule, ToolBarComposer, InterfacePanel {///////////////////////////// ///////////////////////////////////////////////////////////////////////////////////////////////////////////// CONSTRUCTOR////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    /**     * Creates new form DescriptionLogementPanel     */    AbstractSousPanel m_parent;    public DescriptionLogementEdition(AbstractSousPanel parent2) {        m_parent = parent2;        this.parent = m_parent.getMainScreenModule();        init();        setBounds(0, 241, 708, 124);        m_productID = m_parent.m_config.typeProduct;        initListe();        // tb_model = new DossierDescriptionLogementTableModel(parent.getServeur(), parent.getCurrentUser(), parent, m_productID);        // grp_Table_logement.setModel(tb_model);        //grp_Table_logement.setSelectionBackground(new java.awt.Color(221,221,255));        //  addKeyListener(this);    }////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// INITIALISATION////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    private void initListe() {        //   m_model=new  SupReducListeTableModel(parent.getServeur(), parent.getCurrentUser(),m_productId,parent,srcastra.astra.sys.configuration.AbstractRequete.SUP_RECUC,parent.getMainframe().getSupReducVector());        // m_model.loadata();        grp_ACB_XLit.setServeur(parent.getServeur());        grp_ACB_XLit.setLogin(parent.getCurrentUser());        grp_ACB_XLit.setModel(new DescriptionLogementListeModel(parent.getServeur(), parent.getCurrentUser(), produit_T.AV, parent, srcastra.astra.sys.configuration.AbstractRequete.DECSRIPTIF_LOG, parent.getMainframe().getDesclog()));        grp_ACB_XLit.init2();        grp_ACB_XLit.setColToSearch(3);        grp_ACB_commodite.setServeur(parent.getServeur());        grp_ACB_commodite.setLogin(parent.getCurrentUser());        grp_ACB_commodite.setModel(new DescriptionLogementListeModel(parent.getServeur(), parent.getCurrentUser(), produit_T.BRO, parent, srcastra.astra.sys.configuration.AbstractRequete.DECSRIPTIF_LOG, parent.getMainframe().getDesclog()));        grp_ACB_commodite.init2();        grp_ACB_commodite.setColToSearch(3);        grp_ACB_situation.setServeur(parent.getServeur());        grp_ACB_situation.setLogin(parent.getCurrentUser());        grp_ACB_situation.setModel(new DescriptionLogementListeModel(parent.getServeur(), parent.getCurrentUser(), produit_T.AS, parent, srcastra.astra.sys.configuration.AbstractRequete.DECSRIPTIF_LOG, parent.getMainframe().getDesclog()));        grp_ACB_situation.init2();        grp_ACB_situation.setColToSearch(3);        grp_ACB_vue.setServeur(parent.getServeur());        grp_ACB_vue.setLogin(parent.getCurrentUser());        grp_ACB_vue.setModel(new DescriptionLogementListeModel(parent.getServeur(), parent.getCurrentUser(), produit_T.BA, parent, srcastra.astra.sys.configuration.AbstractRequete.DECSRIPTIF_LOG, parent.getMainframe().getDesclog()));        grp_ACB_vue.init2();        grp_ACB_vue.setColToSearch(3);        grp_ACB_regime.setServeur(parent.getServeur());        grp_ACB_regime.setLogin(parent.getCurrentUser());        grp_ACB_regime.setModel(new DescriptionLogementListeModel(parent.getServeur(), parent.getCurrentUser(), produit_T.HO, parent, srcastra.astra.sys.configuration.AbstractRequete.DECSRIPTIF_LOG, parent.getMainframe().getDesclog()));        grp_ACB_regime.init2();        grp_ACB_regime.setColToSearch(3);    }    public void init() {        initComponents();        componentToVerif = new AstraComponent[]{grp_TField_quantite, grp_ACB_XLit, grp_ACB_commodite, grp_ACB_situation, grp_ACB_vue, grp_ACB_regime, grp_code};        //    grp_Table_logement.setSelectionMode(javax.swing.DefaultListSelectionModel.SINGLE_SELECTION);        setDocument();        grp_ACB_regime.addValidateFieldListener(m_parent.m_config.getValidate());        // grp_Table_logement.getTableHeader().setReorderingAllowed(false);        //grp_Table_logement.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);    }    public void setDocument() {        grp_code.setDocument(new DefaultMask(0, 15, parent.getCurrentUser().getLangage(), DefaultMask.ALL_LETTRE_IN_UPPERCASE));    }    /**     * This method is called from within the constructor to     * initialize the form.     * WARNING: Do NOT modify this code. The content of this method is     * always regenerated by the Form Editor.     */    private void initComponents() {//GEN-BEGIN:initComponents        java.awt.GridBagConstraints gridBagConstraints;        jPanel2 = new javax.swing.JPanel();        jPanel4 = new javax.swing.JPanel();        jLabel1 = new javax.swing.JLabel();        grp_TField_quantite = new srcastra.astra.gui.components.textFields.ATextField();        jLabel2 = new javax.swing.JLabel();        jLabel3 = new javax.swing.JLabel();        grp_ACB_XLit = new srcastra.astra.gui.components.combobox.liste.Liste();        grp_ACB_commodite = new srcastra.astra.gui.components.combobox.liste.Liste();        jLabel7 = new javax.swing.JLabel();        grp_code = new srcastra.astra.gui.components.textFields.ATextField();        jPanel3 = new javax.swing.JPanel();        jPanel5 = new javax.swing.JPanel();        jLabel4 = new javax.swing.JLabel();        jLabel5 = new javax.swing.JLabel();        jLabel6 = new javax.swing.JLabel();        grp_ACB_situation = new srcastra.astra.gui.components.combobox.liste.Liste();        grp_ACB_vue = new srcastra.astra.gui.components.combobox.liste.Liste();        grp_ACB_regime = new srcastra.astra.gui.components.combobox.liste.Liste();        setLayout(new java.awt.GridLayout(1, 0));        jPanel2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));        jPanel4.setLayout(new java.awt.GridBagLayout());        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 10));        jLabel1.setText(java.util.ResourceBundle.getBundle("srcastra/astra/locale/ModuleDossier/productSpecification/DescriptionLogement", parent.getCurrentUser().getLangage()).getString("grp_TField_quantite"));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 5);        jPanel4.add(jLabel1, gridBagConstraints);        grp_TField_quantite.setEnabled(false);        grp_TField_quantite.setGrp_Comp_nextComponent(grp_ACB_XLit);        grp_TField_quantite.setWarningIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/warning.gif")));        grp_TField_quantite.setWorkingIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/working.gif")));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 0);        jPanel4.add(grp_TField_quantite, gridBagConstraints);        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 10));        jLabel2.setText(java.util.ResourceBundle.getBundle("srcastra/astra/locale/ModuleDossier/productSpecification/DescriptionLogement", parent.getCurrentUser().getLangage()).getString("grp_ACB_XLit"));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 0;        gridBagConstraints.gridy = 1;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 5);        jPanel4.add(jLabel2, gridBagConstraints);        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 10));        jLabel3.setText(java.util.ResourceBundle.getBundle("srcastra/astra/locale/ModuleDossier/productSpecification/DescriptionLogement", parent.getCurrentUser().getLangage()).getString("grp_ACB_commodite"));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 0;        gridBagConstraints.gridy = 2;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 5);        jPanel4.add(jLabel3, gridBagConstraints);        grp_ACB_XLit.setCanbenull(true);        grp_ACB_XLit.setEnabled(false);        grp_ACB_XLit.setGrp_Comp_nextComponent(grp_ACB_commodite);        grp_ACB_XLit.setUp(true);        grp_ACB_XLit.setWarningIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/warning.gif")));        grp_ACB_XLit.setWorkingIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/working.gif")));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 1;        gridBagConstraints.gridy = 1;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 0);        jPanel4.add(grp_ACB_XLit, gridBagConstraints);        grp_ACB_commodite.setCanbenull(true);        grp_ACB_commodite.setEnabled(false);        grp_ACB_commodite.setGrp_Comp_nextComponent(grp_code);        grp_ACB_commodite.setUp(true);        grp_ACB_commodite.setWarningIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/warning.gif")));        grp_ACB_commodite.setWorkingIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/working.gif")));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 1;        gridBagConstraints.gridy = 2;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 0);        jPanel4.add(grp_ACB_commodite, gridBagConstraints);        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 10));        jLabel7.setText(java.util.ResourceBundle.getBundle("srcastra/astra/locale/ModuleDossier/productSpecification/DescriptionLogement").getString("grp_code"));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 0;        gridBagConstraints.gridy = 3;        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 5);        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        jPanel4.add(jLabel7, gridBagConstraints);        grp_code.setEnabled(false);        grp_code.setGrp_Comp_nextComponent(grp_ACB_situation);        grp_code.setWarningIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/warning.gif")));        grp_code.setWorkingIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/working.gif")));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 1;        gridBagConstraints.gridy = 3;        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 0);        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        jPanel4.add(grp_code, gridBagConstraints);        jPanel2.add(jPanel4);        add(jPanel2);        jPanel5.setLayout(new java.awt.GridBagLayout());        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 10));        jLabel4.setText(java.util.ResourceBundle.getBundle("srcastra/astra/locale/ModuleDossier/productSpecification/DescriptionLogement", parent.getCurrentUser().getLangage()).getString("grp_ACB_situation"));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 5);        jPanel5.add(jLabel4, gridBagConstraints);        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 10));        jLabel5.setText(java.util.ResourceBundle.getBundle("srcastra/astra/locale/ModuleDossier/productSpecification/DescriptionLogement", parent.getCurrentUser().getLangage()).getString("grp_ACB_vue"));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 0;        gridBagConstraints.gridy = 1;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 5);        jPanel5.add(jLabel5, gridBagConstraints);        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 10));        jLabel6.setText(java.util.ResourceBundle.getBundle("srcastra/astra/locale/ModuleDossier/productSpecification/DescriptionLogement", parent.getCurrentUser().getLangage()).getString("grp_ACB_regime"));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 0;        gridBagConstraints.gridy = 2;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 5);        jPanel5.add(jLabel6, gridBagConstraints);        grp_ACB_situation.setCanbenull(true);        grp_ACB_situation.setEnabled(false);        grp_ACB_situation.setGrp_Comp_nextComponent(grp_ACB_vue);        grp_ACB_situation.setLeft(true);        grp_ACB_situation.setUp(true);        grp_ACB_situation.setWarningIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/warning.gif")));        grp_ACB_situation.setWorkingIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/working.gif")));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 0);        jPanel5.add(grp_ACB_situation, gridBagConstraints);        grp_ACB_vue.setCanbenull(true);        grp_ACB_vue.setEnabled(false);        grp_ACB_vue.setGrp_Comp_nextComponent(grp_ACB_regime);        grp_ACB_vue.setLeft(true);        grp_ACB_vue.setUp(true);        grp_ACB_vue.setWarningIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/warning.gif")));        grp_ACB_vue.setWorkingIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/working.gif")));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 1;        gridBagConstraints.gridy = 1;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 0);        jPanel5.add(grp_ACB_vue, gridBagConstraints);        grp_ACB_regime.setCanbenull(true);        grp_ACB_regime.setEnabled(false);        grp_ACB_regime.setIsLastComponent(true);        grp_ACB_regime.setLeft(true);        grp_ACB_regime.setUp(true);        grp_ACB_regime.setWarningIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/warning.gif")));        grp_ACB_regime.setWorkingIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/working.gif")));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 1;        gridBagConstraints.gridy = 2;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 0);        jPanel5.add(grp_ACB_regime, gridBagConstraints);        jPanel3.add(jPanel5);        add(jPanel3);    }//GEN-END:initComponents////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// => LISTENERS////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    private ValidateField valideAndPrevious = new ValidateField() {        public void actionPerformed(java.awt.event.ActionEvent evt) {            doPrevious();        }    };    /*  public void keyPressed(java.awt.event.KeyEvent evt) {        int key = evt.getKeyCode();        if (grp_Table_logement.getRowCount() > 0) {            System.out.println("ATENTION MON NOMBRE DE LIGNES TOTALES EST ========> " + grp_Table_logement.getRowCount());            int cur = grp_Table_logement.getSelectedRow();            int tot = grp_Table_logement.getRowCount();            if (key == KeyEvent.VK_DOWN && (cur < tot -1)) grp_Table_logement.changeSelection(cur + 1, 0, false, false);              if (key == KeyEvent.VK_UP && (cur >0) ) grp_Table_logement.changeSelection(cur - 1, 0, false, false);                        }    }            public void keyReleased(java.awt.event.KeyEvent keyEvent) {    }            public void keyTyped(java.awt.event.KeyEvent keyEvent) {    }*/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// => METHODE APPARENTE AU BEANS////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    /*   public void fxPanelDiselected() {    setFocusable(false);    grp_Table_logement.setEnabled(false);    adaptBackgroundColor(false);    m_descParent.removeDescriptionLogementPanel();}public void fxPanelSelected() {    setFocusable(true);    grp_Table_logement.setEnabled(true);    adaptBackgroundColor(true);    m_descParent.displayDescriptionLogementPanel();    requestFocus();}    */    /*  private void adaptBackgroundColor(boolean enabled) {        java.awt.Color background = enabled ? java.awt.Color.white : java.awt.Color.lightGray;        grp_Table_logement.setBackground(background);        grp_Table_logement.setRowSelectionAllowed(enabled);        if (enabled && grp_Table_logement.getRowCount() > 0) grp_Table_logement.changeSelection(0, 0, false, false);    }*/    /*  public void reloadTableInfo(){        tb_model.retrieveData();        grp_Table_logement.tableChanged(new TableModelEvent(tb_model));        grp_Table_logement.repaint();        if(grp_Table_logement.getRowCount()>0)            grp_Table_logement.changeSelection(0,0,false,false);    }*/    /*   public void displayEditionPane(boolean display) {        if (display) {            grp_LPane_logement.moveToFront(grp_Pane_LogementEdition);        }        else {            grp_LPane_logement.moveToFront(grp_SPan_logement);                    }    }*/    public boolean isValidForInsertion() {        if (grp_TField_quantite.getText().equals("")) return false;        return true;    }    public void giveMeTheFocus() {        requestFocus();    }////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// => FONCTIONS APPARENTES AU TRANSFERT DE DONNEE////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    /**     * Permet au parent de lancer le chargement des données au     * sein de liste (Ici : ListSelector)     */    public void chargeDataInsert() {        grp_ACB_XLit.setCleUnik(0);        grp_ACB_commodite.setCleUnik(0);        grp_ACB_situation.setCleUnik(0);        grp_ACB_vue.setCleUnik(0);        grp_ACB_regime.setCleUnik(0);    }    public void chargeData() {        // descLogement = (DescriptionLogement_T) tb_model.renvObject(grp_Table_logement.getSelectedRow());        if (descLogement != null) {            grp_TField_quantite.setText("" + descLogement.getDlt_quantité());            grp_ACB_XLit.setCleUnik(descLogement.getDlt_xlit());            grp_ACB_commodite.setCleUnik(descLogement.getDlt_commodite());            grp_ACB_situation.setCleUnik(descLogement.getDlt_situation());            grp_ACB_vue.setCleUnik(descLogement.getDlt_vue());            grp_ACB_regime.setCleUnik(descLogement.getDlt_regime());            grp_code.setText(descLogement.getCode());        } else JOptionPane.showMessageDialog(this, "Unable to load data from descLogement !");    }    /**     * Demande d'une suppression ou d'une annulation physique au serveur     */    public void dbDelete() {        /*  int cleparent=grp_Table_logement.getSelectedRow();           if (cleparent >=0) {               DescriptionLogement_T desc = (DescriptionLogement_T) tb_model.renvObject(cleparent);               if (desc != null) {                   if (desc.isNewreccord()) {                       switch (m_productID) {                           case InterfaceProduit.HO :                               parent.getHotel().removeDescriptionLogement(desc);                               break;                           case InterfaceProduit.BRO:                               parent.getBrochure().removeDescriptionLogement(desc);                               break;                       }                   }                   else {                       desc.setDeleted(true);                   }                   if (!parent.getDossier().isNewreccord()) parent.getDossier().setModifreccord(true);                   switch (m_productID) {                       case InterfaceProduit.BRO:                           if (!parent.getBrochure().isIsnewreccord()) parent.getBrochure().setModify(true);                           break;                       case InterfaceProduit.HO:                           if (!parent.getHotel().isIsnewreccord()) parent.getHotel().setModify(true);                           break;                   }               }           }           reloadTableInfo();        */    }    /**     * Demande d'une insertion au serveur     */    public void dbInsert() {        descLogement = new DescriptionLogement_T();        chargeDescriptionLogementClassInsert();        switch (m_productID) {            case InterfaceProduit.BRO:                if (!parent.getBrochure().isIsnewreccord()) parent.getBrochure().setModify(true);                parent.getBrochure().setLocalyModify(true);                parent.getBrochure().addDescriptionLogement(descLogement);                break;            case InterfaceProduit.HO:                parent.getHotel().setLocalyModify(true);                parent.getHotel().addDescriptionLogement(descLogement);                break;        }    }    private void chargeDescriptionLogementClassInsert() {        if (!parent.getDossier().isNewreccord()) parent.getDossier().setModifreccord(true);        descLogement.setNewreccord(true);        chargeDescriptionLogementClass();    }    private void chargeDescriptionLogementClass() {        int q = 0;        try {            q = Integer.parseInt(grp_TField_quantite.getText());        } finally {            descLogement.setDlt_quantité(q);        }        descLogement.setDlt_xlit(grp_ACB_XLit.getCleUnik());        descLogement.setDlt_commodite(grp_ACB_commodite.getCleUnik());        descLogement.setDlt_situation(grp_ACB_situation.getCleUnik());        descLogement.setDlt_vue(grp_ACB_vue.getCleUnik());        descLogement.setDlt_regime(grp_ACB_regime.getCleUnik());        descLogement.setCode(grp_code.getText());    }    /**     * Demande de sélection au serveur     */    public void dbSelect() {    }    /**     * Demande de sélection en vue d'une modification au serveur     */    public void dbSelectForUpdate() {    }    /**     * Demande d'une modification au serveur     */    public void dbUpdate() {        chargeDescriptionLogementClassUpdate();        switch (m_productID) {            case InterfaceProduit.BRO:                if (!parent.getBrochure().isIsnewreccord()) parent.getBrochure().setModify(true);                parent.getBrochure().setLocalyModify(true);                break;            case InterfaceProduit.HO:                parent.getHotel().setLocalyModify(true);                break;        }        //displayReadMode();    }    private void chargeDescriptionLogementClassUpdate() {        if (!parent.getDossier().isNewreccord()) parent.getDossier().setModifreccord(true);        descLogement.setModif(true);        switch (m_productID) {            case InterfaceProduit.BRO:                if (!parent.getBrochure().isIsnewreccord()) parent.getBrochure().setModify(true);                break;            case InterfaceProduit.HO:                if (!parent.getHotel().isIsnewreccord()) parent.getHotel().setModify(true);                break;        }        chargeDescriptionLogementClass();    }////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// => METHODE APPARENTE A L' AFFICHAGE DES DONNEES////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    /**     * Affichage en Mode disable     */    public void displayDisableMode() {        /*  if (fx_manager != null && fx_manager.isActivated()) fx_manager.setActivated(false);        action = ActionToolBar.ACT_DISABLE;        chargeData();        for (int i=0; i < componentToVerif.length; i++) {            componentToVerif[i].setEnabled(false);            componentToVerif[i].setLastFocusedComponent(false);            componentToVerif[i].clearIcon();        }        displayEditionPane(true);        parent.setCurrentActionEnabled(new int[] { ActionToolBar.DO_MODIFY,                                                   ActionToolBar.DO_CANCEL });                                                           requestFocus();*/    }    private void chargeDefaultValue() {        grp_TField_quantite.setText("0");        chargeDataInsert();    }    /**     * Affichage en mode Insertion     */    public void displayInsertMode() {        //     if (fx_manager != null && fx_manager.isActivated()) fx_manager.setActivated(false);        action = ActionToolBar.ACT_INSERT;        chargeDefaultValue();        for (int i = 0; i < componentToVerif.length; i++) {            componentToVerif[i].setEnabled(true);            componentToVerif[i].setLastFocusedComponent(true);            componentToVerif[i].clearIcon();        }        //   displayEditionPane(true);        /*parent.setCurrentActionEnabled(new int[] { ActionToolBar.DO_PREVIOUS,       ActionToolBar.DO_CANCEL,       ActionToolBar.DO_SWITCH });*/        grp_TField_quantite.requestFocus();    }    /**     * Affichage en mode Lecture     */    public void displayReadMode() {        /* //  if (fx_manager != null && fx_manager.isActivated()) fx_manager.setActivated(true);        action = ActionToolBar.ACT_READ;       // displayEditionPane(false);        //reloadTableInfo();     //   if (grp_Table_logement.getRowCount() > 0) grp_Table_logement.changeSelection(0, 0, false, false);              //  parent.setCurrentActionEnabled(new int[] { ActionToolBar.DO_CREATE,                                                   ActionToolBar.DO_ACCEPT,                                                   ActionToolBar.DO_MODIFY,                                                   ActionToolBar.DO_PREVIOUS,                                                   ActionToolBar.DO_CANCEL,                                                   ActionToolBar.DO_DELETE,                                                   ActionToolBar.DO_SWITCH });      //  requestFocus();*/    }    /**     * Affichage en mode Modification     */    public void displayUpdateMode() {        //  if (fx_manager != null && fx_manager.isActivated()) fx_manager.setActivated(false);        action = ActionToolBar.ACT_MODIFY;        chargeData();        for (int i = 0; i < componentToVerif.length; i++) {            componentToVerif[i].setEnabled(true);            componentToVerif[i].setLastFocusedComponent(true);            componentToVerif[i].clearIcon();        }        ///displayEditionPane(true);        /*  parent.setCurrentActionEnabled(new int[] { ActionToolBar.DO_PREVIOUS,       ActionToolBar.DO_CANCEL,       ActionToolBar.DO_SWITCH });*/        grp_TField_quantite.requestFocus();    }    /**     * Méthode pour l'update de tous les champs     */    public void updateAllFields() {    }    public void updateAllFields(Object donnee) {    }    private void disableFields() {        for (int i = 0; i < componentToVerif.length; i++) {            componentToVerif[i].setEnabled(false);            componentToVerif[i].setLastFocusedComponent(false);            componentToVerif[i].clearIcon();        }    }////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// => METHODE APPARENTE AUX APPELS DE LA TOOLBAR////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    public void doAccept() {        //  if (grp_Table_logement.getRowCount() > 0) displayDisableMode();    }    public void doCancel() {        /* switch(action) {             case ActionToolBar.ACT_INSERT :                 displayReadMode();                 break;             case ActionToolBar.ACT_MODIFY :                 displayReadMode();                 break;             case ActionToolBar.ACT_READ :                 m_descParent.doCancel();                 break;             case ActionToolBar.ACT_DISABLE :                 displayReadMode();                 break;        }*/    }    public void doClose() {    }    public void doCreate() {    }    public void doDelete() {        /*    if (grp_Table_logement.getRowCount() > 0) {            int rep=parent.getMessageManager().showConfirmDialog(parent.getSuperOwner(),"eff_produit_text","eff_produit",parent.getCurrentUser());            if(rep==0){                dbDelete();            }        }*/    }    public void doHelp() {    }    public void doModify() {        /*switch (action) {      case ActionToolBar.ACT_READ :*/        //  if (grp_Table_logement.getRowCount() > 0) displayUpdateMode();        /*break;        }*/    }    public void doNext() {    }    public void doPrevious() {    }    public void doPrint() {    }    public void doSwitch() {        fx_manager.swithPanel();        parent.getTheLostFocus();    }    public int[] getDefaultActionToolBarMask() {        return new int[]{ActionToolBar.DO_CREATE, ActionToolBar.DO_ACCEPT, ActionToolBar.DO_MODIFY, ActionToolBar.DO_PREVIOUS, ActionToolBar.DO_CANCEL, ActionToolBar.DO_DELETE, ActionToolBar.DO_SWITCH};    }////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// => Champs de la classe////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    private DossierMainScreenModule parent;    //  private DescriptionLogementParent m_descParent;    private int m_productID;    private int action;    private DossierDescriptionLogementTableModel tb_model;    private DescriptionLogement_T descLogement;    private AstraComponent[] componentToVerif;    private ToolBarInteraction tb_interaction;    private JPanelSelectionFxManager fx_manager;////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// STATIC VARIABLES////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// => Graphic Component////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    // Variables declaration - do not modify//GEN-BEGIN:variables    private srcastra.astra.gui.components.combobox.liste.Liste grp_ACB_XLit;    private srcastra.astra.gui.components.combobox.liste.Liste grp_ACB_commodite;    private srcastra.astra.gui.components.combobox.liste.Liste grp_ACB_regime;    private srcastra.astra.gui.components.combobox.liste.Liste grp_ACB_situation;    private srcastra.astra.gui.components.combobox.liste.Liste grp_ACB_vue;    private srcastra.astra.gui.components.textFields.ATextField grp_TField_quantite;    private srcastra.astra.gui.components.textFields.ATextField grp_code;    private javax.swing.JLabel jLabel1;    private javax.swing.JLabel jLabel2;    private javax.swing.JLabel jLabel3;    private javax.swing.JLabel jLabel4;    private javax.swing.JLabel jLabel5;    private javax.swing.JLabel jLabel6;    private javax.swing.JLabel jLabel7;    private javax.swing.JPanel jPanel2;    private javax.swing.JPanel jPanel3;    private javax.swing.JPanel jPanel4;    private javax.swing.JPanel jPanel5;    // End of variables declaration//GEN-END:variables////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// BEANS PROPERTIES GET/SET SUPPORT////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    /**     * Permet à la classe qui implémente cette méthode de se     * référencer auprès d' ActionToolBar     *     * @return le n° de l'action     */    public int getAction() {        return action;    }    /**     * Sert à recevoir le titre de son parent     * pour un cadre éventuel     *     * @return le titre du panneau     */    public String getTitle() {        return "# Description Logement #";    }    /**     * Permet de préciser le type d'action qu'on est occupé de faire :     * 0 pour lecture     * 1 pour création     * 2 pour modification     *     * @param action type d'action     */    public void setAction(int action) {        this.action = action;    }    /**     * Permet de recevoir la clé unique d'un objet relatif     * au modules : création par partie ou modification     *     * @param frCleUnik la clé unique     */    public void setFrCleunik(int frCleUnik) {    }    /**     * Spécifie le composant qui implémente cette fonction comme     * le composant qui pilote l'actionToolBar     */    public void setThisAsToolBarComponent() {    }    /**     * Getter for property fx_manager.     *     * @return Value of property fx_manager.     */    public srcastra.astra.gui.components.fx.JPanelSelectionFxManager getFx_manager() {        return fx_manager;    }    /**     * Setter for property fx_manager.     *     * @param fx_manager New value of property fx_manager.     */    public void setFx_manager(srcastra.astra.gui.components.fx.JPanelSelectionFxManager fx_manager) {        this.fx_manager = fx_manager;    }    public void fxPanelSelected(int key) {    }    public void goUp() {    }    public java.awt.Component m_getGeneriqueTable() {        return null;    }    /**     * Getter for property grp_Table_logement.     *     * @return Value of property grp_Table_logement.     */    public javax.swing.JTable getGrp_Table_logement() {        return null;    }    public Object getSupReduc2(int i) {        return null;    }    public void reloadTableModel() {    }    public void setSup_reduc(Object sup_reduc) {        this.descLogement = (DescriptionLogement_T) sup_reduc;    }    public int doPrevious(boolean sw) {        int retval = 1;        switch (action) {            case ActionToolBar.ACT_INSERT:                if (isValidForInsertion()) {                    //disableFields();                    if (!m_parent.m_config.test) dbInsert();                    //displayReadMode();                    //  requestFocus();                } else {                    parent.getMessageManager().showMessageDialog(this, "descLog_quantite_libele", "descLog_quantite_titre", parent.getCurrentUser());                    retval = 0;                    grp_TField_quantite.requestFocus();                }                break;            case ActionToolBar.ACT_MODIFY:                if (isValidForInsertion()) {                    // requestFocus();                    //   disableFields();                    if (!m_parent.m_config.test) dbUpdate();                    //      displayReadMode();                    // requestFocus();                } else {                    parent.getMessageManager().showMessageDialog(this, "descLog_quantite_libele", "descLog_quantite_titre", parent.getCurrentUser());                    retval = 0;                    grp_TField_quantite.requestFocus();                }                break;            case ActionToolBar.ACT_READ:                //                /*    if(m_descParent instanceof BrochurePanel || m_descParent instanceof HotelPane)                 fx_manager.swithPanel("supreduc");             else                m_descParent.validateProduct();*/                break;        }        return retval;    }    public int doCancel(boolean sw) {        return 1;    }    public int doAccept(boolean sw) {        return 1;    }    public int doModify(boolean sw) {        displayUpdateMode();        return 1;    }    public int doCreate(boolean sw) {        displayInsertMode();        return 1;    }    public void moveInTable(int direction) {    }    public java.awt.Component getTable() {        return null;    }    public int doDelete(boolean sw) {        return 1;    }    public void doF10() {    }    public void addKeystroque() {    }    public void doF7() {    }/** Setter for property grp_Table_logement. * @param grp_Table_logement New value of property grp_Table_logement. */}