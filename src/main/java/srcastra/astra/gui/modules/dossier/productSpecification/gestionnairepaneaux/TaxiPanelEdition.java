/* * TaxiPanelPassagerTableResume.java * * Created on 9 septembre 2002, 9:00 */package srcastra.astra.gui.modules.dossier.productSpecification.gestionnairepaneaux;import srcastra.astra.gui.modules.mainScreenModule.*;import srcastra.astra.gui.components.fx.*;import javax.swing.*;import javax.swing.table.*;import srcastra.astra.gui.sys.tableModel.dossierTableModel.*;import srcastra.astra.gui.modules.*;import srcastra.astra.gui.components.actions.actionToolBar.*;import srcastra.astra.gui.components.*;import srcastra.astra.sys.classetransfert.dossier.*;import srcastra.astra.gui.event.*;import java.awt.event.*;import srcastra.astra.gui.sys.formVerification.*;/** * * @author  Sébastien */public class TaxiPanelEdition extends javax.swing.JPanel implements InternScreenModule, ToolBarComposer, InterfacePanel {//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// // CONSTRUCTOR////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////             /** Creates new form TaxiPanelPassagerTableResume */    AbstractSousPanel m_parent;    public TaxiPanelEdition( AbstractSousPanel parent2) {        m_parent=parent2;        this.parent = m_parent.getMainScreenModule();     //  m_taxiParent = taxiParent;        init();    }        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// // INITIALISATION////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////      private void init() {        initComponents();        setBounds(0, 250, 708, 115);      //  initTable();        componentToVerif = new AstraComponent[] { grp_CBox_aller, grp_CBox_retour, grp_TField_Passager_Gsm, grp_TField_PassagerAller_HeurePrevue,                                                  grp_TField_PassagerAller_Adresse, grp_LSelect_PassagerAller_Cp, grp_TField_PassagerRetour_HeurePrevue,                                                  grp_TField_PassagerRetour_Adresse, grp_LSelect_PassagerRetour_cp };                                             initListe();        setDocument();                grp_TField_Passager_Gsm.addActionListener(gsmToAllerOuRetour);        grp_LSelect_PassagerAller_Cp.addValidateFieldListener(allerCpToRetourOuValidate);        grp_LSelect_PassagerRetour_cp.addValidateFieldListener(retourCpValidate);      //  grp_Table_Passager.getTableHeader().setReorderingAllowed(false);        //grp_Table_Passager.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);       // addKeyListener(this);    }        private void initListe() {       grp_LSelect_PassagerAller_Cp.setServeur(parent.getServeur());       grp_LSelect_PassagerAller_Cp.setLogin(parent.getCurrentUser());       grp_LSelect_PassagerAller_Cp.setModel(new srcastra.astra.gui.components.combobox.liste.CpListeTableModel(parent.getServeur(), parent.getCurrentUser()));       grp_LSelect_PassagerAller_Cp.init2();              grp_LSelect_PassagerRetour_cp.setServeur(parent.getServeur());       grp_LSelect_PassagerRetour_cp.setLogin(parent.getCurrentUser());       grp_LSelect_PassagerRetour_cp.setModel(new srcastra.astra.gui.components.combobox.liste.CpListeTableModel(parent.getServeur(), parent.getCurrentUser()));       grp_LSelect_PassagerRetour_cp.init2();    }        private void setDocument() {        grp_TField_Passager_Gsm.setDocument(new DefaultMask(0, 15, parent.getCurrentUser().getLangage(), DefaultMask.CASE_UNSENSITIVE));        grp_TField_PassagerAller_Adresse.setDocument(new DefaultMask(1, 50, parent.getCurrentUser().getLangage(), DefaultMask.CASE_UNSENSITIVE));        grp_TField_PassagerAller_HeurePrevue.setDocument(new DefaultMask(1, 5, parent.getCurrentUser().getLangage(), DefaultMask.CASE_UNSENSITIVE));                grp_TField_PassagerRetour_Adresse.setDocument(new DefaultMask(1, 50, parent.getCurrentUser().getLangage(), DefaultMask.CASE_UNSENSITIVE));        grp_TField_PassagerRetour_HeurePrevue.setDocument(new DefaultMask(1, 5, parent.getCurrentUser().getLangage(), DefaultMask.CASE_UNSENSITIVE));    }       /* private void initTable() {        tb_model = new DossierTaxiPassagerTableModel(parent.getServeur(), parent.getCurrentUser(), parent);        grp_Table_Passager.setAutoCreateColumnsFromModel(false);        grp_Table_Passager.setModel(tb_model);        for (int i=0; i < tb_model.getColumnCount(); i++) {            TableCellRenderer renderer;            if (i == 0) {                TaxiPanelPassagerTableResume.CheckAttach at = new TaxiPanelPassagerTableResume.CheckAttach();                at.setHorizontalAlignment(tb_model.m_columns[i].c_alignement);                renderer = at;            }            else if (i == 1 || i == 2) {                TaxiPanelPassagerTableResume.CheckDepRet check = new TaxiPanelPassagerTableResume.CheckDepRet();                check.setHorizontalAlignment(tb_model.m_columns[i].c_alignement);                renderer = check;            }            else {                DefaultTableCellRenderer defaultRenderer = new DefaultTableCellRenderer();                defaultRenderer.setHorizontalAlignment(tb_model.m_columns[i].c_alignement);                renderer = defaultRenderer;            }            TableColumn column = new TableColumn(i, tb_model.m_columns[i].c_width, renderer, new DefaultCellEditor(new JTextField()));            grp_Table_Passager.addColumn(column);        }        JTableHeader header = grp_Table_Passager.getTableHeader();        header.setUpdateTableInRealTime(false);    }*/        /** This method is called from within the constructor to     * initialize the form.     * WARNING: Do NOT modify this code. The content of this method is     * always regenerated by the Form Editor.     */    private void initComponents() {//GEN-BEGIN:initComponents        java.awt.GridBagConstraints gridBagConstraints;        grp_Pan_Passager = new javax.swing.JPanel();        jPanel1 = new javax.swing.JPanel();        grp_Pan_PassagerEditAller = new javax.swing.JPanel();        jPanel13 = new javax.swing.JPanel();        jLabel12 = new javax.swing.JLabel();        jLabel13 = new javax.swing.JLabel();        grp_TField_PassagerAller_Adresse = new srcastra.astra.gui.components.textFields.ATextField();        grp_TField_PassagerAller_Localite = new srcastra.astra.gui.components.textFields.ATextField();        jLabel151 = new javax.swing.JLabel();        grp_TField_PassagerAller_HeurePrevue = new srcastra.astra.gui.components.textFields.ATextField();        grp_LSelect_PassagerAller_Cp = new srcastra.astra.gui.components.combobox.liste.Liste();        grp_Pan_PassagerEditRetour = new javax.swing.JPanel();        jPanel14 = new javax.swing.JPanel();        jLabel15 = new javax.swing.JLabel();        jLabel16 = new javax.swing.JLabel();        jLabel17 = new javax.swing.JLabel();        grp_TField_PassagerRetour_HeurePrevue = new srcastra.astra.gui.components.textFields.ATextField();        grp_TField_PassagerRetour_Adresse = new srcastra.astra.gui.components.textFields.ATextField();        grp_TField_PassagerRetour_Localite = new srcastra.astra.gui.components.textFields.ATextField();        grp_LSelect_PassagerRetour_cp = new srcastra.astra.gui.components.combobox.liste.Liste();        jPanel2 = new javax.swing.JPanel();        jLabel1 = new javax.swing.JLabel();        grp_Label_nom = new javax.swing.JLabel();        grp_Label_prenom = new javax.swing.JLabel();        jPanel3 = new javax.swing.JPanel();        jLabel2 = new javax.swing.JLabel();        grp_CBox_aller = new srcastra.astra.gui.components.checkbox.ACheckBox();        jLabel3 = new javax.swing.JLabel();        grp_CBox_retour = new srcastra.astra.gui.components.checkbox.ACheckBox();        jLabel4 = new javax.swing.JLabel();        grp_TField_Passager_Gsm = new srcastra.astra.gui.components.textFields.ATextField();        setLayout(new java.awt.GridLayout(1, 0));        setBorder(new javax.swing.border.TitledBorder(null, "Passagers", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 10)));        setMinimumSize(new java.awt.Dimension(321, 110));        setPreferredSize(new java.awt.Dimension(708, 115));        grp_Pan_Passager.setLayout(new java.awt.BorderLayout());        grp_Pan_Passager.setBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(1, 1, 1, 1)));        jPanel1.setLayout(new java.awt.GridLayout(1, 0));        grp_Pan_PassagerEditAller.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 2));        grp_Pan_PassagerEditAller.setBorder(new javax.swing.border.TitledBorder(null, java.util.ResourceBundle.getBundle("srcastra/astra/locale/ModuleDossier/productSpecification/TaxiPanel", parent.getCurrentUser().getLangage()).getString("titrePane_PassagerAller"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 10)));        jPanel13.setLayout(new java.awt.GridBagLayout());        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 10));        jLabel12.setText(java.util.ResourceBundle.getBundle("srcastra/astra/locale/ModuleDossier/productSpecification/TaxiPanel", parent.getCurrentUser().getLangage()).getString("grp_TField_PassagerAller_Adresse"));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 0;        gridBagConstraints.gridy = 1;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 4);        jPanel13.add(jLabel12, gridBagConstraints);        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 10));        jLabel13.setText(java.util.ResourceBundle.getBundle("srcastra/astra/locale/ModuleDossier/productSpecification/TaxiPanel", parent.getCurrentUser().getLangage()).getString("grp_LSelect_PassagerAller_Cp"));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 0;        gridBagConstraints.gridy = 2;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 4);        jPanel13.add(jLabel13, gridBagConstraints);        grp_TField_PassagerAller_Adresse.setEnabled(false);        grp_TField_PassagerAller_Adresse.setGrp_Comp_nextComponent(grp_LSelect_PassagerAller_Cp);        grp_TField_PassagerAller_Adresse.setWarningIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/warning.gif")));        grp_TField_PassagerAller_Adresse.setWorkingIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/working.gif")));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 1;        gridBagConstraints.gridy = 1;        gridBagConstraints.gridwidth = 2;        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 0);        jPanel13.add(grp_TField_PassagerAller_Adresse, gridBagConstraints);        grp_TField_PassagerAller_Localite.setEnabled(false);        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 2;        gridBagConstraints.gridy = 2;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 0);        jPanel13.add(grp_TField_PassagerAller_Localite, gridBagConstraints);        jLabel151.setFont(new java.awt.Font("Tahoma", 0, 10));        jLabel151.setText(java.util.ResourceBundle.getBundle("srcastra/astra/locale/ModuleDossier/productSpecification/TaxiPanel", parent.getCurrentUser().getLangage()).getString("grp_TField_PassagerRetour_HeurePrevue"));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 3);        jPanel13.add(jLabel151, gridBagConstraints);        grp_TField_PassagerAller_HeurePrevue.setEnabled(false);        grp_TField_PassagerAller_HeurePrevue.setGrp_Comp_nextComponent(grp_TField_PassagerAller_Adresse);        grp_TField_PassagerAller_HeurePrevue.setWarningIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/warning.gif")));        grp_TField_PassagerAller_HeurePrevue.setWorkingIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/working.gif")));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 1;        gridBagConstraints.gridy = 0;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 3);        jPanel13.add(grp_TField_PassagerAller_HeurePrevue, gridBagConstraints);        grp_LSelect_PassagerAller_Cp.setEnabled(false);        grp_LSelect_PassagerAller_Cp.setIsLastComponent(true);        grp_LSelect_PassagerAller_Cp.setUp(true);        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 1;        gridBagConstraints.gridy = 2;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 0);        jPanel13.add(grp_LSelect_PassagerAller_Cp, gridBagConstraints);        grp_Pan_PassagerEditAller.add(jPanel13);        jPanel1.add(grp_Pan_PassagerEditAller);        grp_Pan_PassagerEditRetour.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 2));        grp_Pan_PassagerEditRetour.setBorder(new javax.swing.border.TitledBorder(null, java.util.ResourceBundle.getBundle("srcastra/astra/locale/ModuleDossier/productSpecification/TaxiPanel", parent.getCurrentUser().getLangage()).getString("titrePane_PassagerRetour"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 10)));        jPanel14.setLayout(new java.awt.GridBagLayout());        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 10));        jLabel15.setText(java.util.ResourceBundle.getBundle("srcastra/astra/locale/ModuleDossier/productSpecification/TaxiPanel", parent.getCurrentUser().getLangage()).getString("grp_TField_PassagerRetour_HeurePrevue"));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 3);        jPanel14.add(jLabel15, gridBagConstraints);        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 10));        jLabel16.setText(java.util.ResourceBundle.getBundle("srcastra/astra/locale/ModuleDossier/productSpecification/TaxiPanel", parent.getCurrentUser().getLangage()).getString("grp_TField_PassagerRetour_Adresse"));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 0;        gridBagConstraints.gridy = 1;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 3);        jPanel14.add(jLabel16, gridBagConstraints);        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 10));        jLabel17.setText(java.util.ResourceBundle.getBundle("srcastra/astra/locale/ModuleDossier/productSpecification/TaxiPanel", parent.getCurrentUser().getLangage()).getString("grp_LSelect_PassagerRetour_cp"));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 0;        gridBagConstraints.gridy = 2;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 3);        jPanel14.add(jLabel17, gridBagConstraints);        grp_TField_PassagerRetour_HeurePrevue.setEnabled(false);        grp_TField_PassagerRetour_HeurePrevue.setGrp_Comp_nextComponent(grp_TField_PassagerRetour_Adresse);        grp_TField_PassagerRetour_HeurePrevue.setWarningIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/warning.gif")));        grp_TField_PassagerRetour_HeurePrevue.setWorkingIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/working.gif")));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 3);        jPanel14.add(grp_TField_PassagerRetour_HeurePrevue, gridBagConstraints);        grp_TField_PassagerRetour_Adresse.setEnabled(false);        grp_TField_PassagerRetour_Adresse.setGrp_Comp_nextComponent(grp_LSelect_PassagerRetour_cp);        grp_TField_PassagerRetour_Adresse.setWarningIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/warning.gif")));        grp_TField_PassagerRetour_Adresse.setWorkingIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/working.gif")));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 1;        gridBagConstraints.gridy = 1;        gridBagConstraints.gridwidth = 2;        gridBagConstraints.ipadx = 155;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(0, 1, 2, 2);        jPanel14.add(grp_TField_PassagerRetour_Adresse, gridBagConstraints);        grp_TField_PassagerRetour_Localite.setEnabled(false);        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 2;        gridBagConstraints.gridy = 2;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 0);        jPanel14.add(grp_TField_PassagerRetour_Localite, gridBagConstraints);        grp_LSelect_PassagerRetour_cp.setEnabled(false);        grp_LSelect_PassagerRetour_cp.setIsLastComponent(true);        grp_LSelect_PassagerRetour_cp.setLeft(true);        grp_LSelect_PassagerRetour_cp.setUp(true);        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 1;        gridBagConstraints.gridy = 2;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 0);        jPanel14.add(grp_LSelect_PassagerRetour_cp, gridBagConstraints);        grp_Pan_PassagerEditRetour.add(jPanel14);        jPanel1.add(grp_Pan_PassagerEditRetour);        grp_Pan_Passager.add(jPanel1, java.awt.BorderLayout.CENTER);        jPanel2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 5, 0));        jPanel2.setBackground(new java.awt.Color(255, 255, 51));        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0)));        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 10));        jLabel1.setText(java.util.ResourceBundle.getBundle("srcastra/astra/locale/ModuleDossier/productSpecification/TaxiPanel", parent.getCurrentUser().getLangage()).getString("label_passager"));        jPanel2.add(jLabel1);        grp_Label_nom.setFont(new java.awt.Font("Tahoma", 1, 10));        grp_Label_nom.setForeground(new java.awt.Color(153, 0, 0));        grp_Label_nom.setText("jLabel5");        jPanel2.add(grp_Label_nom);        grp_Label_prenom.setFont(new java.awt.Font("Tahoma", 1, 10));        grp_Label_prenom.setForeground(new java.awt.Color(153, 0, 0));        grp_Label_prenom.setText("jLabel6");        jPanel2.add(grp_Label_prenom);        jPanel3.setLayout(new java.awt.GridBagLayout());        jPanel3.setOpaque(false);        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 10));        jLabel2.setText(java.util.ResourceBundle.getBundle("srcastra/astra/locale/ModuleDossier/productSpecification/TaxiPanel", parent.getCurrentUser().getLangage()).getString("grp_CBox_aller"));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);        jPanel3.add(jLabel2, gridBagConstraints);        grp_CBox_aller.setEnabled(false);        grp_CBox_aller.setGrp_Comp_nextComponent(grp_CBox_retour);        grp_CBox_aller.setWorkingIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/working.gif")));        grp_CBox_aller.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                grp_CBox_allerActionPerformed(evt);            }        });        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);        jPanel3.add(grp_CBox_aller, gridBagConstraints);        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 10));        jLabel3.setText(java.util.ResourceBundle.getBundle("srcastra/astra/locale/ModuleDossier/productSpecification/TaxiPanel", parent.getCurrentUser().getLangage()).getString("grp_CBox_retour"));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);        jPanel3.add(jLabel3, gridBagConstraints);        grp_CBox_retour.setEnabled(false);        grp_CBox_retour.setGrp_Comp_nextComponent(grp_TField_Passager_Gsm);        grp_CBox_retour.setWorkingIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/working.gif")));        grp_CBox_retour.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                grp_CBox_retourActionPerformed(evt);            }        });        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);        jPanel3.add(grp_CBox_retour, gridBagConstraints);        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 10));        jLabel4.setText(java.util.ResourceBundle.getBundle("srcastra/astra/locale/ModuleDossier/productSpecification/TaxiPanel", parent.getCurrentUser().getLangage()).getString("grp_TField_PassagerAller_Gsm"));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);        jPanel3.add(jLabel4, gridBagConstraints);        grp_TField_Passager_Gsm.setEnabled(false);        grp_TField_Passager_Gsm.setWarningIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/warning.gif")));        grp_TField_Passager_Gsm.setWorkingIcon(new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/aTextfield/working.gif")));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);        jPanel3.add(grp_TField_Passager_Gsm, gridBagConstraints);        jPanel2.add(jPanel3);        grp_Pan_Passager.add(jPanel2, java.awt.BorderLayout.NORTH);        add(grp_Pan_Passager);    }//GEN-END:initComponents    private void grp_CBox_retourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grp_CBox_retourActionPerformed        openRetourFields(grp_CBox_retour.isSelected());    }//GEN-LAST:event_grp_CBox_retourActionPerformed    private void grp_CBox_allerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grp_CBox_allerActionPerformed        openAllerFields(grp_CBox_aller.isSelected());    }//GEN-LAST:event_grp_CBox_allerActionPerformed   ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    // => LISTENERS////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////  private ValidateField gsmToAllerOuRetour = new ValidateField() {     public void actionPerformed(ActionEvent evt) {         if (grp_CBox_aller.isSelected()) grp_TField_PassagerAller_HeurePrevue.requestFocus();         else if (grp_CBox_retour.isSelected()) grp_TField_PassagerRetour_HeurePrevue.requestFocus();     } };  private ValidateField allerCpToRetourOuValidate = new ValidateField() {     public void actionPerformed(ActionEvent evt) {         if (grp_CBox_retour.isSelected()) grp_TField_PassagerRetour_HeurePrevue.requestFocus();         else doPrevious();     } };  private ValidateField retourCpValidate = new ValidateField() {     public void actionPerformed(ActionEvent evt) {         doPrevious();     } }; /*     public void fxPanelDiselected() {        setFocusable(false);        grp_Table_Passager.setEnabled(false);        adaptBackgroundColor(false);            }            public void fxPanelSelected() {        setFocusable(true);        grp_Table_Passager.setEnabled(true);        adaptBackgroundColor(true);        requestFocus();    }            public void keyPressed(java.awt.event.KeyEvent evt) {        int key = evt.getKeyCode();        if (grp_Table_Passager.getRowCount() > 0) {            System.out.println("ATENTION MON NOMBRE DE LIGNES TOTALES EST ========> " + grp_Table_Passager.getRowCount());            int cur = grp_Table_Passager.getSelectedRow();            int tot = grp_Table_Passager.getRowCount();            if (key == KeyEvent.VK_DOWN && (cur < tot -1)) grp_Table_Passager.changeSelection(cur + 1, 0, false, false);              if (key == KeyEvent.VK_UP && (cur >0) ) grp_Table_Passager.changeSelection(cur - 1, 0, false, false);                        }            }        public void keyReleased(java.awt.event.KeyEvent keyEvent) {    }        public void keyTyped(java.awt.event.KeyEvent keyEvent) {    }    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    // => METHODE APPARENTE AU BEANS////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////         public void reloadInfo() {        if (parent.getTaxi() != null) tb_model.setTax_cleUnik(parent.getTaxi().getTax_cleUnik());        tb_model.loadData();        grp_Table_Passager.tableChanged(new javax.swing.event.TableModelEvent(tb_model));        grp_Table_Passager.repaint();        if (grp_Table_Passager.getRowCount() > 0) grp_Table_Passager.changeSelection(0, 0, false, false);    }*/    public class CheckDepRet extends JLabel implements TableCellRenderer {        Icon m_checkIcon;        Icon m_uncheckIcon;                public CheckDepRet() {            super();            setOpaque(false);            m_checkIcon = new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/check.gif"));            m_uncheckIcon = new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/no_check.gif"));        }                public java.awt.Component getTableCellRendererComponent(javax.swing.JTable jTable, Object value, boolean isSelected, boolean hasFocus, int row, int col) {            int val = ((Integer)value).intValue();            if (val == 1) {                setIcon(m_checkIcon);                return this;            }            else {                setIcon(m_uncheckIcon);                return this;            }        }            }        public class CheckAttach extends JLabel implements TableCellRenderer {        Icon m_checkIcon;        Icon m_uncheckIcon;                public CheckAttach() {            super();            setOpaque(false);            m_checkIcon = new javax.swing.ImageIcon(getClass().getResource("/srcastra/astra/gui/img/trombone.gif"));            m_uncheckIcon = null;        }                public java.awt.Component getTableCellRendererComponent(javax.swing.JTable jTable, Object value, boolean isSelected, boolean hasFocus, int row, int col) {            int val = ((Integer)value).intValue();            if (val == 1) {                setIcon(m_checkIcon);                return this;            }            else {                setIcon(m_uncheckIcon);                return this;            }        }            }        private void adaptBackgroundColor(boolean enabled) {    /*    java.awt.Color background = enabled ? java.awt.Color.white : java.awt.Color.lightGray;        grp_Table_Passager.setBackground(background);        grp_Table_Passager.setRowSelectionAllowed(enabled);        if (enabled && grp_Table_Passager.getRowCount() > 0) grp_Table_Passager.changeSelection(0, 0, false, false);*/    }    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    // => FONCTIONS APPARENTES AU TRANSFERT DE DONNEE////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////      /** Permet au parent de lancer le chargement des données au     * sein de liste (Ici : ListSelector)     */    public void chargeData() {        grp_CBox_aller.setSelected((passager.getPassTax_aller() == 1) ? true : false);        grp_CBox_retour.setSelected((passager.getPassTax_retour() == 1) ? true : false);        grp_TField_Passager_Gsm.setText("" + passager.getPassTax_gsm());                grp_TField_PassagerAller_HeurePrevue.setText("" + passager.getPassTax_aller_heure());        grp_TField_PassagerAller_Adresse.setText("" + passager.getPassTax_aller_adresse());        grp_LSelect_PassagerAller_Cp.setCleUnik(passager.getPassTax_aller_codep());        // grp_TField_PassagerAller_Localite                grp_TField_PassagerRetour_HeurePrevue.setText("" + passager.getPassTax_retour_heure());        grp_TField_PassagerRetour_Adresse.setText("" + passager.getPassTax_retour_adresse());        grp_LSelect_PassagerRetour_cp.setCleUnik(passager.getPassTax_retour_cp());        // grp_TField_PassagerRetour_Localite    }            /** Demande d'une suppression ou d'une annulation physique au serveur  */    public void dbDelete() {    }        /** Demande d'une insertion au serveur  */    public void dbInsert() {    }        /** Demande de sélection au serveur  */    public void dbSelect() {    }        /** Demande de sélection en vue d'une modification au serveur  */    public void dbSelectForUpdate() {    }        /** Demande d'une modification au serveur  */    public void dbUpdate() {       if(!parent.getDossier().isNewreccord())        parent.getDossier().setModifreccord(true);             chargePassagerClass();    }        private void chargePassagerClass() {        int aller = (grp_CBox_aller.isSelected()) ? 1 : 0;        int retour = (grp_CBox_retour.isSelected()) ? 1 : 0;        int attach = 0;        if (aller == 1 || retour == 1) attach = 1;        passager.setAttachedToTaxi(attach);        if (attach == 1){                        passager.setPass_taxi(parent.getTaxi().getTax_cleUnik());            parent.getTaxi().addpassager(passager);        }        else{            passager.setPass_taxi(0l);            parent.getTaxi().getPassager().remove(passager);        }                passager.setPassTax_aller(aller);        passager.setPassTax_retour(retour);        passager.setPassTax_gsm(grp_TField_Passager_Gsm.getText());                passager.setPassTax_aller_heure(grp_TField_PassagerAller_HeurePrevue.getText());        passager.setPassTax_aller_adresse(grp_TField_PassagerAller_Adresse.getText());        passager.setPassTax_aller_codep(grp_LSelect_PassagerAller_Cp.getCleUnik());        passager.setPassTax_aller_localite(grp_TField_PassagerAller_Localite.getText());                 passager.setPassTax_retour_heure(grp_TField_PassagerRetour_HeurePrevue.getText());        passager.setPassTax_retour_adresse(grp_TField_PassagerRetour_Adresse.getText());        passager.setPassTax_retour_cp(grp_LSelect_PassagerRetour_cp.getCleUnik());        passager.setPassTax_retour_localite(grp_TField_PassagerRetour_Localite.getText());               passager.setModify(true);                    }/*    public boolean chooseLineInTable() {        if (grp_Table_Passager.getRowCount() < 1) return false;        else {            passager = (Passager_T) tb_model.getPassager(grp_Table_Passager.getSelectedRow());            int attach = ((Integer)tb_model.getValueAt(grp_Table_Passager.getSelectedRow(), 0)).intValue();            if (passager != null && attach != 1) return true;            else return false;        }    }*/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    // => METHODE APPARENTE A L' AFFICHAGE DES DONNEES////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////      private void chargeName() {        grp_Label_nom.setText("" + passager.getPr_nom() + ", ");        grp_Label_prenom.setText("" + passager.getPr_prénom());    }        private void chargeDefaultValues() {        grp_CBox_aller.setSelected(false);         grp_CBox_retour.setSelected(false);        grp_TField_Passager_Gsm.setText("");                grp_TField_PassagerAller_HeurePrevue.setText("");        grp_TField_PassagerAller_Adresse.setText("");        //grp_LSelect_PassagerAller_Cp        grp_TField_PassagerAller_Localite.setText("");                 grp_TField_PassagerRetour_HeurePrevue.setText("");        grp_TField_PassagerRetour_Adresse.setText("");        grp_LSelect_PassagerAller_Cp.setText("");        grp_TField_PassagerAller_Localite.setText("");    }        /** Affichage en Mode disable  */    public void displayDisableMode() {            }        private void closeFields() {        for (int i=0; i < componentToVerif.length; i++) {            componentToVerif[i].setEnabled(false);        }    }        /** Affichage en mode Insertion  */    public void displayInsertMode() {    }        /** Affichage en mode Lecture  */    public void displayReadMode() {        action = ActionToolBar.ACT_READ;  /*      parent.setCurrentActionEnabled(new int[] { ActionToolBar.DO_MODIFY,                                                    /*ActionToolBar.DO_ACCEPT,                                                   ActionToolBar.DO_PREVIOUS,                                                   ActionToolBar.DO_CANCEL,                                                    ActionToolBar.DO_SWITCH });*/                                                           requestFocus();                                                       }        private void openAllerFields(boolean open) {        grp_TField_PassagerAller_HeurePrevue.setEnabled(open);        grp_TField_PassagerAller_Adresse.setEnabled(open);        grp_LSelect_PassagerAller_Cp.setEnabled(open);    }        private void openRetourFields(boolean open) {        grp_TField_PassagerRetour_HeurePrevue.setEnabled(open);        grp_TField_PassagerRetour_Adresse.setEnabled(open);        grp_LSelect_PassagerRetour_cp.setEnabled(open);    }        /** Affichage en mode Modification  */    public void displayUpdateMode() {        action = ActionToolBar.ACT_MODIFY;       // showEditPanel(true);        if (passager != null && passager.getAttachedToTaxi() == 1) chargeData();        else chargeDefaultValues();        chargeName();        grp_CBox_aller.setEnabled(true);        grp_CBox_retour.setEnabled(true);        grp_TField_Passager_Gsm.setEnabled(true);        if (grp_CBox_aller.isSelected()) openAllerFields(true);        else openAllerFields(false);        if (grp_CBox_retour.isSelected()) openRetourFields(true);        else openRetourFields(false);         grp_CBox_aller.requestFocus();    }    /** Méthode pour l'update de tous les champs  */    public void updateAllFields() {    }        public void updateAllFields(Object donnee) {    }            ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    // => METHODE APPARENTE AUX APPELS DE LA TOOLBAR////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////      public void doAccept() {    }            public void doCancel() {                      }        public void doClose() {    }        public void doCreate() {    }        public void doDelete() {    }        public void doHelp() {    }        public void doModify() {        }        public void doNext() {    }        public void doPrevious() {          }        public void doPrint() {    }        public void doSwitch() {        fx_manager.swithPanel();    }        public int[] getDefaultActionToolBarMask() {        return new int[] { ActionToolBar.DO_MODIFY,                            /*ActionToolBar.DO_ACCEPT,*/                           ActionToolBar.DO_PREVIOUS,                           ActionToolBar.DO_CANCEL,                           ActionToolBar.DO_SWITCH };    }////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    // => Champs de la classe////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////     private DossierMainScreenModule parent;    private TaxiPanel m_taxiParent;    private JPanelSelectionFxManager fx_manager;    private DossierTaxiPassagerTableModel tb_model;    private int action;    private Passager_T passager;    private ToolBarComposer tb_composer;    private AstraComponent[] componentToVerif;//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// // STATIC VARIABLES////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////        // => Graphic Component////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////       // Variables declaration - do not modify//GEN-BEGIN:variables    private srcastra.astra.gui.components.checkbox.ACheckBox grp_CBox_aller;    private srcastra.astra.gui.components.checkbox.ACheckBox grp_CBox_retour;    private srcastra.astra.gui.components.combobox.liste.Liste grp_LSelect_PassagerAller_Cp;    private srcastra.astra.gui.components.combobox.liste.Liste grp_LSelect_PassagerRetour_cp;    private javax.swing.JLabel grp_Label_nom;    private javax.swing.JLabel grp_Label_prenom;    private javax.swing.JPanel grp_Pan_Passager;    private javax.swing.JPanel grp_Pan_PassagerEditAller;    private javax.swing.JPanel grp_Pan_PassagerEditRetour;    private srcastra.astra.gui.components.textFields.ATextField grp_TField_PassagerAller_Adresse;    private srcastra.astra.gui.components.textFields.ATextField grp_TField_PassagerAller_HeurePrevue;    private srcastra.astra.gui.components.textFields.ATextField grp_TField_PassagerAller_Localite;    private srcastra.astra.gui.components.textFields.ATextField grp_TField_PassagerRetour_Adresse;    private srcastra.astra.gui.components.textFields.ATextField grp_TField_PassagerRetour_HeurePrevue;    private srcastra.astra.gui.components.textFields.ATextField grp_TField_PassagerRetour_Localite;    private srcastra.astra.gui.components.textFields.ATextField grp_TField_Passager_Gsm;    private javax.swing.JLabel jLabel1;    private javax.swing.JLabel jLabel12;    private javax.swing.JLabel jLabel13;    private javax.swing.JLabel jLabel15;    private javax.swing.JLabel jLabel151;    private javax.swing.JLabel jLabel16;    private javax.swing.JLabel jLabel17;    private javax.swing.JLabel jLabel2;    private javax.swing.JLabel jLabel3;    private javax.swing.JLabel jLabel4;    private javax.swing.JPanel jPanel1;    private javax.swing.JPanel jPanel13;    private javax.swing.JPanel jPanel14;    private javax.swing.JPanel jPanel2;    private javax.swing.JPanel jPanel3;    // End of variables declaration//GEN-END:variables////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    // BEANS PROPERTIES GET/SET SUPPORT////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////  /** Getter for property fx_manager.     * @return Value of property fx_manager.     */    public JPanelSelectionFxManager getFx_manager() {        return fx_manager;    }        /** Setter for property fx_manager.     * @param fx_manager New value of property fx_manager.     */    public void setFx_manager(JPanelSelectionFxManager fx_manager) {        this.fx_manager = fx_manager;    }      /** Permet à la classe qui implémente cette méthode de se     * référencer auprès d' ActionToolBar     * @return le n° de l'action     */     public int getAction() {        return action;    }        /** Sert à recevoir le titre de son parent     * pour un cadre éventuel     * @return le titre du panneau     */    public String getTitle() {        return "# Taxi Passager #";    }        /** Permet de préciser le type d'action qu'on est occupé de faire :     * 0 pour lecture     * 1 pour création     * 2 pour modification     * @param action type d'action     */    public void setAction(int action) {        this.action = action;    }        /** Permet de recevoir la clé unique d'un objet relatif     * au modules : création par partie ou modification     * @param frCleUnik la clé unique     */    public void setFrCleunik(int frCleUnik) {    }        /** Spécifie le composant qui implémente cette fonction comme     * le composant qui pilote l'actionToolBar     */    public void setThisAsToolBarComponent() {    }        public void fxPanelSelected(int key) {    }            public void goUp() {    }        public java.awt.Component m_getGeneriqueTable() {        return null;   //    return grp_Table_Passager;    }            /** Getter for property grp_Table_Passager.     * @return Value of property grp_Table_Passager.     */    public javax.swing.JTable getGrp_Table_Passager() {        return null;     //   return grp_Table_Passager;    }        /** Setter for property grp_Table_Passager.     * @param grp_Table_Passager New value of property grp_Table_Passager.     */    public void setGrp_Table_Passager(javax.swing.JTable grp_Table_Passager) {     //   this.grp_Table_Passager = grp_Table_Passager;    }        public int doAccept(boolean sw) {        return 1;    }        public int doCancel(boolean sw) {        return 1;    }        public int doCreate(boolean sw) {        displayInsertMode();        return 1;    }        public int doDelete(boolean sw) {         return 1;    }        public int doModify(boolean sw) {        displayUpdateMode();        return 1;    }        public int doPrevious(boolean sw) {          switch (action) {            case ActionToolBar.ACT_MODIFY :                closeFields();                dbUpdate();               // showEditPanel(false);               // displayReadMode();                break;                          case ActionToolBar.ACT_READ :                //m_taxiParent.validateProduct();                break;        }          return 1;    }        public Object getSupReduc2(int i) {        return null;    }        public java.awt.Component getTable() {        return null;    }        public void moveInTable(int direction) {    }        public void reloadTableModel() {    }        public void setSup_reduc(Object sup_reduc) {        passager=(Passager_T)sup_reduc;    }        public void doF10() {    }    public void addKeystroque() {    }        public void doF7() {    }        }