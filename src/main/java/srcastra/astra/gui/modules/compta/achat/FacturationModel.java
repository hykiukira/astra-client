/* * FacturationModel.java * * Created le 05/08/2003, 9:43 */package srcastra.astra.gui.modules.compta.achat;import javax.swing.table.AbstractTableModel;import srcastra.astra.gui.test.*;import javax.swing.*;import srcastra.astra.sys.classetransfert.*;import java.util.*;import srcastra.astra.gui.modules.*;/** * @author Driart */public class FacturationModel extends AbstractTableModel {    /**     * Creates a new instance of FacturationModel     */    ColumnData[] m_columns;    Loginusers_T currentUser;    ArrayList data;    boolean resum;    public FacturationModel(MainScreenModule main, Loginusers_T user) {        this.currentUser = user;        this.m_columns = new ColumnData[]{                new ColumnData(loadName("A_journ"), 15, JLabel.LEFT),                new ColumnData(loadName("col_numpiece"), 15, JLabel.LEFT),                new ColumnData(loadName("col_datemouv"), 20, JLabel.LEFT),                new ColumnData(loadName("col_valeur"), 40, JLabel.LEFT),                new ColumnData("D/C", 20, JLabel.LEFT),                new ColumnData(loadName("col_codetva"), 20, JLabel.LEFT),                new ColumnData(loadName("col_valeurbase"), 30, JLabel.LEFT),                new ColumnData(loadName("col_valeurtva"), 30, JLabel.RIGHT),                new ColumnData(loadName("col_libelle"), 50, JLabel.LEFT),                new ColumnData(loadName("col_nom"), 60, JLabel.LEFT),        };        data = new ArrayList();        Object[] tab = new Object[11];        // data.add(new Object[5]);    }    public void addData() {        Object[] tab = new Object[12];        tab[3] = "D";        data.add(tab);    }    public void addData(Object[] tab) {        data.add(tab);    }    public AchatCp getObjectValue(int param) {        return (AchatCp) data.get(param);    }    private String loadName(String key) {        String retVal = "";        try {            retVal = java.util.ResourceBundle.getBundle("srcastra/astra/locale/compta", currentUser.getLangage()).getString(key);            return retVal;        }        catch (java.util.MissingResourceException e) {        }        return "";    }    public int getColumnCount() {        return m_columns.length;    }    public int getRowCount() {        if (data != null)            return data.size();        return 0;    }    public void afficheMe() {        String test = "";        String t = "";        if (data != null)            for (int i = 0; i < data.size(); i++) {                Object[] tmp = (Object[]) data.get(i);                if (tmp != null) {                    t = "";                    for (int j = 0; j < tmp.length; j++) {                        if (tmp[j] != null)                            test = tmp[j].toString();                        else                            test = "null";                        t = t + i + " " + j + " :" + test + "  ";                    }                    System.out.println(t);                    System.out.println("\nfin");                }            }    }    public Object getValueAt(int param, int param1) {        if (param1 < 0 || param1 > 9)            return "";        if (param < 0 || param > data.size())            return "";        if (data != null) {            AchatCp achatcp = (AchatCp) data.get(param);            switch (param1) {                case 0:                    return achatcp.getJota_abrev();                case 1:                    return achatcp.getNumpiece();                case 2:                    return achatcp.getDateMouv().toString2();                case 3:                    return achatcp.getTva1().getPrixTot();                case 4:                    return achatcp.getDc();                case 5:                    return achatcp.getTva1().getTva_code();                case 6:                    return achatcp.getBase();                case 7:                    return achatcp.getTva1().getTva_value();                case 8:                    return achatcp.getCommentaire();                case 9:                    return achatcp.getFrnom();            }        }        return "";    }    public Object getValueAt2(int param, int param1) {        Object[] obj = (Object[]) data.get(param);        return obj[param1];    }    public void setValueAt(int param, int param1, Object obj) {        Object[] tmp = (Object[]) data.get(param);        if (tmp != null) {            tmp[param1] = obj;        }    }    public void setValueTva(int param, Object cleunik, Object prcttva, Object base, Object montantTva, Object prixtot, Object libelle) {        Object[] tmp = (Object[]) data.get(param);        if (tmp != null) {            tmp[7] = cleunik;            tmp[1] = libelle;            tmp[2] = base;            tmp[8] = montantTva;            tmp[9] = prixtot;            tmp[10] = prcttva;        }    }    public void setValueCompte(int param, Object cleunik, Object compte) {        Object[] tmp = (Object[]) data.get(param);        if (tmp != null) {            tmp[0] = compte;            tmp[6] = cleunik;        }    }    public void setValueMontant(int param, Object base, Object montanttva, Object montanttot) {        Object[] tmp = (Object[]) data.get(param);        if (tmp != null) {            tmp[2] = base;            tmp[8] = montanttva;            tmp[9] = montanttot;        }    }    public boolean isCellEditable(int nrow, int ncol) {        if (ncol == 5) return false;        return true;    }    /**     * Getter for property m_columns.     *     * @return Value of property m_columns.     */    public srcastra.astra.gui.test.ColumnData[] getM_columns() {        return this.m_columns;    }    /**     * Setter for property m_columns.     *     * @param m_columns New value of property m_columns.     */    public void setM_columns(srcastra.astra.gui.test.ColumnData[] m_columns) {        this.m_columns = m_columns;    }    /**     * Getter for property data.     *     * @return Value of property data.     */    public java.util.ArrayList getData() {        return data;    }    /**     * Setter for property data.     *     * @param data New value of property data.     */    public void setData(java.util.ArrayList data) {        this.data = data;    }    /**     * Getter for property resum.     *     * @return Value of property resum.     */    public boolean isResum() {        return resum;    }    /**     * Setter for property resum.     *     * @param resum New value of property resum.     */    public void setResum(boolean resum) {        this.resum = resum;    }}