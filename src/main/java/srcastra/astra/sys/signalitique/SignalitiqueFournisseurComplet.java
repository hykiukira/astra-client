/* * SignalitiqueFournisseurComplet.java * * Created on 22 août 2002, 13:19 */package srcastra.astra.sys.signalitique;import srcastra.astra.sys.Transaction;import srcastra.astra.sys.Logger;import srcastra.astra.sys.rmi.utils.Poolconnection;import java.rmi.RemoteException;import srcastra.astra.sys.classetransfert.*;import srcastra.astra.sys.compress.CompressArray;import java.util.ArrayList;import java.sql.*;import srcastra.astra.sys.rmi.utils.ServeurBuffer;import srcastra.astra.sys.rmi.astrainterface;import srcastra.astra.sys.rmi.utils.QueryKeyGen;import srcastra.astra.sys.rmi.Exception.*;/** * * @author  rene */public class SignalitiqueFournisseurComplet implements srcastra.astra.sys.signalitique.Signalitique {        /** Creates a new instance of SignalitiqueFournisseurComplet */    public SignalitiqueFournisseurComplet() {    }        public Object ChargeObject(int urlmcleunik, int urcleunik, int objcleunik, int cas, Poolconnection connect) throws RemoteException {        String sqlrequete=null;        ResultSet tmpresult;        Gestionerreur_T tmperreur= new Gestionerreur_T();        int tmpNbrLigne;        Object returnValue = null;        if(cas==1)        {            sqlrequete="SELECT f.frcleunik,f.frreference1,f.frreference2,f.frnom1,f.frnom2,f.fradresse,f.frtvanum,f.frtvatype,f.frtvaregime,f.frnumbanque1,f.frnumbanque2,f.frnumbanque3,f.frtelephone1,f.frfax,f.frmail,f.frmodecccf,f.frdelaipaienbrjour,f.frdomiciliation,f.frmemo,f.frdatetimecrea,f.frdatetimemodif,f.snumerosessioncrea,f.snumerosessionmodif,f.decleunik,f.cxcleunik,f.aecleunik,f.lecleunik,f.pyscleunik, f.frfournprod, f.frNcompte from fournisseur f where frcleunik="+objcleunik+";";           // sqlrequete="SELECT f.frcleunik,f.frreference1,f.frreference2,f.frnom1,f.frnom2,f.fradresse,f.frtvanum,f.frtvatype,f.frtvaregime,f.frnumbanque1,f.frnumbanque2,f.frnumbanque3,f.frtelephone1,f.frfax,f.frmail,f.frmodecccf,f.frdelaipaienbrjour,f.frdomiciliation,f.frmemo,f.frdatetimecrea,f.frdatetimemodif,f.snumerosessioncrea,f.snumerosessionmodif,f.decleunik,f.cxcleunik,f.aecleunik,f.lecleunik,f.pyscleunik from fournisseur f  where frcleunik="+objcleunik+";";        }        else if(cas==2) {            Transaction.begin(connect.getConuser());            sqlrequete="SELECT f.frcleunik,f.frreference1,f.frreference2,f.frnom1,f.frnom2,f.fradresse,f.frtvanum,f.frtvatype,f.frtvaregime,f.frnumbanque1,f.frnumbanque2,f.frnumbanque3,f.frtelephone1,f.frfax,f.frmail,f.frmodecccf,f.frdelaipaienbrjour,f.frdomiciliation,f.frmemo,f.frdatetimecrea,f.frdatetimemodif,f.snumerosessioncrea,f.snumerosessionmodif,f.decleunik,f.cxcleunik,f.aecleunik,f.lecleunik,f.pyscleunik, f.frfournprod, f.frNcompte from fournisseur f  where frcleunik="+objcleunik+" FOR UPDATE;";           // sqlrequete="SELECT f.frcleunik,f.frreference1,f.frreference2,f.frnom1,f.frnom2,f.fradresse,f.frtvanum,f.frtvatype,f.frtvaregime,f.frnumbanque1,f.frnumbanque2,f.frnumbanque3,f.frtelephone1,f.frfax,f.frmail,f.frmodecccf,f.frdelaipaienbrjour,f.frdomiciliation,f.frmemo,f.frdatetimecrea,f.frdatetimemodif,f.snumerosessioncrea,f.snumerosessionmodif,f.decleunik,f.cxcleunik,f.aecleunik,f.lecleunik,f.pyscleunik,ti.tetraduction from fournisseur f LEFT JOIN  traductionintitule ti ON f.frtvaregime=ti.tecleunik AND ti.lmcleunik="+urlmcleunik+" AND ti.caecleunik=1 where frcleunik="+objcleunik+" FOR UPDATE;";        }        tmpresult=Transaction.execrequete3(sqlrequete,connect.getConuser(),tmperreur);        if(tmperreur.getErreurcode()==10000) {            try{                tmpresult.last();                tmpNbrLigne=tmpresult.getRow();                if(tmpNbrLigne!=0) {                    tmpresult.first();                    String[] numSession=Transaction.renvNomUserPourSession(connect.getConuser(),tmpresult.getString(22),tmpresult.getString(23));                    Fournisseur_T tmpfour=new Fournisseur_T(tmpresult.getInt(1),tmpresult.getString(2),tmpresult.getString(3),tmpresult.getString(4),tmpresult.getString(5),tmpresult.getString(6),tmpresult.getString(7),tmpresult.getString(8),tmpresult.getInt(9),tmpresult.getString(10),tmpresult.getString(11),tmpresult.getString(12),tmpresult.getString(13),tmpresult.getString(14),tmpresult.getString(15),tmpresult.getInt(16),tmpresult.getInt(17),tmpresult.getInt(18),tmpresult.getString(19),tmpresult.getDate(20),tmpresult.getDate(21),tmpresult.getString(22),tmpresult.getString(23),tmpresult.getInt(24),tmpresult.getInt(25),tmpresult.getInt(26),tmpresult.getInt(27),tmpresult.getInt(28),numSession[0],numSession[1], tmpresult.getInt(29), tmpresult.getInt(30));                    tmpfour.setErreurcode(tmperreur.getErreurcode());                    tmpfour.setErreurmessage(tmperreur.getErreurmessage());                   // tmpfour.setRegimeTva(tmpresult.getString(29));                    int langue=urlmcleunik;                    //sqlrequete="select c.cxcleunik,c.cxcode,t.txtraduction,tp.pystraduction, l.letraduction,de.decode,f.frtvaregime,ti.tetraduction  from codepostaux c, traductioncodpostaux t,traductionpays tp,traductionlangues l ,devise de,fournisseur f LEFT JOIN traductionintitule ti ON f.frtvaregime=ti.tecleunik and ti.caecleunik=1  and ti.lmcleunik="+langue+" WHERE c.cxcleunik="+tmpfour.getCxcleunik()+" and t.lmcleunik="+langue+"  and tp.pyscleunik="+tmpfour.getPyscleunik()+" and tp.lmcleunik="+langue+" and  l.lecleunik="+tmpfour.getLecleunik()+" and l.lmcleunik="+langue+"  and de.decleunik="+tmpfour.getDecleunik()+";";                  sqlrequete="select c.cxcleunik,c.cxcode,t.txtraduction,tp.pystraduction, l.letraduction,de.decode  from codepostaux c, traductioncodpostaux t,traductionpays tp,traductionlangues l ,devise de  where c.cxcleunik="+tmpfour.getCxcleunik()+" and t.lmcleunik="+langue+"  and tp.pyscleunik="+tmpfour.getPyscleunik()+" and tp.lmcleunik="+langue+" and "+                   "l.lecleunik="+tmpfour.getLecleunik()+" and l.lmcleunik="+langue+"  and de.decleunik="+tmpfour.getDecleunik()+";";                    // sqlrequete="select c.cxcleunik,c.cxcode,t.txtraduction,tp.pystraduction, l.letraduction,ti.tetraduction,de.decode,f.frtvaregime  from codepostaux c, traductioncodpostaux t,traductionpays tp,traductionlangues l ,devise de,fournisseur f LEFT JOIN traductionintitule ti ON f.frtvaregime=ti.tecleunik where c.cxcleunik="+tmpfour.getCxcleunik()+" and t.lmcleunik="+langue+" and c.cxcleunik="+tmpfour.getCxcleunik()+" and tp.pyscleunik="+tmpfour.getPyscleunik()+" and tp.lmcleunik="+langue+" and "+                    //"l.lecleunik="+tmpfour.getLecleunik()+" and l.lmcleunik="+langue+" and ti.caecleunik=1 and ti.lmcleunik="+langue+" and ti.tecleunik="+tmpfour.getFrtvaregime()+" and de.decleunik="+tmpfour.getDecleunik()+";";                    Logger.getDefaultLogger().log(Logger.LOG_DEBUG,sqlrequete);                    tmpresult=Transaction.execrequete3(sqlrequete,connect.getConuser(),tmperreur);                    tmpresult.first();                    tmpfour.setCp(tmpresult.getString(2));                    tmpfour.setLocalite(tmpresult.getString(3));                    tmpfour.setPays(tmpresult.getString(4));                    tmpfour.setLangue(tmpresult.getString(5));                    tmpfour.setDevise(tmpresult.getString(6));                   // tmpfour.setRegimeTva(tmpresult.getString(8));                    returnValue=(Fournisseur_T)tmpfour;                }                tmpresult.close();            }            catch(SQLException e){                Logger.getDefaultLogger().log(Logger.LOG_WARNING,"Erreur dans  ChargeCodePostaux: "+e);            }            catch(Exception e1){                Logger.getDefaultLogger().log(Logger.LOG_WARNING,"erreur dans chargecodepostaux :"+e1);            }        }else {            Fournisseur_T fournvide=new Fournisseur_T();            fournvide.setErreurcode(tmperreur.getErreurcode());            fournvide.setErreurmessage(tmperreur.getErreurmessage());            returnValue=(Fournisseur_T)fournvide;        }        return returnValue;    }        public Object ChargeObjectPopup(int urlmcleunik, int urcleunik, int objcleunik, int cas, Poolconnection connect) throws RemoteException {        throw new srcastra.astra.sys.rmi.Exception.InvalidSignalitiqueOperation("operation not supported for FournisseurComplet");    }        public Object chargeObjetCombo(int objectCleunik, int urcleunik, int urlmcleunik, Poolconnection connect) throws RemoteException {        throw new srcastra.astra.sys.rmi.Exception.InvalidSignalitiqueOperation("operation not supported for FournisseurComplet");    }        public Gestionerreur_T insertObjectPopup(Object objdp, int urcleunik, int cas, Poolconnection connect) throws RemoteException {        throw new srcastra.astra.sys.rmi.Exception.InvalidSignalitiqueOperation("operation not supported for FournisseurComplet");    }        public Gestionerreur_T modifyObjectPopup(Object objdp, int urcleunik, int cas, Poolconnection connect) throws RemoteException {        throw new srcastra.astra.sys.rmi.Exception.InvalidSignalitiqueOperation("operation not supported for FournisseurComplet");    }        public java.util.ArrayList renvIntitule(int urlmcleunik, int urcleunik, int cas, int caecleunik, Poolconnection connect) throws RemoteException {        throw new srcastra.astra.sys.rmi.Exception.InvalidSignalitiqueOperation("operation not supported for FournisseurComplet");    }        public CompressArray renvSignalitiques(int urlmcleunik, int urcleunik, int cas, Poolconnection connect) throws RemoteException {        throw new srcastra.astra.sys.rmi.Exception.InvalidSignalitiqueOperation("operation not supported for FournisseurComplet");    }        public ArrayList renvcombo(int urcleunik, int urlmcleunik, char plettre, String cxcode, int cas, Poolconnection connect) throws RemoteException {        throw new srcastra.astra.sys.rmi.Exception.InvalidSignalitiqueOperation("operation not supported for FournisseurComplet");    }        public void deleteSignaletique(long objectCleunik, int typeObjec, Poolconnection connect) throws ServeurSqlFailure {    }    }