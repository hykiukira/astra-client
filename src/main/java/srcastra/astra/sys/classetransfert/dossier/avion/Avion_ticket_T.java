/* * Avion_ticket_T.java * * Created on 28 août 2002, 16:16 */package srcastra.astra.sys.classetransfert.dossier.avion;import srcastra.astra.sys.classetransfert.utils.*;import java.util.Hashtable;import java.util.ArrayList;import srcastra.astra.sys.classetransfert.Grpdecision_T;import srcastra.astra.gui.test.*;import srcastra.astra.sys.classetransfert.dossier.*;import srcastra.astra.sys.rmi.*;import srcastra.astra.sys.produit.*;import srcastra.astra.sys.rmi.groupe_dec.*;import java.sql.*;import srcastra.astra.sys.classetransfert.*;import srcastra.astra.sys.classetransfert.dossier.Passager_T;/** * * @author  Thomas */public class Avion_ticket_T extends srcastra.astra.sys.classetransfert.dossier.produit_T implements java.io.Serializable,Cloneable,ProduitSynthese,srcastra.astra.sys.classetransfert.dossier.InterfaceIndivProduit{     /** Creates a new instance of Avion_ticket_T */ /* * Avion_Ticket_T.java * * Created on 28 août 2002, 13:05 */    public boolean cancel;    public final static int NORMAL=0;    public final static int VOID=1;    public final static int CANCEL=2;    public final static int REFUND=3;    public final static int EXCHANGE=4;    private int etatAnnulation;    private ArrayList destinationArray;    public Avion_ticket_T() {        setPax(1);        setQua(1);        setPrct(100);        setTypeDeProduitCleunik(super.AV);    }    public Object clone()throws CloneNotSupportedException{       return super.clone();     }            /** Getter for property at_annul_date.     * @return Value of property at_annul_date.     */    public srcastra.astra.sys.classetransfert.utils.Date getAt_annul_date() {        return at_annul_date;    }        /** Setter for property at_annul_date.     * @param at_annul_date New value of property at_annul_date.     */    public void setAt_annul_date(srcastra.astra.sys.classetransfert.utils.Date at_annul_date) {        this.at_annul_date = at_annul_date;    }        /** Getter for property at_annul_tot.     * @return Value of property at_annul_tot.     */    public double getAt_annul_tot() {        return at_annul_tot;    }        /** Setter for property at_annul_tot.     * @param at_annul_tot New value of property at_annul_tot.     */    public void setAt_annul_tot(double at_annul_tot) {        this.at_annul_tot = at_annul_tot;    }        /** Getter for property at_annul_type.     * @return Value of property at_annul_type.     */    public int getAt_annul_type() {        return at_annul_type;    }        /** Setter for property at_annul_type.     * @param at_annul_type New value of property at_annul_type.     */    public void setAt_annul_type(int at_annul_type) {        this.at_annul_type = at_annul_type;    }             /** Getter for property at_cloture_date.     * @return Value of property at_cloture_date.     */    public srcastra.astra.sys.classetransfert.utils.Date getAt_cloture_date() {        return at_cloture_date;    }        /** Setter for property at_cloture_date.     * @param at_cloture_date New value of property at_cloture_date.     */    public void setAt_cloture_date(srcastra.astra.sys.classetransfert.utils.Date at_cloture_date) {        this.at_cloture_date = at_cloture_date;    }        /** Getter for property at_compagnie.     * @return Value of property at_compagnie.     */    /** Getter for property at_conjonction.     * @return Value of property at_conjonction.     */    public int getAt_conjonction() {        return at_conjonction;    }        /** Setter for property at_conjonction.     * @param at_conjonction New value of property at_conjonction.     */    public void setAt_conjonction(int at_conjonction) {        this.at_conjonction = at_conjonction;    }        /** Getter for property at_date_depart.     * @return Value of property at_date_depart.     */    public srcastra.astra.sys.classetransfert.utils.Date getAt_date_depart() {        return at_date_depart;    }        /** Setter for property at_date_depart.     * @param at_date_depart New value of property at_date_depart.     */    public void setAt_date_depart(srcastra.astra.sys.classetransfert.utils.Date at_date_depart) {        this.at_date_depart = at_date_depart;    }        /** Getter for property at_date_emission.     * @return Value of property at_date_emission.     */    public srcastra.astra.sys.classetransfert.utils.Date getAt_date_emission() {        return at_date_emission;    }        /** Setter for property at_date_emission.     * @param at_date_emission New value of property at_date_emission.     */    public void setAt_date_emission(srcastra.astra.sys.classetransfert.utils.Date at_date_emission) {        this.at_date_emission = at_date_emission;    }        /** Getter for property at_date_stock.     * @return Value of property at_date_stock.     */    public srcastra.astra.sys.classetransfert.utils.Date getAt_date_stock() {        return at_date_stock;    }        /** Setter for property at_date_stock.     * @param at_date_stock New value of property at_date_stock.     */    public void setAt_date_stock(srcastra.astra.sys.classetransfert.utils.Date at_date_stock) {        this.at_date_stock = at_date_stock;    }        /** Getter for property at_etat.     * @return Value of property at_etat.     */    public int getAt_etat() {        return at_etat;    }        /** Setter for property at_etat.     * @param at_etat New value of property at_etat.     */    public void setAt_etat(int at_etat) {        this.at_etat = at_etat;    }        /** Getter for property at_fullfare.     * @return Value of property at_fullfare.     */    public double getAt_fullfare() {        return at_fullfare;    }        /** Setter for property at_fullfare.     * @param at_fullfare New value of property at_fullfare.     */    public void setAt_fullfare(double at_fullfare) {        this.at_fullfare = at_fullfare;    }        /** Getter for property at_memo.     * @return Value of property at_memo.     */    public java.lang.String getAt_memo() {        return at_memo;    }        /** Setter for property at_memo.     * @param at_memo New value of property at_memo.     */    public void setAt_memo(java.lang.String at_memo) {        this.at_memo = at_memo;    }        /** Getter for property at_mode_paiement.     * @return Value of property at_mode_paiement.     */    public int getAt_mode_paiement() {        return at_mode_paiement;    }    /** Setter for property at_mode_paiement. * @param at_mode_paiement New value of property at_mode_paiement. */public void setAt_mode_paiement(int at_mode_paiement) {    this.at_mode_paiement = at_mode_paiement;}/** Getter for property at_num_billet. * @return Value of property at_num_billet. */public java.lang.String getAt_num_billet() {    return at_num_billet;}/** Setter for property at_num_billet. * @param at_num_billet New value of property at_num_billet. */public void setAt_num_billet(java.lang.String at_num_billet) {    this.at_num_billet = at_num_billet;}/** Getter for property at_num_cccf. * @return Value of property at_num_cccf. */public java.lang.String getAt_num_cccf() {    return at_num_cccf;}/** Setter for property at_num_cccf. * @param at_num_cccf New value of property at_num_cccf. */public void setAt_num_cccf(java.lang.String at_num_cccf) {    this.at_num_cccf = at_num_cccf;}/** Getter for property at_numrefund. * @return Value of property at_numrefund. */public java.lang.String getAt_numrefund() {    return at_numrefund;}/** Setter for property at_numrefund. * @param at_numrefund New value of property at_numrefund. */public void setAt_numrefund(java.lang.String at_numrefund) {    this.at_numrefund = at_numrefund;}/** Getter for property at_pnr. * @return Value of property at_pnr. */public java.lang.String getAt_pnr() {    return at_pnr;}/** Setter for property at_pnr. * @param at_pnr New value of property at_pnr. */public void setAt_pnr(java.lang.String at_pnr) {    this.at_pnr = at_pnr;}/** Getter for property at_tax_compagnie. * @return Value of property at_tax_compagnie. */public double getAt_tax_compagnie() {    return at_tax_compagnie;}/** Setter for property at_tax_compagnie. * @param at_tax_compagnie New value of property at_tax_compagnie. */public void setAt_tax_compagnie(double at_tax_compagnie) {    this.at_tax_compagnie = at_tax_compagnie;}/** Getter for property at_tax_destination. * @return Value of property at_tax_destination. */public double getAt_tax_destination() {    return at_tax_destination;}/** Setter for property at_tax_destination. * @param at_tax_destination New value of property at_tax_destination. */public void setAt_tax_destination(double at_tax_destination) {    this.at_tax_destination = at_tax_destination;}/** Getter for property at_tax_locale. * @return Value of property at_tax_locale. */public double getAt_tax_locale() {    return at_tax_locale;}/** Setter for property at_tax_locale. * @param at_tax_locale New value of property at_tax_locale. */public void setAt_tax_locale(double at_tax_locale) {    this.at_tax_locale = at_tax_locale;}/** Getter for property at_type_billet. * @return Value of property at_type_billet. */public int getAt_type_billet() {    return at_type_billet;}/** Setter for property at_type_billet. * @param at_type_billet New value of property at_type_billet. */public void setAt_type_billet(int at_type_billet) {    this.at_type_billet = at_type_billet;}/** Getter for property at_val_com. * @return Value of property at_val_com. */public double getAt_val_com() {    return at_val_com;}/** Setter for property at_val_com. * @param at_val_com New value of property at_val_com. */public void setAt_val_com(double at_val_com) {    this.at_val_com = at_val_com;}/** Getter for property at_val_facial. * @return Value of property at_val_facial. */public double getAt_val_facial() {    return at_val_facial;}/** Setter for property at_val_facial. * @param at_val_facial New value of property at_val_facial. */public void setAt_val_facial(double at_val_facial) {    this.at_val_facial = at_val_facial;}/** Getter for property at_val_nette. * @return Value of property at_val_nette. */public double getAt_val_nette() {    return at_val_nette;}/** Setter for property at_val_nette. * @param at_val_nette New value of property at_val_nette. */public void setAt_val_nette(double at_val_nette) {    this.at_val_nette = at_val_nette;}/** Getter for property at_val_remise. * @return Value of property at_val_remise. */public double getAt_val_remise() {    return at_val_remise;}/** Setter for property at_val_remise. * @param at_val_remise New value of property at_val_remise. */public void setAt_val_remise(double at_val_remise) {    this.at_val_remise = at_val_remise;}/** Getter for property at_val_vente. * @return Value of property at_val_vente. */public int getAt_vendu() {    return at_vendu;}/** Setter for property at_vendu. * @param at_vendu New value of property at_vendu. */public void setAt_vendu(int at_vendu) {    this.at_vendu = at_vendu;}/** Getter for property compagnie_nom. * @return Value of property compagnie_nom. */public java.lang.String getCompagnie_nom() {    return compagnie_nom;}/** Setter for property compagnie_nom. * @param compagnie_nom New value of property compagnie_nom. */public void setCompagnie_nom(java.lang.String compagnie_nom) {    this.compagnie_nom = compagnie_nom;}/** Getter for property conjonction. * @return Value of property conjonction. */public java.util.Hashtable getConjonction() {    return conjonction;}/** Setter for property conjonction. * @param conjonction New value of property conjonction. */public void setConjonction(java.util.Hashtable conjonction) {    this.conjonction = conjonction;}/** Getter for property drcleunik. * @return Value of property drcleunik. */public int getDrcleunik() {    return drcleunik;}/** Setter for property drcleunik. * @param drcleunik New value of property drcleunik. */public void setDrcleunik(int drcleunik) {    this.drcleunik = drcleunik;}/** Getter for property fournisseur_nom. * @return Value of property fournisseur_nom. *//** Getter for property passager. * @return Value of property passager. */public int getPassager() {    return passager;}/** Setter for property passager. * @param passager New value of property passager. */public void setPassager(int passager) {    this.passager = passager;}/** Getter for property passager_nom. * @return Value of property passager_nom. *//** Getter for property segment. * @return Value of property segment. */public int getCoe_cleunik() {    return coe_cleunik;}/** Setter for property coe_cleunik. * @param coe_cleunik New value of property coe_cleunik. */public void setCoe_cleunik(int coe_cleunik) {    this.coe_cleunik = coe_cleunik;}public void addConjonction(Conjonction_T tmpconj){    if(this.getConjonctionList()==null)        this.conjonctionList=new ArrayList();    this.conjonctionList.add(tmpconj);}/** Getter for property conjonctionList. * @return Value of property conjonctionList. */public java.util.ArrayList getConjonctionList() {    return conjonctionList;}/** Setter for property conjonctionList. * @param conjonctionList New value of property conjonctionList. */public void setConjonctionList(java.util.ArrayList conjonctionList) {    this.conjonctionList = conjonctionList;}/** Getter for property at_fees. * @return Value of property at_fees. */public double getAt_fees() {    return at_fees;}/** Setter for property at_fees. * @param at_fees New value of property at_fees. */public void setAt_fees(double at_fees) {    this.at_fees = at_fees;}public srcastra.astra.sys.classetransfert.utils.Date getDateDep() {    return this.at_date_depart;}public String getDestination() { return "";}public String getLogement() {     return "";}public String getPnr() {    return this.at_pnr;}/** Getter for property deletedConjonctionList. * @return Value of property deletedConjonctionList. */public java.util.ArrayList getDeletedConjonctionList() {    return deletedConjonctionList;}/** Setter for property deletedConjonctionList. * @param deletedConjonctionList New value of property deletedConjonctionList. */public void setDeletedConjonctionList(java.util.ArrayList deletedConjonctionList) {    this.deletedConjonctionList = deletedConjonctionList;}public void addDeletedConj(Object deleteconj){ if(deletedConjonctionList==null)     deletedConjonctionList=new ArrayList(); deletedConjonctionList.add(deleteconj);}/** Getter for property isnewreccord. * @return Value of property isnewreccord. *//** Getter for property isattached. * @return Value of property isattached. */ /** Getter for property frnom. * @return Value of property frnom. *//*public void prepareAffichage( ){        String tmp=getGroupdec().getGntvainclusvente()==1?"INC":"N.INC";        produitaffichage=new srcastra.astra.sys.classetransfert.dossier.ProduitAffichage(   this,"B",this.getFrnom(),this.getGroupe_produit_nom(),"AV","",this.getAt_memo(),                                                                this.getAt_val_vente(),this.getPax(),this.getQua(),this.getPrct(),"ok",this.getValeur_tot(),                                                                this.getAt_cleunik(),this.getTypeDeProduitCleunik(),getGroupdec().getValeurGenFloat1(),tmp,getValeur_tot_tva_inc());   }*//** Getter for property at_statutCleuUnik. * @return Value of property at_statutCleuUnik. *//** Getter for property at_datetimecrea. * @return Value of property at_datetimecrea. *///public srcastra.astra.sys.classetransfert.utils.Date getAt_datetimecrea() {  //  return at_datetimecrea;//}/** Setter for property at_datetimecrea. * @param at_datetimecrea New value of property at_datetimecrea. *///public void setAt_datetimecrea(srcastra.astra.sys.classetransfert.utils.Date at_datetimecrea) {  //  this.at_datetimecrea = at_datetimecrea;//}/** Getter for property at_datetimemodif. * @return Value of property at_datetimemodif. *///public srcastra.astra.sys.classetransfert.utils.Date getAt_datetimemodif() {  //  return at_datetimemodif;//}/** Setter for property at_datetimemodif. * @param at_datetimemodif New value of property at_datetimemodif. *///public void setAt_datetimemodif(srcastra.astra.sys.classetransfert.utils.Date at_datetimemodif) {  //  this.at_datetimemodif = at_datetimemodif;//}  /*  public class ProduitAffichage {               public ProduitAffichage(            String tp,            String fr,            String grp_prod,            String tr,            String ac,            String lib,            float prixu,            int qua,            int nbrpa,            float prct,            String status,            float prixtot) {                this.tp=tp;                this.fr=fr;                this.grp_prod=grp_prod;                this.tr=tr;                this.ac=ac;                this.lib=lib;                this.prixu2=new ColorData(new Float(prixu));                this.qua=new Integer(qua);                this.nbrpa=new Integer(nbrpa);                this.prct=new Float(prct);                this.status=status;                this.prixtot=new ColorData(new Float(prixtot));        }        public String tp;        public String fr;        public String grp_prod;        public String tr;        public String ac;        public String lib;        public ColorData prixu2;        public Integer qua;        public Integer nbrpa;        public Float prct;        public String status;        public ColorData prixtot;    }*/private String at_pnr;private int at_type_billet;private int at_vendu;private String at_num_billet;private int at_conjonction;private srcastra.astra.sys.classetransfert.utils.Date at_date_stock;private srcastra.astra.sys.classetransfert.utils.Date at_date_emission;private srcastra.astra.sys.classetransfert.utils.Date at_date_depart;private int at_annul_type;private srcastra.astra.sys.classetransfert.utils.Date at_annul_date;private double at_annul_tot;private String at_numrefund;private srcastra.astra.sys.classetransfert.utils.Date at_cloture_date;private int drcleunik;private int at_mode_paiement;private String at_num_cccf;private double at_val_facial;private double at_val_nette;private double at_tax_compagnie;private double at_tax_locale; private double at_tax_destination;private double at_fullfare;private int coe_cleunik;private int at_etat;private double at_val_com;private double at_val_remise;private String at_memo;  private Hashtable conjonction;private int passager;//private srcastra.astra.sys.classetransfert.utils.Date at_datetimecrea;//private srcastra.astra.sys.classetransfert.utils.Date at_datetimemodif;private String compagnie_nom;private ArrayList conjonctionList;private ArrayList deletedConjonctionList;private Passager_T passagert; private double at_fees;//public transient srcastra.astra.sys.classetransfert.dossier.ProduitAffichage produitaffichage;public void annulMe(Connection con, PreparedStatement pstmt) throws SQLException {    pstmt=con.prepareStatement("UPDATE avion_ticket SET annuler=1 WHERE    at_cleunik  =?");    pstmt.setLong(1,this.getAt_cleunik());    pstmt.execute();}public void chargeDescriptif(Connection con, PreparedStatement pstmt, Dossier_T tmpDossier) throws SQLException {}public void chargeMe(Loginusers_T currentuser, astrainterface serveur, Dossier_T dossier, Connection con, double cledossier, PreparedStatement pstmt) throws SQLException, java.rmi.RemoteException {               // System.out.println("Putain de requete"+CHARGE_AVION_TICKET);    //                                                    1          2          3           4               5           6               7                   8               9                   10          11              12          13                  14          15              16              17              18              19                  20          21          22          23      24                  25              26              27          28          29          30              31          32      33      34          35      36              37          38              39                    pstmt=con.prepareStatement("SELECT a.at_cleunik,a.at_pnr,a.frgtcleunik,a.at_type_billet,a.at_vendu,a.at_num_billet,a.at_date_emission,a.at_date_depart,a.at_annul_type,a.at_annul_date,a.at_annul_tot,a.at_numrefund,a.at_cloture_date,a.dr_cleunik,a.at_mode_paiement,a.at_num_cccf,a.at_val_facial,a.at_val_vente,a.at_val_nette,a.at_fullfare,a.coe_cleunik,a.at_etat,a.at_val_com,a.at_memo,a.at_datetimecrea,a.at_datetimemodif,a.at_coabrev,h.hevaleur,h.hevaleurbase,h.hevaleurtva,h.helibelle,a.longtime,a.pax,a.quantite,a.pourcent,a.pr_cleunik,a.tion_cleunik,a.at_annull_etat  FROM avion_ticket a,historique2 h WHERE h.lignecleunik=a.at_cleunik AND h.sn_cleunik=0 AND h.ctprocleunik=1 AND dr_cleunik=? AND a.annuler=0 AND h.hedossiercourant='O'");                pstmt.setInt(1,dossier.getDrcleunik());                ResultSet result=pstmt.executeQuery();                result.beforeFirst();                while(result.next()){                    Avion_ticket_T ticket=new Avion_ticket_T();                    ticket.setAt_cleunik(result.getLong(1));                    ticket.setAt_pnr(result.getString(2));                       ticket.setFrgtcleunik(result.getInt(3));                    ticket.setAt_type_billet(result.getInt(4));                    ticket.setAt_vendu(result.getInt(5));                    ticket.setAt_num_billet(result.getString(6));                    ticket.setAt_date_emission(new srcastra.astra.sys.classetransfert.utils.Date(result.getString(7)));                    ticket.setAt_date_depart(new srcastra.astra.sys.classetransfert.utils.Date(result.getString(8)));                    ticket.setAt_annul_type(result.getInt(9));                    ticket.setAt_annul_date(new srcastra.astra.sys.classetransfert.utils.Date(result.getString(10)));                                    ticket.setAt_annul_tot(result.getDouble(11));                    ticket.setAt_numrefund(result.getString(12));                    ticket.setAt_cloture_date(new srcastra.astra.sys.classetransfert.utils.Date(result.getString(13)));                                    ticket.setDrcleunik(result.getInt(14));                    ticket.setAt_mode_paiement(result.getInt(15));                    ticket.setAt_num_cccf(result.getString(16));                    ticket.setAt_val_facial(result.getDouble(17));                    ticket.setAt_val_vente(result.getDouble(18));                    ticket.setAt_val_nette(result.getDouble(19));                    ticket.setAt_fullfare(result.getDouble(20));                    ticket.setCoe_cleunik(result.getInt(21));                    ticket.setStatut(result.getInt(22));                     ticket.setAt_val_com(result.getDouble(23));                    ticket.setAt_memo(result.getString(24));                     ticket.setDatetimecrea(new srcastra.astra.sys.classetransfert.utils.Date(result.getString(25)));                    ticket.setDatetimemodif(new srcastra.astra.sys.classetransfert.utils.Date(result.getString(26)));                    ticket.setCompagnie_nom(result.getString(27));                     ticket.setValeur_tot_tva_inc(-result.getDouble(28));                                    ticket.setValeur_tot(-result.getDouble(29));                    ticket.setMontant_tva(-result.getDouble(30));                    ticket.setLibelleCompta(result.getString(31));                    ticket.setLongtime(result.getLong(32));                    ticket.setPax(result.getInt(33));                    ticket.setQua(result.getInt(34));                    ticket.setPrct(result.getFloat(35));                    ticket.setPassager(result.getInt(36));                    ticket.setTion_cleunik(result.getLong(37));                    ticket.setEtatAnnulation(result.getInt(38));                    ticket.setMyPassager(dossier.getPassager());                    GrpRetValue retG=GrpProduitGestion.filGrpDecToProd(serveur,ticket,con,currentuser.getUrcleunik());                    ticket.setGroupdecBase(retG.getBase());                    ticket.setGroupdec(retG.getOwn());                    ProduitInfoComplementaire.getInfo(ProduitInfoComplementaire.AV,ProduitInfoComplementaire.AV_FULL,produit_T.AV,currentuser.getLangage(),ticket,con);                    chargeConjonction(ticket,pstmt,con);                    ticket.setDoc(pstmt,con);                    SupplementReduction.chargeSupreduc(ticket,con,pstmt,serveur,currentuser.getUrcleunik());                    dossier.addTicket(ticket);}}public void setMyPassager(ArrayList array){     if(array!=null)                    for(int k=0;k<array.size();k++){                        Passager_T pass=(Passager_T)array.get(k);                        if(pass!=null){                        if(new Double(pass.getPr_cleunik()).intValue()==getPassager()){                            setPassagert(pass);                            break;                        }                       }                                            }    }private static void chargeConjonction(Avion_ticket_T ticket,PreparedStatement pstmt,Connection con)throws SQLException{                   System.out.println("[\n\no[*************]ok je rentre dans chargeConjonction");                                 pstmt=con.prepareStatement("SELECT con_cleunik,numbillet,at_cleunik FROM conjonction  WHERE annuler=0 AND at_cleunik=?");                   ArrayList conjonctionArray=new ArrayList();                   pstmt.setLong(1,ticket.getAt_cleunik());                   ResultSet result=pstmt.executeQuery();                   result.beforeFirst();                   while(result.next()){                          System.out.println("[\n\no[*************]ok Conjonction NOT NULL");                             Conjonction_T conjonction=new Conjonction_T();                        conjonction.setNumconjonction(result.getLong(1));                       conjonction.setNumbillet(result.getString(2));                       conjonction.setAt_cleunik(result.getLong(3));                       chargeSegment(conjonction, pstmt, con);                       ticket.addConjonction(conjonction);                                                             }}private static void chargeSegment(Conjonction_T conjonction,PreparedStatement pstmt,Connection con)throws SQLException{                             System.out.println("[\n\no[*************]ok je rentre dans chargeSegment");                                        pstmt=con.prepareStatement("SELECT s.as_cleunik, s.con_cleunik, s.as_position, s.as_routing_de, s.as_routing_a, s.as_numero_vol, s.as_date_depart, s.as_heure_depart, s.as_heure_arrive, s.as_farebasis, s.as_classe, s.coe_cleunik, s.as_void, s.as_editable, td1.dn_abrev, td2.dn_abrev, c.coe_abrev, s.freelibelede, s.freelibelea FROM avion_segments s LEFT  JOIN destination td1 ON ( s.as_routing_de = td1.dn_cleunik )  LEFT  JOIN destination td2 ON s.as_routing_a = td2.dn_cleunik LEFT  JOIN compagnie c ON ( s.coe_cleunik = c.coe_cleunik )  WHERE   s.annuler = 0 AND con_cleunik = ?");                             //pstmt=con.prepareStatement("SELECT s.as_cleunik,s.con_cleunik,s.as_position,s.as_routing_de,s.as_routing_a,s.as_numero_vol,s.as_date_depart,s.as_heure_depart,s.as_heure_arrive,s.as_farebasis,s.as_classe,s.coe_cleunik,s.as_void,s.as_editable,s.freelibelede,s.freelibelea,c.coe_abrev  FROM avion_segments s,compagnie c WHERE   s.coe_cleunik=c.coe_cleunik AND s.annuler=0 AND  con_cleunik=?");                             pstmt.setLong(1,conjonction.getNumconjonction());                             ResultSet result=pstmt.executeQuery();                             result.beforeFirst();                             ArrayList segmentList=new ArrayList();                             while(result.next()){                                 System.out.println("[\n\no[*************]ok Segment NOT NULL");                              Avion_segment_T segment=new Avion_segment_T();                             segment.setAs_cleunik(result.getDouble(1));                             segment.setConcleunik(result.getLong(2));                             segment.setAs_position(result.getInt(3));                             segment.setAs_routing_de(result.getInt(4));                             segment.setAs_routing_a(result.getInt(5));                             segment.setAs_numero_vol(result.getString(6));                             segment.setAs_date_départ(new srcastra.astra.sys.classetransfert.utils.Date(result.getString(7)));                             segment.setAs_heure_départ(result.getString(8));                             segment.setAs_heure_arrive(result.getString(9));                             segment.setAs_farebasis(result.getString(10));                             segment.setAs_classe(result.getString(11));                             segment.setCoe_cleunik(result.getInt(12));                             segment.setVoidSegment(result.getInt(13));                             segment.setNonEditableSegment(result.getInt(14));                             segment.setAs_routing_de_intitule(result.getString(15));                             segment.setAs_routing_a_intitule(result.getString(16));                             segment.setAs_compagnie_intitule(result.getString(17));                             segment.setFree_routing_de(result.getString(18));                             segment.setFree_routing_a(result.getString(19));                                               if(!segment.getFree_routing_a().equals("NO"))                                 segment.setAs_routing_a_intitule(segment.getFree_routing_a());                                                          if(!segment.getFree_routing_de().equals("NO"))                                 segment.setAs_routing_de_intitule(segment.getFree_routing_de());                                                          conjonction.addSegment(segment);                             }                           }public long insertDescriptif(Connection con, double cledossier, PreparedStatement pstmt) throws SQLException {    if(this.getConjonctionList()!=null){               for(int i=0;i<this.getConjonctionList().size();i++)               {                    Conjonction_T conjonction=(Conjonction_T)this.getConjonctionList().get(i);                    insertConjonctionOnly(conjonction,con,this.getAt_cleunik(),pstmt);                    if(conjonction.getSegmentList()!=null){                        for(int j=0;j<conjonction.getSegmentList().size();j++)                        {                            Avion_segment_T segment=(Avion_segment_T)conjonction.getSegmentList().get(j);                            insertSegmentOnly(segment,con,conjonction.getNumconjonction(),pstmt);                        }                                           }                                       }           }             return 0;}private static long insertConjonctionOnly(Conjonction_T conjonction,Connection con,long cleticket,PreparedStatement pstmt)throws SQLException{                       pstmt=con.prepareStatement("INSERT INTO `conjonction` (`numbillet`, `at_cleunik`) VALUES (?,?)");                       pstmt.setString(1,conjonction.getNumbillet());                       pstmt.setLong(2,cleticket);                       pstmt.execute();                       conjonction.setNumconjonction(getId(con));                       return conjonction.getNumconjonction();}private static ArrayList insertSegmentOnly(Avion_segment_T  segment,Connection con,long cleconjonction,PreparedStatement pstmt)throws SQLException{                             String date;                             ArrayList dest=null;                             if(segment!=null){                             dest=new ArrayList();                                     dest.add(new int[]{segment.getAs_routing_de(),segment.getAs_routing_a()});                             pstmt=con.prepareStatement("INSERT INTO `avion_segments` (`con_cleunik`, `as_position`, `as_routing_de`, `as_routing_a`, `as_compagnie`, `as_numero_vol`, `as_date_depart`, `as_heure_depart`, `as_heure_arrive`, `as_farebasis`, `as_classe`, `coe_cleunik`, `as_void`, `as_editable`, freelibelede , freelibelea) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)" );                             pstmt.setLong(1,cleconjonction);                             pstmt.setInt(2,segment.getAs_position());                             pstmt.setInt(3,segment.getAs_routing_de());                             pstmt.setInt(4,segment.getAs_routing_a());                             pstmt.setInt(5,segment.getCoe_cleunik());                             pstmt.setString(6,segment.getAs_numero_vol());                              if(segment.getAs_date_départ()==null) date="0000-00-00 00:00:00"; else date=segment.getAs_date_départ().toString();                             pstmt.setString(7,date);                             pstmt.setString(8,segment.getAs_heure_départ());                             pstmt.setString(9,segment.getAs_heure_arrive());                             pstmt.setString(10,segment.getAs_farebasis());                             pstmt.setString(11,segment.getAs_classe());                             pstmt.setInt(12,segment.getCoe_cleunik());                             pstmt.setInt(13,segment.getVoidSegment());                             pstmt.setInt(14,segment.getNonEditableSegment());                                pstmt.setString(15,segment.getFree_routing_de());                             pstmt.setString(16,segment.getFree_routing_a());                             pstmt.execute();                                }                             return dest;}public long insertOnlyme(Connection con, double cledossier, PreparedStatement pstmt) throws SQLException {                String date;                pstmt=con.prepareStatement("INSERT INTO `avion_ticket` (`at_pnr`, `frgtcleunik`, `at_type_billet`, `at_vendu`, `at_num_billet`,`at_date_emission`, `at_date_depart`, `at_annul_type`, `at_annul_date`, `at_annul_tot`, `at_numrefund`, `at_cloture_date`, `dr_cleunik`, `at_mode_paiement`, `at_num_cccf`, `at_val_facial`, `at_val_vente`, `at_val_nette`,`at_fullfare`, `coe_cleunik`, `at_etat`, `at_val_com`,`at_memo`,at_datetimecrea,at_datetimemodif,at_coabrev,longtime,pax,quantite,pourcent,pr_cleunik,tion_cleunik,at_annull_etat) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,NOW(),NOW(),?,?,?,?,?,?,?,?)" );                pstmt.setString(1,this.getAt_pnr());                   pstmt.setInt(2,this.getFrgtcleunik());                pstmt.setInt(3,this.getAt_type_billet());                pstmt.setInt(4,this.getAt_vendu());                pstmt.setString(5,this.getAt_num_billet());                if(this.getAt_date_emission()==null) date="0000-00-00 00:00:00"; else date=this.getAt_date_emission().toString();                pstmt.setString(6,date);                if(this.getAt_date_depart()==null) date="0000-00-00 00:00:00"; else date=this.getAt_date_depart().toString();                pstmt.setString(7,date);                pstmt.setInt(8,this.getAt_annul_type());                if(this.getAt_annul_date()==null) date="0000-00-00 00:00:00"; else date=this.getAt_annul_date().toString();                pstmt.setString(9,date);                pstmt.setDouble(10,this.getAt_annul_tot());                pstmt.setString(11,this.getAt_numrefund());                if(this.getAt_cloture_date()==null) date="0000-00-00 00:00:00"; else date=this.getAt_cloture_date().toString();                pstmt.setString(12,date);                pstmt.setDouble(13,cledossier);                pstmt.setInt(14,this.getAt_mode_paiement());                pstmt.setString(15,this.getAt_num_cccf());                pstmt.setDouble(16,this.getAt_val_facial());                pstmt.setDouble(17,this.getAt_val_vente());                pstmt.setDouble(18,this.getAt_val_nette());                pstmt.setDouble(19,this.getAt_fullfare());                if(this.getCoe_cleunik()==-1)this.setCoe_cleunik(0);                pstmt.setInt(20,this.getCoe_cleunik());                pstmt.setInt(21,this.getStatut());                pstmt.setDouble(22,this.getAt_val_com());                pstmt.setString(23,this.getAt_memo());                  pstmt.setString(24,this.getCompagnie_nom());                pstmt.setLong(25,this.getLongtime());                pstmt.setInt(26,this.getPax());                pstmt.setInt(27,this.getQua());                pstmt.setFloat(28,this.getPrct());                if(getPassagert()!=null){                  pstmt.setInt(29,new Double(getPassagert().getPr_cleunik()).intValue());                   }                else                 pstmt.setInt(29,0);                   pstmt.setLong(30, this.getTion_cleunik());                pstmt.setInt(31, this.getEtatAnnulation());                pstmt.execute();                this.setAt_cleunik(GetId.getLastIdLong(con));                   return this.getAt_cleunik();}public void modifyDescriptif(Connection con, PreparedStatement pstmt) throws SQLException {    if(this.getConjonctionList()!=null)               {                   for(int i=0;i<this.getConjonctionList().size();i++)                   {                        Conjonction_T conjonction=(Conjonction_T)this.getConjonctionList().get(i);                        if(conjonction.isNewreccord())                        {                            insertConjonctionOnly(conjonction,con,this.getAt_cleunik(),pstmt);                            if(conjonction.getSegmentList()!=null){                                for(int j=0;j<conjonction.getSegmentList().size();j++)                                {                                    Avion_segment_T segment=(Avion_segment_T)conjonction.getSegmentList().get(j);                                    insertSegmentOnly(segment,con,conjonction.getNumconjonction(),pstmt);                                }                                                  }                                                         }                        else if(conjonction.isModif()){                            modifConjonctionOnly(conjonction,con,pstmt);                            if(conjonction.getSegmentList()!=null)                            {                              for(int j=0;j<conjonction.getSegmentList().size();j++)                              {                                 Avion_segment_T segment=(Avion_segment_T)conjonction.getSegmentList().get(j);                                 if(segment.isIsnewreccord() && !segment.isDeleted()){                                     insertSegmentOnly(segment,con,conjonction.getNumconjonction(),pstmt);                                                                      }                                 else if(segment.isModifyreccord()){                                    modifSegmentOnly(segment,con,pstmt);                                  }                                  else if(segment.isDeleted() && !segment.isIsnewreccord()){                                    deleteSegmentOnly(segment,con,pstmt);                                  }                              }                            }                                                   }                   }                                  }               if(this.getDeletedConjonctionList()!=null){                 for(int p=0;p<this.getDeletedConjonctionList().size();p++){                      Conjonction_T conjonction=(Conjonction_T)this.getDeletedConjonctionList().get(p);                      modifConjonctionOnly(conjonction,con,pstmt);                                              }                                     }}private static void modifConjonctionOnly(Conjonction_T conjonction,Connection con,PreparedStatement pstmt)throws SQLException{                       pstmt=con.prepareStatement("UPDATE conjonction set numbillet=?,annuler=? WHERE con_cleunik=?"  );                       pstmt.setString(1,conjonction.getNumbillet());                       if(conjonction.isDeleted())                           pstmt.setInt(2,1);                       else                           pstmt.setInt(2,0);                       pstmt.setLong(3,conjonction.getNumconjonction());                       pstmt.execute();    }private static void modifSegmentOnly(Avion_segment_T  segment,Connection con,PreparedStatement pstmt)throws SQLException{                             String date;                             pstmt=con.prepareStatement("UPDATE avion_segments set as_position=?,as_routing_de=?,as_routing_a=?,as_compagnie=?,as_numero_vol=?,as_date_depart=?,as_heure_depart=?,as_heure_arrive=?,as_farebasis=?,as_classe=?,coe_cleunik=?,as_void=?,as_editable=?,freelibelede=?,freelibelea=?  WHERE as_cleunik=?");                             pstmt.setInt(1,segment.getAs_position());                             pstmt.setInt(2,segment.getAs_routing_de());                             pstmt.setInt(3,segment.getAs_routing_a());                             pstmt.setInt(4,segment.getCoe_cleunik());                             pstmt.setString(5,segment.getAs_numero_vol());                              if(segment.getAs_date_départ()==null) date="0000-00-00 00:00:00"; else date=segment.getAs_date_départ().toString();                             pstmt.setString(6,date);                             pstmt.setString(7,segment.getAs_heure_départ());                             pstmt.setString(8,segment.getAs_heure_arrive());                             pstmt.setString(9,segment.getAs_farebasis());                             pstmt.setString(10,segment.getAs_classe());                             pstmt.setInt(11,segment.getCoe_cleunik());                             pstmt.setInt(12,segment.getVoidSegment());                             pstmt.setInt(13,segment.getNonEditableSegment());                              pstmt.setString(14,segment.getFree_routing_de());                             pstmt.setString(15,segment.getFree_routing_a());                             pstmt.setDouble(16,segment.getAs_cleunik());                             pstmt.execute();   }public static void  deleteSegmentOnly(Avion_segment_T  segment,Connection con,PreparedStatement pstmt)throws SQLException{         String date;         pstmt=con.prepareStatement("UPDATE avion_segments SET annuler=1 WHERE  as_cleunik =?");         pstmt.setLong(1,new Double(segment.getAs_cleunik()).longValue());         pstmt.execute();  }public void modifyOnlyMe(Connection con, int cledossier, PreparedStatement pstmt) throws SQLException {       String date;       pstmt=con.prepareStatement("UPDATE `avion_ticket` set at_pnr=?,frgtcleunik=?,at_type_billet=?,at_vendu=?,at_num_billet=?,at_date_emission=?,at_date_depart=?,at_annul_type=?,at_annul_date=?,at_annul_tot=?,at_numrefund=?,at_cloture_date=?,at_mode_paiement=?,at_num_cccf=?,at_val_facial=?,at_val_vente=?,at_val_nette=?,at_fullfare=?,coe_cleunik=?,at_etat=?,at_val_com=?,at_memo=?,at_datetimemodif=NOW(),at_coabrev=?,pax=?,quantite=?,pourcent=?,pr_cleunik=?,at_annull_etat=? WHERE at_cleunik=?" );       pstmt.setString(1,this.getAt_pnr());                   pstmt.setInt(2,this.getFrgtcleunik());                pstmt.setInt(3,this.getAt_type_billet());                pstmt.setInt(4,this.getAt_vendu());                pstmt.setString(5,this.getAt_num_billet());                if(this.getAt_date_emission()==null) date="0000-00-00 00:00:00"; else date=this.getAt_date_emission().toString();                pstmt.setString(6,date);                if(this.getAt_date_depart()==null) date="0000-00-00 00:00:00"; else date=this.getAt_date_depart().toString();                pstmt.setString(7,date);                pstmt.setInt(8,this.getAt_annul_type());                if(this.getAt_annul_date()==null) date="0000-00-00 00:00:00"; else date=this.getAt_annul_date().toString();                pstmt.setString(9,date);                pstmt.setDouble(10,this.getAt_annul_tot());                pstmt.setString(11,this.getAt_numrefund());                if(this.getAt_cloture_date()==null) date="0000-00-00 00:00:00"; else date=this.getAt_cloture_date().toString();                pstmt.setString(12,date);                pstmt.setInt(13,this.getAt_mode_paiement());                pstmt.setString(14,this.getAt_num_cccf());                pstmt.setDouble(15,this.getAt_val_facial());                pstmt.setDouble(16,this.getAt_val_vente());                pstmt.setDouble(17,this.getAt_val_nette());                pstmt.setDouble(18,this.getAt_fullfare());                if(this.getCoe_cleunik()==-1)this.setCoe_cleunik(0);                pstmt.setInt(19,this.getCoe_cleunik());                pstmt.setInt(20,this.getStatut());                pstmt.setDouble(21,this.getAt_val_com());                pstmt.setString(22,this.getAt_memo());                  pstmt.setString(23,this.getCompagnie_nom());                pstmt.setInt(24,this.getPax());                pstmt.setInt(25,this.getQua());                pstmt.setFloat(26,this.getPrct());                if(getPassagert()!=null){                 pstmt.setInt(27,new Double(getPassagert().getPr_cleunik()).intValue());                   }                else{                    pstmt.setInt(27,0);                   }                pstmt.setInt(28,this.getEtatAnnulation());                   pstmt.setLong(29,this.getAt_cleunik());                pstmt.execute();}/** Getter for property passagert. * @return Value of property passagert. */    double remise=0;    double vente=0;    double taxloc=0;    double taxdest=0;    double taxcomp=0;    double fees=0;public void initialValue(){                     vente=getAt_val_vente();             taxloc=getAt_tax_locale();             taxdest=getAt_tax_destination();             taxcomp=getAt_tax_compagnie();             remise=getAt_val_remise();             fees=getAt_fees();                         } public boolean checkComptaModif(){     boolean retva=false;     System.out.println("\n\n\n\n\n\n\n\n\n\n\n");     System.out.println("vente "+vente+"  "+getAt_val_vente());     System.out.println("vente "+taxloc+"  "+getAt_tax_locale() );     System.out.println("vente "+taxdest+"  "+getAt_tax_destination());     System.out.println("vente "+taxcomp+"  "+getAt_tax_compagnie());     System.out.println("vente "+remise+"  "+getAt_val_remise());     System.out.println("vente "+fees+"  "+getAt_fees());        if( vente!=getAt_val_vente() || taxloc!=getAt_tax_locale() || taxdest!=getAt_tax_destination() || taxcomp!=getAt_tax_compagnie()|| remise!=getAt_val_remise() || fees!=getAt_fees())        {            retva=true;            System.out.println("valeur comptable changee");            }        else{            retva=false;            System.out.println("valeurs comptables inchangée");        }       System.out.println("\n\n\n\n\n\n\n\n\n\n\n");     return retva;    }public srcastra.astra.sys.classetransfert.dossier.Passager_T getPassagert() {    return passagert;}/** Setter for property passagert. * @param passagert New value of property passagert. */public void setPassagert(srcastra.astra.sys.classetransfert.dossier.Passager_T passagert) {    this.passagert = passagert;}/** Getter for property tion_cleunik. * @return Value of property tion_cleunik. * */public long getTion_cleunik() {    return tion_cleunik;}/** Setter for property tion_cleunik. * @param tion_cleunik New value of property tion_cleunik. * */public void setTion_cleunik(long tion_cleunik) {    this.tion_cleunik = tion_cleunik;}/** Getter for property etatAnnulation. * @return Value of property etatAnnulation. * */public int getEtatAnnulation() {    return etatAnnulation;}/** Setter for property etatAnnulation. * @param etatAnnulation New value of property etatAnnulation. * */public void setEtatAnnulation(int etatAnnulation) {    this.etatAnnulation = etatAnnulation;}/** Getter for property cancel. * @return Value of property cancel. * */public boolean isCancel() {    return cancel;}/** Setter for property cancel.public java.util.ArrayList getDestinationArray() * @param cancel New value of property cancel. * */public void setCancel(boolean cancel) {    this.cancel = cancel;}/** Setter for property destination. * @param destination New value of property destination. * *//** Getter for property destinationArray. * @return Value of property destinationArray. * */public java.util.ArrayList getDestinationArray() {    Hashtable destinationh=null;    destinationArray=null;    if(this.getConjonctionList()!=null){      for(int i=0;i<this.getConjonctionList().size();i++)                   {                        Conjonction_T conjonction=(Conjonction_T)this.getConjonctionList().get(i);                            if(conjonction.getSegmentList()!=null){                                for(int j=0;j<conjonction.getSegmentList().size();j++)                                {                                    Avion_segment_T segment=(Avion_segment_T)conjonction.getSegmentList().get(j);                                    if(destinationh==null)                                        destinationh=new Hashtable();                                        if(segment.getAs_routing_de_intitule()!=null && !segment.getAs_routing_de_intitule().equals(""))                                            destinationh.put(segment.getAs_routing_de_intitule(),"");                                        if(segment.getAs_routing_a_intitule()!=null && !segment.getAs_routing_a_intitule().equals(""))                                            destinationh.put(segment.getAs_routing_a_intitule(),"");                                }                                                  }                                                         }    }    if(destinationh!=null && destinationh.size()>0){        for(java.util.Enumeration enu=destinationh.keys();enu.hasMoreElements();){          if(destinationArray==null)              destinationArray=new ArrayList();          destinationArray.add(enu.nextElement());        }    }      return destinationArray;}/** Setter for property destinationArray. * @param destinationArray New value of property destinationArray. * */public void setDestinationArray(java.util.ArrayList destinationArray) {    this.destinationArray = destinationArray;}long tion_cleunik;}