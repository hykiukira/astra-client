/* * SQLDate.java * * Created on 26 août 2002, 10:32 */package srcastra.astra.sys.classetransfert.utils;import java.text.DateFormat;import java.text.ParseException;import java.text.SimpleDateFormat;import java.util.*;/** * @author Sébastien */public class Date implements java.io.Serializable {////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// CONSTRUCTOR////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////     /**     * Creates a new instance of SQLDate     */    private boolean isNull=false;    private java.util.Date date;    public Date(int year, int month, int day) {        this.year = year;        this.month = month;        this.day = day;    }    public Date() {    }    public Date(String date) {        try {            transformStringToDate(date);        } catch (srcastra.astra.sys.classetransfert.utils.DateException e) {            e.printStackTrace();        }    }    public Date(java.sql.Date sqlDate) {        this(sqlDate.toString());    }    public Date(long date) {        this(new java.sql.Date(date).toString());    }    public Date(String date, boolean americanNotation) {        try {            transformAmericanStringToDate(date);        } catch (srcastra.astra.sys.classetransfert.utils.DateException e) {            e.printStackTrace();        }    }    private void transformAmericanStringToDate(String date) throws srcastra.astra.sys.classetransfert.utils.DateException {        if (date.length() == 8) {            try {                year = Integer.parseInt(date.substring(0, 4));                month = Integer.parseInt(date.substring(4, 6));                day = Integer.parseInt(date.substring(6, 8));            } catch (NumberFormatException e) {                throw new srcastra.astra.sys.classetransfert.utils.DateException("Date Exception : Unable to reas date String " + e.getMessage());            }        } else {            throw new srcastra.astra.sys.classetransfert.utils.DateException("Date Exception : Unable to read date String");        }    }////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    // => METHODE APPARENTE A LA CLASSE////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////         private void transformStringToDate(String date) throws srcastra.astra.sys.classetransfert.utils.DateException {        if (date == null || date.trim().equals("")) {            year = 0;            month = 0;            day = 0;            hours = 0;            minutes = 0;            seconds = 0;            isNull=true;            return;        }        if ((date.length() == 19 || date.length() == 21) && date.indexOf('-') == 4 && date.indexOf('-', 5) == 7 && date.indexOf(':') == 13 && date.indexOf(':', 14) == 16) {            System.out.println("date "+date);            if(date.length()==19){                SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");                try {                    this.date=formatter.parse(date);                } catch (ParseException e) {                     throw new srcastra.astra.sys.classetransfert.utils.DateException("Date Exception : Unable to read date String");                }            }            else if(date.length() == 21){              SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss.S");                try {                    this.date=formatter.parse(date);                } catch (ParseException e) {                     throw new srcastra.astra.sys.classetransfert.utils.DateException("Date Exception : Unable to read date String");                }            }            try {                year = Integer.parseInt(date.substring(0, 4));                month = Integer.parseInt(date.substring(5, 7));                day = Integer.parseInt(date.substring(8, 10));                hours = Integer.parseInt(date.substring(11, 13));                minutes = Integer.parseInt(date.substring(14, 16));                seconds = Integer.parseInt(date.substring(17, 19));            } catch (NumberFormatException e) {                throw new srcastra.astra.sys.classetransfert.utils.DateException("Date Exception : Unable to reas date String " + e.getMessage());            }        } else {            throw new srcastra.astra.sys.classetransfert.utils.DateException("Date Exception : Unable to read date String");        }    }    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// => METHODE APPARENTE A LA CLASSE////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////         public void transformStringToHour(String hour) throws srcastra.astra.sys.classetransfert.utils.DateException {        if (hour.length() == 8 && hour.indexOf(':') == 2 && hour.indexOf(':', 3) == 5) {            try {                hours = Integer.parseInt(hour.substring(0, 2));                minutes = Integer.parseInt(hour.substring(3, 5));                seconds = Integer.parseInt(hour.substring(6, 8));            } catch (NumberFormatException e) {                throw new srcastra.astra.sys.classetransfert.utils.DateException("Date Exception : Unable to reas date String " + e.getMessage());            }        } else {            throw new srcastra.astra.sys.classetransfert.utils.DateException("Date Exception : Unable to read date String");        }    }////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    // => CHAMPS DE LA CLASSE////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////     public String toString() {        String tmpmonth = "" + this.month;        if (this.month < 10)            tmpmonth = "0" + this.month;        String tmpday = "" + this.day;        if (this.day < 10)            tmpday = "0" + this.day;        String tmphours = "" + this.hours;        if (this.hours < 10)            tmphours = "0" + this.hours;        String tmpminute = "" + this.minutes;        if (this.minutes < 10)            tmpminute = "0" + this.minutes;        String tmpsecond = "" + this.seconds;        if (this.seconds < 10)            tmpsecond = "0" + this.seconds;        String tmpDate = this.year + "-" + tmpmonth + "-" + tmpday + " " + tmphours + ":" + tmpminute + ":" + tmpsecond;        return tmpDate;    }    public String toStringRequete() {        String tmpmonth = "" + this.month;        if (this.month < 10)            tmpmonth = "0" + this.month;        String tmpday = "" + this.day;        if (this.day < 10)            tmpday = "0" + this.day;        String tmphours = "" + this.hours;        if (this.hours < 10)            tmphours = "0" + this.hours;        String tmpminute = "" + this.minutes;        if (this.minutes < 10)            tmpminute = "0" + this.minutes;        String tmpsecond = "" + this.seconds;        if (this.seconds < 10)            tmpsecond = "0" + this.seconds;        String tmpDate = this.year + "-" + tmpmonth + "-" + tmpday;        return tmpDate;    }    public String toString2() {        if (isUnknow())            return "";        if (isOpen())            return "";        if (this.day == 0 && this.month == 0 && this.year == 1001)            return "";        String tmpmonth = "" + this.month;        if (this.month < 10)            tmpmonth = "0" + this.month;        String tmpday = "" + this.day;        if (this.day < 10)            tmpday = "0" + this.day;        String tmpDate = tmpday + "-" + tmpmonth + "-" + this.year;        return tmpDate;    }    public String toString3() {        if (isUnknow())            return "00000000";        if (isOpen())            return "00000000";        String tmpmonth = "" + this.month;        if (this.month < 10)            tmpmonth = "0" + this.month;        String tmpday = "" + this.day;        if (this.day < 10)            tmpday = "0" + this.day;        String tmpDate = tmpday + tmpmonth + this.year;        return tmpDate;    }////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    // => CHAMPS DE LA CLASSE////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////     public String toStringHour() {        String tmpHour = this.hours + ":" + this.minutes + ":" + this.seconds;        return tmpHour;    }////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    // => CHAMPS DE LA CLASSE////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////     protected int year;    protected int month;    protected int day;    protected int hours;    protected int minutes;    protected int seconds;////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// CHAMPS DE CLASSE GET/SET SUPPORT////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////     /**     * Getter for property day.     *     * @return Value of property day.     */    public int getDay() {        return day;    }    /**     * Setter for property day.     *     * @param day New value of property day.     */    public void setDay(int day) {        this.day = day;    }    /**     * Getter for property hours.     *     * @return Value of property hours.     */    public int getHours() {        return hours;    }    /**     * Setter for property hours.     *     * @param hours New value of property hours.     */    public void setHours(int hours) {        this.hours = hours;    }    /**     * Getter for property minutes.     *     * @return Value of property minutes.     */    public int getMinutes() {        return minutes;    }    /**     * Setter for property minutes.     *     * @param minutes New value of property minutes.     */    public void setMinutes(int minutes) {        this.minutes = minutes;    }    /**     * Getter for property month.     *     * @return Value of property month.     */    public int getMonth() {        return month;    }    /**     * Setter for property month.     *     * @param month New value of property month.     */    public void setMonth(int month) {        this.month = month;    }    /**     * Getter for property seconds.     *     * @return Value of property seconds.     */    public int getSeconds() {        return seconds;    }    /**     * Setter for property seconds.     *     * @param seconds New value of property seconds.     */    public void setSeconds(int seconds) {        this.seconds = seconds;    }    /**     * Getter for property year.     *     * @return Value of property year.     */    public int getYear() {        return year;    }    /**     * Setter for property year.     *     * @param year New value of property year.     */    public void setYear(int year) {        this.year = year;    }    public long getLongTime() {        if (timeInMilli == 0) {            Calendar c1 = Calendar.getInstance();//            c1.set(this.year, this.month, this.day, this.hours, this.minutes, this.seconds);            return c1.getTimeInMillis();        } else            return timeInMilli;    }    public void setLongTime() {        Calendar c1 = Calendar.getInstance();        this.timeInMilli = c1.getTimeInMillis();    }    long timeInMilli;    public boolean isOpen() {        return (day == 1 && month == 1 && year == 1001);    }    public boolean isUnknow() {        return (day == 1 && month == 1 && year == 1000);    }    public String getSpecString() {        if (day == 1 && month == 1 && year == 1001) return "OO-OO-OOOO";        else if (day == 1 && month == 1 && year == 1000) return "??-??-????";        else return "";    }    public boolean isNull() {        return isNull;    }    public java.util.Date getDate() {        return date;    }}