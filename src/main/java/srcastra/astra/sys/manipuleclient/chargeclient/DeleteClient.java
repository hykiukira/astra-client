/* * DeleteClient.java * * Created on 31 juillet 2002, 10:59 */package srcastra.astra.sys.manipuleclient.chargeclient;import srcastra.astra.sys.classetransfert.clients.*;import java.sql.*;import srcastra.astra.sys.rmi.utils.Poolconnection;import srcastra.astra.sys.rmi.Exception.*;import srcastra.astra.sys.Transaction;/** * * @author  thomas */public class DeleteClient  implements srcastra.astra.sys.manipuleclient.ClientConstante{        /** Creates a new instance of DeleteClient */    public DeleteClient(Poolconnection tmpool,String[] requeteClient,int cas) {          this.tmpool=tmpool;          this.cas=cas;          this.requeClient=requeteClient;    }    public void delete(int[] param) throws java.rmi.RemoteException,ServeurSqlFailure{        ResultSet r=null;            try{              PreparedStatement pstmt;             Transaction.begin(tmpool.getConuser());            switch(cas)            {                case DELETE_CLIENT:                        pstmt=tmpool.getConuser().prepareStatement("UPDATE clients SET annuler=1 WHERE cscleunik =?");                        pstmt.setInt(1,param[0]);                        pstmt.execute();                break;                   case DELETE_CLIENT_FEES:                        pstmt=tmpool.getConuser().prepareStatement(requeClient[cas]);                        pstmt.setInt(1,param[0]);                        pstmt.execute();                break;                   case DELETE_CLIENT_MULTI_AD:                        pstmt=tmpool.getConuser().prepareStatement(requeClient[cas]);                        pstmt.setInt(1,param[0]);                        pstmt.execute();                break;                  case DELETE_GROUPEMENT:                        pstmt=tmpool.getConuser().prepareStatement(requeClient[cas]);                        pstmt.setInt(1,param[0]);                        pstmt.execute();                break;             }            synchronized (tmpool.getBuffer())            {                tmpool.getBuffer().invalidateBuffer("clientDir");                 Transaction.commit(tmpool.getConuser());            }                      }  catch(SQLException se)    {        Transaction.rollback(tmpool.getConuser());                 se.printStackTrace();                 throw new ServeurSqlFailure("Erreur lors de la requête au serveur de base de donnée");            }    } private Poolconnection tmpool; private String[] requeClient; private int cas;   }