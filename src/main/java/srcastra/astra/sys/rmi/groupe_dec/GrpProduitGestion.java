/* * GrpProduitGestion.java * * Created on 26 février 2003, 10:20 */package srcastra.astra.sys.rmi.groupe_dec;import srcastra.astra.sys.rmi.groupe_dec.*;import srcastra.astra.sys.classetransfert.dossier.*;import java.sql.*;import srcastra.astra.sys.classetransfert.Grpdecision_T;import srcastra.astra.sys.rmi.astrainterface;/** * * @author  Thomas */public class GrpProduitGestion {        /** Creates a new instance of GrpProduitGestion */    public GrpProduitGestion() {    }   public static void grpdecinsert(produit_T produit,Connection con,int urcleunik,astrainterface serveur) throws SQLException{          if(produit.getGroupdec().isModifyreccord() && !produit.getGroupdec().isIsfromProduit()){                                        try{                                            ((ManageGroupeDec)serveur.renvGrpDecRmiObject(urcleunik)).insertLocale(produit.getGroupdec(),produit.getAt_cleunik(),con,produit.getTypeDeProduitCleunik(),ManageGroupeDec.TABLEPROD);                                        }catch(java.rmi.RemoteException rn){                                            rn.printStackTrace();                                           }                            }      }   public static void grpdecModify(produit_T produit,Connection con,int urcleunik,astrainterface serveur) throws SQLException{          if(produit.getGroupdec().isModifyreccord() && produit.getGroupdec().isIsfromProduit()){                                        try{                                            ((ManageGroupeDec)serveur.renvGrpDecRmiObject(urcleunik)).modifyLocale(produit.getGroupdec(),produit.getAt_cleunik(),con,produit.getTypeDeProduitCleunik(),ManageGroupeDec.TABLEPROD);                                        }catch(java.rmi.RemoteException rn){                                            rn.printStackTrace();                                           }                            }   }     public static void grpdecinsertSup(Sup_reduc_T produit,Connection con,int urcleunik,astrainterface serveur) throws SQLException{          if(produit.getGroupdec().isModifyreccord() && !produit.getGroupdec().isIsfromProduit()){                                        try{                                            ((ManageGroupeDec)serveur.renvGrpDecRmiObject(urcleunik)).insertLocale(produit.getGroupdec(),produit.getSup_reduc_cleunik(),con,0,ManageGroupeDec.TABLESUPREDUC);                                        }catch(java.rmi.RemoteException rn){                                            rn.printStackTrace();                                           }                            }      }   public static void grpdecModifySup(Sup_reduc_T produit,Connection con,int urcleunik,astrainterface serveur) throws SQLException{          if(produit.getGroupdec().isModifyreccord() && produit.getGroupdec().isIsfromProduit()){                                        try{                                            ((ManageGroupeDec)serveur.renvGrpDecRmiObject(urcleunik)).modifyLocale(produit.getGroupdec(),produit.getSup_reduc_cleunik(),con,0,ManageGroupeDec.TABLESUPREDUC);                                        }catch(java.rmi.RemoteException rn){                                            rn.printStackTrace();                                           }                            }   }   public static GrpRetValue filGrpDecToProd(astrainterface serveur,produit_T produit,Connection con,int urcleunik)throws SQLException{     try{         Grpdecision_T base;         Grpdecision_T own;         ManageGroupeDec tmp=(ManageGroupeDec)serveur.renvGrpDecRmiObject(urcleunik);         base=tmp.selectFournisseur(produit.getFrgtcleunik(),con,0);         own=tmp.selectProd(produit.getAt_cleunik(),produit.getTypeDeProduitCleunik(),con,0);         if(own==null){             try{             own=(Grpdecision_T)base.clone();                }catch(CloneNotSupportedException cn){              cn.printStackTrace();                }                   }         else             own.setIsfromProduit(true);         return new GrpRetValue(base,own);     }catch(java.rmi.RemoteException rn){            rn.printStackTrace();           }     return null;          }    public static Grpdecision_T getGrpDecForProd(long cleunik,int typeprod,int frgtcleunik,Connection con,int urcleunik,astrainterface serveur)throws SQLException{     try{         Grpdecision_T base;         Grpdecision_T own;         ManageGroupeDec tmp=(ManageGroupeDec)serveur.renvGrpDecRmiObject(urcleunik);         base=tmp.selectFournisseur(frgtcleunik,con,0);         own=tmp.selectProd(cleunik,typeprod,con,0);         if(own==null){             try{             own=(Grpdecision_T)base.clone();                }catch(CloneNotSupportedException cn){              cn.printStackTrace();                }                   }         else             own.setIsfromProduit(true);         return own;     }catch(java.rmi.RemoteException rn){            rn.printStackTrace();           }     return null;          }    public static void filGrpDecToSupReduc(astrainterface serveur,Sup_reduc_T supreduc,produit_T produit,Connection con,int urcleunik)throws SQLException{     try{         Grpdecision_T own;         ManageGroupeDec tmp=(ManageGroupeDec)serveur.renvGrpDecRmiObject(urcleunik);         own=tmp.selectSupreduc(supreduc.getSup_reduc_cleunik(),con,0);         if(own==null){             try{             supreduc.setGroupdec((Grpdecision_T)produit.getGroupdecBase().clone());                }catch(CloneNotSupportedException cn){              cn.printStackTrace();                }                   }         else{             own.setIsfromProduit(true);             supreduc.setGroupdec(own);                     }            }catch(java.rmi.RemoteException rn){            rn.printStackTrace();           }          }}