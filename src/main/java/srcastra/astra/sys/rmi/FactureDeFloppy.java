/* Classe   *FactureDeFloppy  *cree le 11 aout 2003  *by Driart  */package srcastra.astra.sys.rmi;import java.lang.Object;import srcastra.astra.sys.classetransfert.dossier.*;import srcastra.astra.sys.classetransfert.dossier.avion.*;import java.sql.*;import srcastra.astra.sys.rmi.astraimplement;import srcastra.astra.sys.rmi.utils.Poolconnection;import java.rmi.*;import srcastra.astra.sys.Transaction;import srcastra.astra.sys.Logger;import java.util.ArrayList;import java.util.Hashtable;import srcastra.astra.sys.classetransfert.utils.Date;import srcastra.astra.sys.classetransfert.utils.CalculDate;import srcastra.astra.sys.classetransfert.clients.*;import srcastra.astra.sys.classetransfert.Loginusers_T;import srcastra.astra.sys.rmi.Exception.*;import srcastra.astra.sys.produit.*;import srcastra.astra.sys.compta.*;import srcastra.astra.sys.rmi.Recherche.*;import srcastra.astra.sys.compress.CompressArray;import srcastra.astra.sys.classetransfert.*;import srcastra.astra.sys.compta.*;import srcastra.astra.gui.modules.printing.classelangueuser.*;import srcastra.astra.sys.printing.PrintingInfo;import srcastra.astra.gui.modules.printing.produit.produitInfo.*;import srcastra.astra.gui.modules.compta.achat.*;import srcastra.astra.sys.rmi.groupe_dec.*;// ajout de Driart le 11 aout 2003import java.io.*;import java.text.SimpleDateFormat;import java.text.ParseException;//end ajoutimport srcastra.astra.sys.rmi.DossierImplement;public class FactureDeFloppy implements Serializable {    //default constructor    public void FactureDeFloppy() {        this.NumFournisseur = null;        this.NumClient = null;        this.Libelle = null;        this.DateCreation = null;        this.DateEcheance = null;        this.NumPO = null;        this.DateDepart = null;        this.NomPassager = null;        this.Currency = null;        this.ValeurVente = null;        this.ValeurBase = null;        this.ValeurTVA = null;        this.CommisionTotalePO = null;        this.ValeurTotaleTaxePO = null;        this.Domiciliation = null;        this.AnnulationFacture = null;        this.RemarqueCommission = null;        this.MontantTotal = null;        this.Internetfee = null;        this.DateReception = null;        this.InvoiceType = null;    }    public FactureDeFloppy[] SetFactureDeFloppy(String fichier) {        FactureDeFloppy[] blla = null;        int i = 0;        String buffer[] = new String[1024];        try {            BufferedReader in = new BufferedReader(new FileReader(fichier));            while ((buffer[i] = in.readLine()) != null) {                if (buffer[i].length() != 0)                    System.out.println("LA FACTURE SUR LE FICHIER EST: " + buffer[i]);                i++;            }            blla = new FactureDeFloppy[i];            in.close();        } catch (IOException sn) {            System.out.println("erreur lors de la lecture ou ouvereture du fichier");        }        String[] index = new String[256];        i = 0;        int cpt = 0;        boolean  yi = false;        // rené 24/06  //      String dteth = "20110520";        while (buffer[i] != null) {            index = buffer[i].split("#");            if (index.length != 1) {                FactureDeFloppy fact = new FactureDeFloppy();                fact.NumFournisseur = index[0];                yi = false;              //if ((fact.NumFournisseur.compareTo("1067")== 0) || (fact.NumFournisseur.compareTo("7113")== 0) || (fact.NumFournisseur.compareTo("7114")== 0)) {              if (fact.NumFournisseur.compareTo("1067")== 0) {                  yi = true;              }              if (fact.NumFournisseur.compareTo("9876")== 0) {                  yi = true;              }               if (fact.NumFournisseur.compareTo("7113")== 0) {                  yi = true;              }               if (fact.NumFournisseur.compareTo("7114")== 0) {                  yi = true;              }               if (yi = true) {                fact.NumClient = index[1];                String lib=index[2];                fact.Libelle=lib.replaceAll(" ","0");                //fact.Libelle = index[2];                Date d3 = CalculDate.getTodayDate();                fact.DateCreation = index[22];                fact.DateEcheance = index[4];                fact.NumPO = index[5];                String dt = "20110517";                String pattern = "yyyyMMdd" ;                java.util.Date datec = new java.util.Date();                java.util.Date datef = new java.util.Date();                /* Parsing String -> Date */                try {                    datec = (new SimpleDateFormat( pattern)) .parse( fact.DateCreation ) ;                    datef = (new SimpleDateFormat( pattern )).parse( dt ) ;                    } catch ( ParseException ex ) {                    System.err.println( ex.getMessage() ) ;                    }                if (fact.NumFournisseur.compareTo("1067") == 0 || fact.NumFournisseur.compareTo("9876") == 0) {                    //fact.NumPO=fact.NumPO.replace('A',);                    if (fact.NumPO.charAt(0) == 'A') {                        //if (fact.DateCreation.compareTo("20110615") == -1)                        if (datec.compareTo( datef) == -1)                            fact.NumPO = fact.NumPO.substring(1, fact.NumPO.length());                    }                    while (fact.NumPO.charAt(0) == '0')                        fact.NumPO = fact.NumPO.substring(1, fact.NumPO.length());                    fact.NumClient = fact.NumClient.substring(1, fact.NumClient.length());                }                if (fact.NumFournisseur.compareTo("7113") == 0) {                    fact.NumPO= "0" + fact.NumPO;                }   //             if (fact.NumFournisseur.compareTo("7114") == 0) {  //                  fact.NumPO= "0" + fact.NumPO;  //              }                fact.DateDepart = index[6];                fact.NomPassager = index[7];                fact.Currency = index[8];                fact.ValeurVente = index[9];                if (fact.ValeurVente.compareTo("_") == 0)                    fact.ValeurVente = "0";                if (fact.ValeurVente.charAt(fact.ValeurVente.length() - 1) == '-')                    fact.ValeurVente = "-" + fact.ValeurVente.substring(0, fact.ValeurVente.length() - 1);                fact.ValeurBase = index[10];                if (fact.ValeurBase.compareTo("_") == 0)                    fact.ValeurBase = "0";                if (fact.ValeurBase.charAt(fact.ValeurBase.length() - 1) == '-')                    fact.ValeurBase = "-" + fact.ValeurBase.substring(0, fact.ValeurBase.length() - 1);                fact.ValeurTVA = index[11];                if (fact.ValeurTVA.compareTo("_") == 0)                    fact.ValeurTVA = "0";                if (fact.ValeurTVA.charAt(fact.ValeurTVA.length() - 1) == '-')                    fact.ValeurTVA = "-" + fact.ValeurTVA.substring(0, fact.ValeurTVA.length() - 1);                fact.CommisionTotalePO = index[12];                if (fact.CommisionTotalePO.compareTo("_") == 0)                    fact.CommisionTotalePO = "0";                if (fact.CommisionTotalePO.charAt(fact.CommisionTotalePO.length() - 1) == '-')                    fact.CommisionTotalePO = "-" + fact.CommisionTotalePO.substring(0, fact.CommisionTotalePO.length() - 1);                fact.ValeurTotaleTaxePO = index[13];                if (fact.ValeurTotaleTaxePO.compareTo("_") == 0)                    fact.ValeurTotaleTaxePO = "0";                if (fact.ValeurTotaleTaxePO.charAt(fact.ValeurTotaleTaxePO.length() - 1) == '-')                    fact.ValeurTotaleTaxePO = "-" + fact.ValeurTotaleTaxePO.substring(0, ValeurTotaleTaxePO.length() - 1);                fact.Domiciliation = index[14];                fact.AnnulationFacture = index[15];                System.out.println("Length = " + index[0].length());                // uniquement dans le cas de jetair                if (index.length == 17)                    fact.RemarqueCommission = index[16];                else fact.RemarqueCommission = null;                if (index.length == 18)                    fact.MontantTotal = index[17];                else fact.MontantTotal = null;                fact.InvoiceType = index[19];                System.out.println("LA FACTURE LUE EST: " + fact.NumFournisseur + " "                        + fact.NumClient + " "                        + fact.Libelle + " "                        + fact.DateCreation + " "                        + fact.DateEcheance + " "                        + fact.NumPO + " "                        + fact.DateDepart + " "                        + fact.NomPassager + " "                        + fact.Currency + " "                        + fact.ValeurVente + " "                        + fact.ValeurBase + " "                        + fact.ValeurTVA + " "                        + fact.CommisionTotalePO + " "                        + fact.ValeurTotaleTaxePO + " "                        + fact.Domiciliation + " "                        + fact.AnnulationFacture + " "                        + fact.RemarqueCommission + " (POUR JETAIR) "                        + fact.MontantTotal + " "                        + fact.Internetfee + " "                        + fact.InvoiceType );                blla[cpt] = fact;                cpt++;            }            }            i++;        }        return blla;    }    public boolean isAcompte() {        if (Double.parseDouble(transfom(this.ValeurTVA)) == 0d && Double.parseDouble(transfom(this.CommisionTotalePO)) == 0d)            return false;        return true;    }    public boolean isCredit() {        if (Double.parseDouble(transfom(this.ValeurBase)) < 0d)            return true;        return false;    }    private String transfom(String amount) {        int i = amount.indexOf("-");        if (i != -1) {            if (i != 0) {                System.out.println("amount before replace " + amount);                amount = amount.substring(0, i);                System.out.println("amount after replace " + amount);                Double tmp = new Double(amount);                double tmp2 = -tmp.doubleValue();                System.out.println("amount after replace with sign" + new Double(tmp2).toString());                return new Double(tmp2).toString();            }        }        return amount;    }    protected String NumFournisseur = new String();    protected String NumClient = new String();    protected String Libelle = new String();    protected String DateCreation = new String();    protected String DateEcheance = new String();    protected String NumPO = new String();    protected String DateDepart = new String();    protected String NomPassager = new String();    protected String Currency = new String();    protected String ValeurVente = new String();    protected String ValeurBase = new String();    protected String ValeurTVA = new String();    protected String CommisionTotalePO = new String();    protected String ValeurTotaleTaxePO = new String();    protected String Domiciliation = new String();    protected String AnnulationFacture = new String();    protected String RemarqueCommission = new String();    protected String DateReception = new String();    protected String MontantTotal = new String();   //pour Jetair    protected String Internetfee = new String();        protected String InvoiceType = new String();}