/* * DossierRechercheByNumdos.java * * Created on 2 december 2002, 14:58 */package srcastra.astra.sys.rmi.Recherche;import srcastra.astra.sys.classetransfert.dossier.*;import srcastra.astra.sys.classetransfert.dossier.avion.*;import java.sql.*;import srcastra.astra.sys.rmi.astraimplement;import srcastra.astra.sys.rmi.utils.Poolconnection;import java.rmi.*;import srcastra.astra.sys.Transaction;import srcastra.astra.sys.Logger;import java.util.ArrayList;import java.util.Hashtable;import srcastra.astra.sys.classetransfert.utils.Date;import srcastra.astra.sys.classetransfert.clients.*;import srcastra.astra.sys.classetransfert.Loginusers_T;import srcastra.astra.sys.rmi.Exception.*; import srcastra.astra.sys.produit.*;import srcastra.astra.sys.compta.*;import srcastra.astra.sys.rmi.*;  import srcastra.astra.sys.compress.*;/** * * @author  Thomas */public class DossierRechercheByPo extends DossierRecherche implements InterfaceRecherche  {    /** Creates a new instance of DossierRechercheByNumdos */    public DossierRechercheByPo(astraimplement serveur2) {        super(serveur2);    }        public ArrayList chargeDossierRecherche(Loginusers_T currentUser, int cleRecherche, String numdos,Poolconnection tmpool,int cas) throws SQLException,RemoteException{        //  Poolconnection tmpool=serveur2.getConnectionAndCheck(currentUser.getUrcleunik(),true);     Dossier_T dossier;     System.out.println("[WAAAAAAAAAAAAAAAAAAAAAAZZZZZAAAAAAAAAAAAAAAAAA**************]je rentre dans chargedossier");     ArrayList returnvalue=new ArrayList();     String requetebro="SELECT dr_cleunik  FROM brochure WHERE bro_po LIKE(CONCAT(?,'%'));";      String requeteavion="SELECT dr_cleunik  FROM avion_ticket WHERE at_num_billet  LIKE(CONCAT(?,'%'));";      String requetehotel="SELECT dr_cleunik  FROM hotel WHERE hl_pnr LIKE(CONCAT(?,'%'));";      System.out.println("numdos"+numdos);     CompressArray myArray=null;     boolean sw=false;      myArray=new CompressArray();     try{          /*  PreparedStatement pstmt=tmpool.getConuser().prepareStatement(requetebro);            pstmt.setString(1,numdos);            ResultSet bro=pstmt.executeQuery();            bro.last();            int ligneBro=bro.getRow();            //            pstmt=tmpool.getConuser().prepareStatement(requeteavion);            pstmt.setString(1,numdos);            ResultSet av=pstmt.executeQuery();            av.last();            int ligneAv=av.getRow();            //            pstmt=tmpool.getConuser().prepareStatement(requetehotel);            pstmt.setString(1,numdos);            ResultSet ho=pstmt.executeQuery();            ho.last();            int ligneHo=ho.getRow();            long[] cle=new long[ligneBro+ligneAv+ligneHo];           // int[] cleAv=new int[ligneAv];            //int[] cleHo=new int[ligneHo];            int k=0;            //            bro.beforeFirst();            while(bro.next()){                cle[k]=bro.getLong(1);                k++;                sw=true;            }            //            av.beforeFirst();            while(av.next()){                cle[k]=av.getLong(1);                k++;                sw=true;            }            //            ho.beforeFirst();            while(ho.next()){                cle[k]=ho.getLong(1);                k++;                sw=true;            }            if(sw){            String chaine=" IN(";            String chaine2="";            String chaine3="";            for(int i=0;i<cle.length;i++){                if(i!=cle.length-1)                    chaine2=chaine2+cle[i]+",";                else                     chaine2=chaine2+cle[i];            }            chaine3=chaine+chaine2+") ";            String requetedossier="SELECT d.dr_cleunik,d.dr_numdos,d.dr_date_depart,d.po,d.destination,d.hotel,d.dr_status,d.client,d.fournisseur,d.dr_totalprix FROM dossier d,user u WHERE  d.urcleunik=u.urcleunik AND  u.eecleunik=? AND dr_annull=0 AND d.dr_cleunik"+chaine3+"ORDER by dr_numdos";            System.out.println("requete: "+requetedossier);*/            String requetedossier="SELECT d.dr_cleunik,d.dr_numdos,d.dr_date_depart,d.po,d.destination,d.hotel,d.dr_status,d.client,d.fournisseur,d.dr_totalprix,d.dr_facture, d.dr_paye FROM dossier d,user u WHERE  d.urcleunik=u.urcleunik AND  u.eecleunik=? AND dr_annull=0 AND d. po LIKE(CONCAT(?,'%')) ORDER by dr_numdos";            PreparedStatement pstmt=tmpool.getConuser().prepareStatement(requetedossier);            pstmt.setInt(1,currentUser.getUreecleunik());            pstmt.setString(2,numdos);            ResultSet resultDossier=pstmt.executeQuery();            myArray.Compress_from_resulset(resultDossier);                   }catch(SQLException se){         se.printStackTrace();           Transaction.rollback(tmpool.getConuser());       }              return myArray;    }        public ArrayList chargeDossierRecherche(Loginusers_T currentUser, int cleRecherche, String numdos, Poolconnection tmpool, int cas, String numfact, String numnc, String numfactfourn, int nonfacture, ArrayList order) throws SQLException, RemoteException {        return null;    }        }