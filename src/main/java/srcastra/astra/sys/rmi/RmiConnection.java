/* * RmiConnection.java * * Created on 8 mars 2002, 15:30 */package srcastra.astra.sys.rmi;import java.rmi.*;import java.rmi.NotBoundException;import java.rmi.registry.*;import java.io.*;import java.sql.*;import java.util.*;import srcastra.astra.sys.classetransfert.* ;import srcastra.astra.gui.sys.ErreurScreenLibrary;import java.net.*;/** * * @author  Sébastien * @version  */ public class RmiConnection {    private String host = "";    private String rmiObjectName="";    private Registry repertoire;    private astrainterface serveur;    private String version;        /** Creates new RmiConnection */    int port;    public RmiConnection(String host,String port) {        this.port=new Integer(port).intValue();        this.host = host;      /*    try{        InetAddress adres=InetAddress.getByName("perforinco.no-ip.info");        this.host=adres.getHostAddress();       // host="192.168.1.62";       //  host="195.144.70.242";        System.out.println("adresse "+this.host);        }catch(java.net.UnknownHostException un){            un.printStackTrace();        }*/    }    public boolean connect() {        try {            repertoire = (Registry) LocateRegistry.getRegistry(host,port,srcastra.astra.sys.rmi.socketfactory.SSLClientSocketFactory.getClientFactory());            System.out.println("Oki je suis dans le bon ");            //repertoire = (Registry) LocateRegistry.getRegistry(this.host,Registry.REGISTRY_PORT);            serveur = (astrainterface) repertoire.lookup(this.rmiObjectName);            return true;        }        catch (RemoteException re) {            System.out.println("yoy yoy");            re.printStackTrace();            ErreurScreenLibrary.displayErreur(null, ErreurScreenLibrary.REMOTE_EXCEPTION, srcastra.astra.Astra.DEBUG, re);            return false;        }        catch (NotBoundException nbe) {            System.out.println("yoy yoy not bound");            System.out.println(nbe);            return false;        }    }        public astrainterface getServeur() {        return serveur;    }    /** Getter for property rmiObjectName.     * @return Value of property rmiObjectName.     */    public java.lang.String getRmiObjectName() {        return rmiObjectName;    }        /** Setter for property rmiObjectName.     * @param rmiObjectName New value of property rmiObjectName.     */    public void setRmiObjectName(java.lang.String rmiObjectName) {        this.rmiObjectName = rmiObjectName;    }            /** Getter for property version.     * @return Value of property version.     *     */    public java.lang.String getVersion() {        return version;    }        /** Setter for property version.     * @param version New value of property version.     *     */    public void setVersion(java.lang.String version) {        this.version = version;    }      }