/* * GenereLigneComptable.java * * Created on 17 octobre 2002, 17:15 */package srcastra.astra.sys.compta;import srcastra.astra.sys.classetransfert.dossier.avion.*;import srcastra.astra.sys.classetransfert.dossier.*;import java.sql.*;import java.util.ArrayList;import java.util.Hashtable;import java.util.Enumeration;import srcastra.astra.sys.rmi.*;import srcastra.astra.sys.classetransfert.utils.Date;import srcastra.astra.sys.classetransfert.*;import srcastra.astra.sys.rmi.astrainterface;import java.text.NumberFormat;/** * * @author  Thomas */public class GenereLigneComptable implements DossierSql{        /** Creates a new instance of GenereLigneComptable */    astraimplement m_serveur;    public GenereLigneComptable(astraimplement serveur) {        m_serveur=serveur;        }    public static void insertLigneComptable(InterfaceProduit produit,Connection con,double cledossier,PreparedStatement pstmt,float codetva,long lignecleunik,long sn_cleunik,long intervenantCleunik,int ce_cleunik,int cate_cleunik)throws SQLException{       NumberFormat form=NumberFormat.getInstance();       //form.setMaximumFractionDigits(2);       //form.setMaximumFractionDigits(2);        //form.set       pstmt=con.prepareStatement(INSERT_LIGNE_COMPTA);       pstmt.setInt(1,0);       pstmt.setDouble(2,produit.getValeur_tot_tva_inc());       pstmt.setFloat(3,codetva);       pstmt.setDouble(4,produit.getValeur_tot());       pstmt.setDouble(5,produit.getMontant_tva());       pstmt.setDouble(6,cledossier);       pstmt.setLong(7,lignecleunik);       pstmt.setLong(8,sn_cleunik);       pstmt.setLong(9,produit.getTypeDeProduitCleunik());       pstmt.setInt(10,1);       pstmt.setLong(11,intervenantCleunik);       pstmt.setInt(12,ce_cleunik);       pstmt.setInt(13,cate_cleunik);       pstmt.setString(14,"O");       pstmt.setString(15,"D");       pstmt.execute();      //INSERT INTO historique2 //(henotcpt,hedatecreation,hevaleur,hecodetva,hevaleurbase,hevaleurtva,drcleunik,lignecleunik,//sn_cleunik,ctprocleunik,typeintervenantcleunik,intervenantcleunik) //values(?,NOW(),?,?,?,?,?,?,?,?,?,?);            }     public void insertLigneComptable(InterfaceProduit produit,Connection con,double cledossier,PreparedStatement pstmt,float codetva,long lignecleunik,long sn_cleunik,long intervenantCleunik,int ce_cleunik,int cate_cleunik,boolean sw)throws SQLException{       NumberFormat form=NumberFormat.getInstance();       //form.setMaximumFractionDigits(2);       //form.setMaximumFractionDigits(2);        //form.set       pstmt=con.prepareStatement(INSERT_LIGNE_COMPTA);       pstmt.setInt(1,0);       if(sw){        pstmt.setDouble(2,-produit.getValeur_tot_tva_inc());        pstmt.setDouble(4,-produit.getValeur_tot());        pstmt.setDouble(5,-produit.getMontant_tva());       }       else{        pstmt.setDouble(2,produit.getValeur_tot_tva_inc());        pstmt.setDouble(4,produit.getValeur_tot());        pstmt.setDouble(5,produit.getMontant_tva());         }       pstmt.setFloat(3,codetva);             pstmt.setDouble(6,cledossier);       pstmt.setLong(7,lignecleunik);       pstmt.setLong(8,sn_cleunik);       pstmt.setLong(9,produit.getTypeDeProduitCleunik());       pstmt.setInt(10,1);       pstmt.setLong(11,intervenantCleunik);       String tmp="";//m_serveur.getCompte( ce_cleunik);       pstmt.setString(12,tmp);       pstmt.setInt(13,cate_cleunik);       pstmt.setString(14,"O");       pstmt.setString(15,"D");       pstmt.execute();      //INSERT INTO historique2 //(henotcpt,hedatecreation,hevaleur,hecodetva,hevaleurbase,hevaleurtva,drcleunik,lignecleunik,//sn_cleunik,ctprocleunik,typeintervenantcleunik,intervenantcleunik) //values(?,NOW(),?,?,?,?,?,?,?,?,?,?);            }         public static void insertLigneComptableDossier(Dossier_T dossier,Connection con,PreparedStatement pstmt,long intervenantCleunik,int ce_cleunik,int cate_cleunik,int cleuser)throws SQLException{       NumberFormat form=NumberFormat.getInstance();       form.setMaximumFractionDigits(2);       form.setMaximumFractionDigits(2);       pstmt=con.prepareStatement("INSERT INTO historique2 (henotcpt,hedatecreation,hevaleur,hecodetva,hevaleurbase,hevaleurtva,drcleunik,lignecleunik,sn_cleunik,ctprocleunik,typeintervenantcleunik,intervenantcleunik,ce_cleunik,cate_cleunik,hedossiercourant,hetypeligne) values(?,NOW(),?,?,?,?,?,?,?,?,?,?,?,?,?,?);");       pstmt.setInt(1,0);       //pstmt.setFloat(2,new Float(dossier.getDrtotalprix()).floatValue());       pstmt.setFloat(2,new Float(dossier.getDrtotalprix()).floatValue());       pstmt.setDouble(3,0);       //pstmt.setFloat(4,new Float(dossier.getDrprix()).floatValue());       pstmt.setFloat(4,new Float(dossier.getDrprix()).floatValue());       pstmt.setFloat(5,new Float(dossier.getDrtva()).floatValue());       pstmt.setDouble(6,dossier.getDrcleunik());       pstmt.setLong(7,0);       pstmt.setLong(8,0);       pstmt.setLong(9,0);       pstmt.setInt(10,1);       pstmt.setLong(11,dossier.getClientContractuel().getCscleunik());       //String compte=m_serveur.getCompte(dossier.getClientContractuel().getCs       pstmt.setString(12,"4000000000000");       pstmt.setInt(13,1);       pstmt.setString(14,"O");       pstmt.setString(15,"B");       pstmt.execute();         if(dossier.getPayement()!=null)       {           java.util.TreeMap treemap=dossier.getPayement();           java.util.Set set=treemap.keySet();           java.util.Iterator iterator=set.iterator();           while(iterator.hasNext())          {           Payement_T lpayement=(Payement_T)treemap.get((Long)iterator.next());           if(lpayement.isNewreccord()){               pstmt=con.prepareStatement("INSERT INTO historique2 (henotcpt,hedatecreation,hevaleur,hecodetva,hevaleurbase,hevaleurtva,drcleunik,lignecleunik,sn_cleunik,ctprocleunik,typeintervenantcleunik,intervenantcleunik,urcleunik,ce_cleunik,cate_cleunik,hetypepayement,hetypeligne ) values(?,NOW(),?,?,?,?,?,?,?,?,?,?,?,?,?,?,?);");               pstmt.setInt(1,1);               //pstmt.setFloat(2,new Float(dossier.getDrtotalprix()).floatValue());               pstmt.setFloat(2,new Float(lpayement.getPrix()).floatValue());               pstmt.setDouble(3,0);               //pstmt.setFloat(4,new Float(dossier.getDrprix()).floatValue());               pstmt.setFloat(4,0);               pstmt.setFloat(5,0);               pstmt.setDouble(6,dossier.getDrcleunik());               pstmt.setLong(7,0);               pstmt.setLong(8,0);               pstmt.setLong(9,0);               pstmt.setInt(10,1);               pstmt.setLong(11,dossier.getClientContractuel().getCscleunik());               pstmt.setInt(12,cleuser);               String compte;               if(dossier.getDr_type_payement()==2)                   compte="550000000000";               else                   compte="570000000000";               int catecompte=6;               pstmt.setString(13,compte);               pstmt.setInt(14,catecompte);               pstmt.setInt(15,lpayement.getM_typepayement());               pstmt.setString(16,"P");               pstmt.execute();             pstmt.setInt(1,1);           //pstmt.setFloat(2,new Float(dossier.getDrtotalprix()).floatValue());           pstmt.setFloat(2,new Float(-lpayement.getPrix()).floatValue());           pstmt.setDouble(3,0);           //pstmt.setFloat(4,new Float(dossier.getDrprix()).floatValue());           pstmt.setFloat(4,0);           pstmt.setFloat(5,0);           pstmt.setDouble(6,dossier.getDrcleunik());           pstmt.setLong(7,0);           pstmt.setLong(8,0);           pstmt.setLong(9,0);           pstmt.setInt(10,1);           pstmt.setLong(11,dossier.getClientContractuel().getCscleunik());           pstmt.setInt(12,cleuser);                 pstmt.setString(13,"400000000000");           pstmt.setInt(14,catecompte);           pstmt.setInt(15,lpayement.getM_typepayement());           pstmt.setString(16,"CP");           pstmt.execute();            //  retVal[0] = new AString(1, "Carte de Crédit");            //retVal[1] = new AString(2, "Cash");            //retVal[2] = new AString(3, "Virement");           //INSERT INTO historique2 (henotcpt,hedatecreation,hevaleur,hecodetva,hevaleurbase,           //hevaleurtva,drcleunik,lignecleunik,sn_cleunik,ctprocleunik,typeintervenantcleunik,           //intervenantcleunik,ce_cleunik,cate_cleunik) values(?,NOW(),?,?,?,?,?,?,?,?,?,?,?,?);";                      }           }         /*  if(dossier.getFraisDossier()!=null){               for(Enumeration enum2=dossier.getFraisDossier().keys();enum2.hasMoreElements();){                   Frais_T frais=(Frais_T)enum2.nextElement();                   //INSERT INTO historique2 (henotcpt,hedatecreation,hevaleur,hecodetva,hevaleurbase,hevaleurtva,drcleunik,lignecleunik,                   //sn_cleunik,ctprocleunik,typeintervenantcleunik,intervenantcleunik,urcleunik,ce_cleunik,cate_cleunik,hetypepayement,hetypeligne )                    //values(?,NOW(),?,?,?,?,?,?,?,?,?,?,?,?,?,?,?);");                    pstmt=con.prepareStatement("INSERT INTO historique2 (henotcpt,hedatecreation,hevaleur,hecodetva,hevaleurbase,hevaleurtva,drcleunik,lignecleunik,sn_cleunik,ctprocleunik,typeintervenantcleunik,intervenantcleunik,urcleunik,ce_cleunik,cate_cleunik,hetypepayement,hetypeligne ) values(?,NOW(),?,?,?,?,?,?,?,?,?,?,?,?,?,?,?);");                    pstmt.setInt(1,1);                    pstmt.setDouble(2,frais.getFrais_annulation());                    pstmt.setFloat(3,0);                    pstmt.setDouble(4,frais.getFrais_annulation());                    pstmt.setDouble(5,0);                    pstmt.setLong(6,dossier.getDrcleunik());                    pstmt.setLong(7,0);                    pstmt.setLong(8,0);                    pstmt.setInt(9,0);                    pstmt.setInt(10,0);                    pstmt.setInt(11,0);                    pstmt.setInt(12,0);                    pstmt.setInt(13,0);                    pstmt.setInt(14,0);                    pstmt.setInt(15,0);                    pstmt.setString(16,"F");                    pstmt.execute();                                  }                                         }*/                             }//INSERT INTO historique2 //(henotcpt,hedatecreation,hevaleur,hecodetva,hevaleurbase,hevaleurtva,drcleunik,lignecleunik,//sn_cleunik,ctprocleunik,typeintervenantcleunik,intervenantcleunik) //values(?,NOW(),?,?,?,?,?,?,?,?,?,?);            }     public static void insertLigneComptableFraisDossier(produit_T produit,Dossier_T dossier,Connection con,PreparedStatement pstmt,int ce_cleunik,int cate_cleunik,int cleuser)throws SQLException{                    Frais_T frais=(Frais_T)produit;                   //INSERT INTO historique2 (henotcpt,hedatecreation,hevaleur,hecodetva,hevaleurbase,hevaleurtva,drcleunik,lignecleunik,                   //sn_cleunik,ctprocleunik,typeintervenantcleunik,intervenantcleunik,urcleunik,ce_cleunik,cate_cleunik,hetypepayement,hetypeligne )                    //values(?,NOW(),?,?,?,?,?,?,?,?,?,?,?,?,?,?,?);");                    pstmt=con.prepareStatement("INSERT INTO historique2 (henotcpt,hedatecreation,hevaleur,hecodetva,hevaleurbase,hevaleurtva,drcleunik,lignecleunik,sn_cleunik,ctprocleunik,typeintervenantcleunik,intervenantcleunik,urcleunik,ce_cleunik,cate_cleunik,hetypepayement,hetypeligne ) values(?,NOW(),?,?,?,?,?,?,?,?,?,?,?,?,?,?,?);");                    pstmt.setInt(1,1);                    pstmt.setDouble(2,frais.getFrais_annulation());                    pstmt.setFloat(3,0);                    pstmt.setDouble(4,frais.getFrais_annulation());                    pstmt.setDouble(5,0);                    pstmt.setLong(6,dossier.getDrcleunik());                    pstmt.setLong(7,frais.getCleunik());                    pstmt.setLong(8,0);                    pstmt.setInt(9,20);                    pstmt.setInt(10,0);                    pstmt.setInt(11,0);                    pstmt.setInt(12,0);                    pstmt.setInt(13,0);                    pstmt.setInt(14,0);                    pstmt.setInt(15,0);                    pstmt.setString(16,"F");                    pstmt.execute();                 }     public  void noteDeCrédit(Dossier_T dossier,Connection con,PreparedStatement pstmt)throws SQLException{         pstmt=con.prepareStatement(ANNUL_HISTORIQUE_DOSSIER);         pstmt.setInt(1,dossier.getDrcleunik());         pstmt.execute();        // "SELECT  hecleunik,henotcpt,hedatecreation,hevaleur,hecodetva,hevaleurbase,hevaleurtva,drcleunik,lignecleunik,sn_cleunik,ctprocleunik,typeintervenantcleunik,intervenantcleunik,ce_cleunik,cate_cleunik,hetypeligne as typeligne  FROM historique2 WHERE hetypeligne!='P' AND hedossiercourant='O' AND drcleunik=?";                     pstmt=con.prepareStatement("SELECT  hecleunik,henotcpt,hedatecreation,hevaleur,hecodetva,hevaleurbase,hevaleurtva,drcleunik,lignecleunik,sn_cleunik,ctprocleunik,typeintervenantcleunik,intervenantcleunik,ce_cleunik,cate_cleunik,hetypeligne as typeligne  FROM historique2 WHERE hetypeligne!='P' AND hedossiercourant='O' AND drcleunik=?");         pstmt.setInt(1,dossier.getDrcleunik());         ResultSet result=pstmt.executeQuery();         result.beforeFirst();         ArrayList array=new ArrayList();         while (result.next()){            GenereLigneComptable.I_ligneComptable tmp= new GenereLigneComptable.I_ligneComptable(   result.getObject(2),result.getObject(4),result.getObject(5),                                                                    result.getObject(6),result.getObject(7),result.getObject(8),                                                                    result.getObject(9),result.getObject(10),result.getObject(11),                                                                    result.getObject(12),result.getObject(13),result.getObject(14),result.getObject(15),result.getObject("typeligne"));           array.add(tmp);                              insertLigneNoteCrédit(tmp,con,pstmt);         }        /*   for(int i=0;i<array.size();i++){           GenereLigneComptable.I_ligneComptable ligne=(GenereLigneComptable.I_ligneComptable)array.get(i);           result.moveToInsertRow();           result.updateInt(2,ligne.m_henotcpt.intValue());           result.updateInt(3,0);           result.updateDouble(4,ligne.m_hevaleur.doubleValue());           result.updateFloat(5,ligne.m_hecodetva.floatValue());           result.updateDouble(6,ligne.m_heValeurBase.doubleValue());           result.updateDouble(7,ligne.m_heValeurTva.doubleValue());           result.updateLong(8,ligne.m_drCleunik.longValue());           result.updateLong(9,ligne.m_lecleunik.longValue());           result.updateLong(10,ligne.m_sn_cleunik.longValue());           result.updateInt(11,ligne.m_ct_cleunik.intValue());           result.updateInt(12,ligne.m_typeIntervenant.intValue());           result.updateInt(13,ligne.m_intervenantCleunik.intValue());           result.updateInt(14,ligne.m_ce_cleunik.intValue());           result.updateInt(15,ligne.m_cate_cleunik.intValue());           result.insertRow();                   }*/                          // "SELECT  hecleunik,henotcpt,hedatecreation,hevaleur,hecodetva,hevaleurbase,        // hevaleurtva,drcleunik,lignecleunik,sn_cleunik,ctprocleunik,typeintervenantcleunik,        // intervenantcleunik,ce_cleunik,cate_cleunik FROM historique2 WHERE drcleunik=?";                 }      private static void insertLigneNoteCrédit(GenereLigneComptable.I_ligneComptable ligne,Connection con,PreparedStatement pstmt)throws SQLException{          pstmt=con.prepareStatement(INSERT_LIGNE_COMPTA);           pstmt.setInt(1,0);           pstmt.setFloat(2,new Float(ligne.m_hevaleur.doubleValue()).floatValue());           pstmt.setFloat(3,new Float(ligne.m_hecodetva.doubleValue()).floatValue());           pstmt.setFloat(4,new Float(ligne.m_heValeurBase.doubleValue()).floatValue());           pstmt.setFloat(5,new Float(ligne.m_heValeurTva.doubleValue()).floatValue());           pstmt.setDouble(6,ligne.m_drCleunik.doubleValue());           pstmt.setLong(7,ligne.m_lecleunik.longValue());           pstmt.setLong(8,ligne.m_sn_cleunik.longValue());           pstmt.setLong(9,ligne.m_ct_cleunik.longValue());           pstmt.setInt(10,ligne.m_typeIntervenant.intValue());           pstmt.setLong(11,ligne.m_intervenantCleunik.longValue());           pstmt.setInt(12,ligne.m_ce_cleunik.intValue());           pstmt.setInt(13,ligne.m_cate_cleunik.intValue());           pstmt.setString(14,"N");           pstmt.setString(15,"NC");           pstmt.execute();            }     public void updateLigneComptable(InterfaceProduit produit,Connection con,int cledossier,PreparedStatement pstmt,float codetva,long lignecleunik,long sn_cleunik,long intervenantCleunik,int ce_cleunik,int cate_cleunik)throws SQLException{       pstmt=con.prepareStatement(MODIF_LIGNE_COMPTA);       pstmt.setDouble(1,produit.getValeur_tot_tva_inc());       pstmt.setFloat(2,codetva);       pstmt.setDouble(3,produit.getValeur_tot());       pstmt.setDouble(4,produit.getMontant_tva());                 pstmt.setLong(5,intervenantCleunik);       pstmt.setInt(6,ce_cleunik);       pstmt.setInt(7,cate_cleunik);       pstmt.setLong(8,lignecleunik);        pstmt.setLong(9,sn_cleunik);       pstmt.setLong(10,cledossier);       pstmt.executeUpdate();            }     public void updateLigneComptableDossier(Dossier_T dossier,Connection con,PreparedStatement pstmt, int ce_cleunik,int cate_cleunik)throws SQLException{       pstmt=con.prepareStatement(MODIF_LIGNE_COMPTA);       pstmt.setFloat(1,new Float(dossier.getDrtotalprix()).floatValue());       pstmt.setFloat(2,0);       pstmt.setFloat(3,new Float(dossier.getDrprix()).floatValue());       pstmt.setFloat(4,new Float(dossier.getDrtva()).floatValue());                 pstmt.setLong(5,dossier.getClientContractuel().getCscleunik());       pstmt.setInt(6,ce_cleunik);       pstmt.setInt(7,cate_cleunik);       pstmt.setLong(8,0);        pstmt.setLong(9,0);       pstmt.setLong(10,dossier.getDrcleunik());       pstmt.executeUpdate();            }     public class I_ligneComptable{         public I_ligneComptable( Object henotcpt,Object hevaleur,Object hecodetva,Object heValeurBase,Object heValeurTva,Object drCleunik,                                Object lecleunik,Object sn_cleunik,Object ct_cleunik,Object typeIntervenant,Object intervenantCleunik,                                Object ce_cleunik,Object cate_cleunik,Object he_dossier_lignetype){                                             m_henotcpt=(Integer)henotcpt;           m_hevaleur=new Double(-((Double)hevaleur).doubleValue());           m_hecodetva=(Float)hecodetva;           m_heValeurBase=new Double(-((Double)heValeurBase).doubleValue());           m_heValeurTva=new Double(-((Double)heValeurTva).doubleValue());           m_drCleunik=(Long)drCleunik;           m_lecleunik=(Long)lecleunik;           m_sn_cleunik=(Long)sn_cleunik;           m_ct_cleunik=(Integer)ct_cleunik;           m_typeIntervenant=(Integer)typeIntervenant;           m_intervenantCleunik=(Integer)intervenantCleunik;           m_ce_cleunik=(Integer)ce_cleunik;           m_cate_cleunik=(Integer)cate_cleunik;           m_he_dossier_lignetype=he_dossier_lignetype.toString();         }         public Integer m_henotcpt;        public Double m_hevaleur;        public Float m_hecodetva;        public Double m_heValeurBase;        public Double m_heValeurTva;        public Long m_drCleunik;        public Long m_lecleunik;        public Long m_sn_cleunik;        public Integer m_ct_cleunik;        public Integer m_typeIntervenant;        public Integer m_intervenantCleunik;           public Integer m_ce_cleunik;        public Integer m_cate_cleunik;        public String  m_he_dossier_courant;        public String m_he_dossier_lignetype;     }      /*    public static void chargeLigneComptableDossier(Dossier_T dossier,Connection con,PreparedStatement pstmt,long intervenantCleunik,int ce_cleunik,int cate_cleunik)throws SQLException{        pstmt=con.prepareStatement(CHARGE_LIGNE_COMPTA);        pstmt.setInt(dossier.getDrcleunik());        ResultSet result=pstmt.executeQuery();        result.beforeFirst();        while(result.next()){            GenereLigneComptable.I_ligneComptable tmp=new GenereLigneComptable.I_ligneComptable(                           }     }*/     }