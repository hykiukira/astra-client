/* * ServeurConnect.java * * Created on 7 novembre 2002, 12:11 */package srcastra.test;import srcastra.astra.sys.rmi.*;import javax.swing.JOptionPane;import srcastra.astra.sys.classetransfert.*;import srcastra.astra.sys.reseaux.*;import srcastra.astra.gui.sys.*;/** * * @author  Thomas */public class ServeurConnect {Loginusers_T currentUser;        /** Creates a new instance of ServeurConnect */  /*  public static void main(String[] args){        astrainterface serveur2=null;         Loginusers_T tmpgestion2=null;      new ServeurConnect().connectServeur(serveur2,tmpgestion2);      }*/public DossierRmiInterface dossierInterface;    public ServeurConnect() {    }    public  void connectServeur() {     /*   String ip = javax.swing.JOptionPane.showInputDialog(null, "IP du serveur ?");        if (ip == null || ip.equals("")) {            ip = "192.168.1.53";        }*/        String ip = "localhost";      /*  RmiConnection rc = new RmiConnection(ip,"8000");        rc.setRmiObjectName("astra");*/        RmiConnection rc = new RmiConnection(ip, "62401");        rc.setVersion("1.6");        rc.setRmiObjectName("astran99");        if (!rc.connect()) {            JOptionPane.showMessageDialog(null, "Impossible de se connecter au serveur");            System.exit(0);        }        this.serveur = new BufferedClient(rc.getServeur());        if (!rc.connect()) {            JOptionPane.showMessageDialog(null, "Impossible de se connecter au serveur");            System.exit(0);        }        serveur2=rc.getServeur();        BufferedClient tmp=new BufferedClient(serveur2);        serveur2=tmp;        System.out.println("réception du serveur ok");         try {            Loginusers_T[] loginUser_T=serveur2.returnusers(1);            int  lu_index=0;             for (int i=0; i < loginUser_T.length; i++) {                if (loginUser_T[i].getUrlogin().equals("ADMIN")) {                lu_index = i;                break;            }        }            loginUser_T[1].setUrpassword("99001");            srcastra.astra.sys.rmi.utils.Systeminfo test=new  srcastra.astra.sys.rmi.utils.Systeminfo();            Userinfo_T infodistante=new Userinfo_T(test.getOsname(),test.getOsversion(),test.getJvmversion(),test.getUsername(),test.getIpadresse());                                 tmpgestion2 = serveur2.userautorisation(loginUser_T[1],infodistante);                     currentUser=tmpgestion2;            dossierInterface=serveur2.renvDossierRmiObject(tmpgestion2.getUrcleunik());        }        catch (java.rmi.RemoteException re) {          re.printStackTrace();//  ErreurScreenLibrary.displayErreur(this, ErreurScreenLibrary.REMOTE_EXCEPTION, srcastra.astra.Astra.DEBUG, re);        }          //this.serveur = rc.getServeur();    }     public  void connectServeur(String user,String pass) {        /*String ip = javax.swing.JOptionPane.showInputDialog(null, "IP du serveur ?");        if (ip == null || ip.equals("")) {            ip = "192.168.1.53";        }*/        String ip = "192.168.1.65";        RmiConnection rc = new RmiConnection(ip,"8000");        rc.setRmiObjectName("astraimplementalpha");        if (!rc.connect()) {            JOptionPane.showMessageDialog(null, "Impossible de se connecter au serveur");            System.exit(0);        }        serveur2=rc.getServeur();        BufferedClient tmp=new BufferedClient(serveur2);        serveur2=tmp;        System.out.println("réception du serveur ok");         try {            Loginusers_T[] loginUser_T=serveur2.returnusers(1);            int  lu_index=0;             for (int i=0; i < loginUser_T.length; i++) {                if (loginUser_T[i].getUrlogin().equals(user)) {                lu_index = i;                break;            }        }            loginUser_T[lu_index].setUrpassword(pass);            srcastra.astra.sys.rmi.utils.Systeminfo test=new  srcastra.astra.sys.rmi.utils.Systeminfo();            Userinfo_T infodistante=new Userinfo_T(test.getOsname(),test.getOsversion(),test.getJvmversion(),test.getUsername(),test.getIpadresse());                                 tmpgestion2 = serveur2.userautorisation(loginUser_T[lu_index],infodistante);                     currentUser=tmpgestion2;            dossierInterface=serveur2.renvDossierRmiObject(tmpgestion2.getUrcleunik());        }        catch (java.rmi.RemoteException re) {          re.printStackTrace();//  ErreurScreenLibrary.displayErreur(this, ErreurScreenLibrary.REMOTE_EXCEPTION, srcastra.astra.Astra.DEBUG, re);        }      }public static void main (String[] args){    new ServeurConnect().connectServeur();    }public  astrainterface serveur2; public  Loginusers_T tmpgestion2;//public static Object[][] columnsData =private astrainterface serveur;public SocketClient  sockclie;private void updateAllFields(String tmp,int x){  System.out.println(tmp);   }private void loadata(){     try{        boolean sw=false;        serveur.renvSignalitiques(currentUser.getUrlmcleunik(),currentUser.getUrcleunik(),1,serveur.COMBO_PAYS,serveur.COMBO_PAYS_CAS1,sw);        if(!sw)            updateAllFields("Chargement des Pays pour le cas 1 : terminer", 1);        else           updateAllFields("Liste des pays OK", 1);        serveur.renvSignalitiques(currentUser.getUrlmcleunik(),currentUser.getUrcleunik(),1,serveur.COMBO_CODE_POST,serveur.COMBO_CODE_POST_CAS+currentUser.getUrlmcleunik(),sw);        updateAllFields("Chargement des Codes postaux pour le cas 1 : terminer", 3);        serveur.renvSignalitiques(currentUser.getUrlmcleunik(),currentUser.getUrcleunik(),1,serveur.COMBO_DEVISE,serveur.COMBO_DEVISECAS+currentUser.getUrlmcleunik(),sw);        updateAllFields("Chargement des Devises pour le cas 1 : terminer", 5);        serveur.renvSignalitiques(currentUser.getUrlmcleunik(),currentUser.getUrcleunik(),1,serveur.COMBO_TITREPERSONNES,serveur.COMBO_TITREPERSONNESCAS+currentUser.getUrlmcleunik(),sw);        updateAllFields("Chargement des Titres des personnes pour le cas 1 : terminer", 7);        serveur.renvSignalitiques(currentUser.getUrlmcleunik(),currentUser.getUrcleunik(),1,serveur.COMBO_LANGUE,serveur.COMBO_LANGUECAS1,sw);        updateAllFields("Chargement des Langues pour le cas 1 : terminer", 9);        serveur.renvSignalitiques(currentUser.getUrlmcleunik(),currentUser.getUrcleunik(),1,serveur.COMBO_DESTINATION,serveur.COMBO_DESTINATIONCAS1,sw);         updateAllFields("Chargement des Destinations pour le cas 1 : terminer", 11);        serveur.renvSignalitiques(currentUser.getUrlmcleunik(),currentUser.getUrcleunik(),1,serveur.COMBO_COMPAGNIE,serveur.COMBO_COMPAGNIECAS1,sw);         updateAllFields("Chargement des Compagnie pour le cas 1 : terminer", 13);        serveur.renvSignalitiques(currentUser.getUrlmcleunik(),currentUser.getUrcleunik(),1,serveur.COMBO_COMPTE,serveur.COMBO_COMPTECAS+currentUser.getUrlmcleunik(),sw);          updateAllFields("Chargement des Comptes pour le cas 1 : terminer", 15);        serveur.renvSignalitiques(currentUser.getUrlmcleunik(),currentUser.getUrcleunik(),1,astrainterface.COMBO_TVA_TYPE,astrainterface.COMBO_TVA_TYPECAS1,true);        updateAllFields("Chargement des Comptes pour le cas 2 : terminer", 17);        updateAllFields("Chargement des Tva : terminer", 19);        serveur.renvcombo('f',currentUser.getUrcleunik(),currentUser.getUrlmcleunik(),'p',"", 1,astrainterface.COMBO_FOURNISSEURCAS1,true);        updateAllFields("Chargement des Fournisseur cas 1", 20);        serveur.renvSignalitiques(currentUser.getUrlmcleunik(),currentUser.getUrcleunik(),1,astrainterface.COMBO_TRANSPORT,astrainterface.COMBO_TRANSPORTCAS+currentUser.getUrlmcleunik(),true);        updateAllFields("Chargement des Comptes pour le cas 2 : terminer", 21);        serveur.renvSignalitiques(currentUser.getUrlmcleunik(),currentUser.getUrcleunik(),1,astrainterface.COMBO_LOGEMENT,astrainterface.COMBO_LOGEMENTCAS+currentUser.getUrlmcleunik(),true);        serveur.renvSignalitiques(currentUser.getUrlmcleunik(),currentUser.getUrcleunik(),1,astrainterface.COMBO_EMBARQDEBARQ,astrainterface.COMBO_EMBARQDEBARQCAS1,true);        serveur.renvSignalitiques(currentUser.getUrlmcleunik(),currentUser.getUrcleunik(),1,astrainterface.COMBO_NATIONALITE,astrainterface.COMBO_NATIONALITE_CAS1,true);        serveur.workWithDecision(null,currentUser.getUrcleunik(),srcastra.astra.gui.components.actions.actionToolBar.ActionToolBar.ACT_READ,null,0,0,01,srcastra.astra.sys.configuration.AbstractRequete.DECSRIPTIF_LOG);        serveur.workWithDecision(null,currentUser.getUrcleunik(),srcastra.astra.gui.components.actions.actionToolBar.ActionToolBar.ACT_READ,null,0,0,01,srcastra.astra.sys.configuration.AbstractRequete.DIVERS);    //    serveur.workWithDecision(null,currentUser.getUrcleunik(),srcastra.astra.gui.components.actions.actionToolBar.ActionToolBar.ACT_READ,null,0,0,01,srcastra.astra.sys.configuration.AbstractRequete.FACTURE);        serveur.workWithDecision(null,currentUser.getUrcleunik(),srcastra.astra.gui.components.actions.actionToolBar.ActionToolBar.ACT_READ,null,0,0,01,srcastra.astra.sys.configuration.AbstractRequete.IMPRESSION);    //    serveur.workWithDecision(null,currentUser.getUrcleunik(),srcastra.astra.gui.components.actions.actionToolBar.ActionToolBar.ACT_READ,null,0,0,01,srcastra.astra.sys.configuration.AbstractRequete.LANGUESYS);        serveur.workWithDecision(null,currentUser.getUrcleunik(),srcastra.astra.gui.components.actions.actionToolBar.ActionToolBar.ACT_READ,null,0,0,01,srcastra.astra.sys.configuration.AbstractRequete.MEMO);        serveur.workWithDecision(null,currentUser.getUrcleunik(),srcastra.astra.gui.components.actions.actionToolBar.ActionToolBar.ACT_READ,null,0,0,01,srcastra.astra.sys.configuration.AbstractRequete.SUP_RECUC);        serveur.workWithDecision(null,currentUser.getUrcleunik(),srcastra.astra.gui.components.actions.actionToolBar.ActionToolBar.ACT_READ,null,0,0,01,srcastra.astra.sys.configuration.AbstractRequete.TVA_REGIME);        serveur.workWithDecision(null,currentUser.getUrcleunik(),srcastra.astra.gui.components.actions.actionToolBar.ActionToolBar.ACT_READ,null,0,0,01,srcastra.astra.sys.configuration.AbstractRequete.TVA_TYPE);  //      serveur.workWithDecision(null,currentUser.getUrcleunik(),srcastra.astra.gui.components.actions.actionToolBar.ActionToolBar.ACT_READ,null,0,0,01,srcastra.astra.sys.configuration.AbstractRequete.TYPE_PAYEMENT);        //  getServeur().workWithDecision(null,parent.getCurrentUser().getUrcleunik(),ActionToolBar.ACT_READ,null,0,0,0l,typDecision)).generateTable(m_parent.typeProduit);        serveur.renvParamCompta(currentUser.getUrcleunik());        Loginusers_T initUser=new Loginusers_T();        initUser.setUrcleunik(currentUser.getUrcleunik());       // MainScreenModule parent=new substitutDossierModule(null,initUser);     //   LoadTvaFrame load=new LoadTvaFrame(0,parent);      //  load.loadTva(serveur,initUser);        }      catch (srcastra.astra.sys.rmi.Exception.ServeurSqlFailure se) {            ErreurScreenLibrary.displayErreur(null, ErreurScreenLibrary.SERVEUR_SQL_FAILURE, srcastra.astra.Astra.DEBUG, se);        }         catch (java.rmi.RemoteException re) {            ErreurScreenLibrary.displayErreur(null, ErreurScreenLibrary.REMOTE_EXCEPTION, srcastra.astra.Astra.DEBUG, re);        }    }}